begin_compilation
  name " SubstrateHostedCompilation-22089[ftest30.example_ftest30(int, int, int)]"
  method "SubstrateHostedCompilation-22089[ftest30.example_ftest30(int, int, int)]"
  date 1585080606835
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j136  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j125 
index: - 
=== Succesors ===
=== Usages ===
j136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j125 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j136 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@6d195610
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
lastLocationAccess: - 
=== Succesors ===
next: j126 
=== Usages ===
v128 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 lastLocationAccess: - #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
v128 
=== Predecessor ===
j136 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2cee72b8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j136 
y: j126 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j136 y: j126  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?182 ?185 ?184 v17 ?183 v118 ?181 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?182 ?185 ?184 v35 ?183 ?181 v97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
j126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v129 #falseSuccessor: v130  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1b91db90
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a5 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a5  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v137 
stateDuring: ?181 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v137 stateDuring: ?181 #next: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i117 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i50 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a106 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a106  <|@  <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@746cb954
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 ?182 ?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i12 
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v138 
stateDuring: ?182 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v138 stateDuring: ?182 #next: v96  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
a106 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1f79fb25
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i12 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v139 
stateDuring: ?183 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v139 stateDuring: ?183 #next: v103  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v14 
values: i50 i51 
=== Succesors ===
=== Usages ===
?185 v17 i51 ?184 v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v14 values: i50 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v13 
=== Succesors ===
next: v21 
=== Usages ===
i117 v18 v52 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v13 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i1 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v20 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a85 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a85  <|@  <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@3c660b90
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i117 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a85 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v140 
stateDuring: ?184 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v140 stateDuring: ?184 #next: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a85 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i117 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v37 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v110 v111 
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v111 #next: j200  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a191 
=== Succesors ===
next: j201 
=== Usages ===
j218 
=== Predecessor ===
v109 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a191 #next: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j202 
=== Usages ===
j218 
=== Predecessor ===
j200 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j203 
=== Usages ===
v365 v366 
=== Predecessor ===
j201 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j203  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j203 v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
=== Succesors ===
next: j204 
=== Usages ===
j208 v357 a224 v358 v359 v360 v361 v362 v363 v364 
=== Predecessor ===
j202 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - #next: j204  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j204 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v366 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
v209 
=== Predecessor ===
j203 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v366 lastLocationAccess: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j203 
y: j207 
=== Succesors ===
=== Usages ===
v209 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j207  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2cee72b8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j204 
y: j208 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j204 y: j208  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j200 
y: j201 
=== Succesors ===
=== Usages ===
a219 v242 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j200 y: j201  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
j204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a219 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a219  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
rethrowException: false
sourceFile: ftest30.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a219 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?38 
arguments: j218 
=== Succesors ===
next: v220 
=== Usages ===
a226 
=== Predecessor ===
v210 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?38 arguments: j218 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
a219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - value: j208 stateAfter: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v358 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v358 #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v357 
lastLocationAccess: - 
value: j218 
stateAfter: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v357 lastLocationAccess: - value: j218 stateAfter: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 v243 v244 v245 v246 v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v359 lastLocationAccess: - value: j216 stateAfter: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v360 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v360 lastLocationAccess: - value: j216 stateAfter: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v361 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v361 lastLocationAccess: - value: j216 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v362 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v362 lastLocationAccess: - value: j216 stateAfter: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v363 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v363 lastLocationAccess: - value: j216 stateAfter: - #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v364 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v364 lastLocationAccess: - value: j216 stateAfter: - #next: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j203 
=== Succesors ===
next: v225 
=== Usages ===
a226 
=== Predecessor ===
v248 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j203 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
a224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v221 
values: a219 a224 
=== Succesors ===
=== Usages ===
a322 a155 v354 a145 v355 v356 a258 a293 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v221 values: a219 a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v220 v225 
=== Succesors ===
next: v154 
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v225 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a163 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v356 
lastLocationAccess: - 
value: a163 
stateAfter: - 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v356 lastLocationAccess: - value: a163 stateAfter: - #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j282 
=== Usages ===
v367 j272 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a258 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a258 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v367 
lastLocationAccess: - 
=== Succesors ===
next: v260 
=== Usages ===
v262 v267 
=== Predecessor ===
a258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v367 lastLocationAccess: - #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 v296 v325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j282 
y: j261 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j282 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v283 v284 v312 v313 v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j274 j305 j334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j276 j306 j335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 j308 j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 v300 v329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v263 #falseSuccessor: v264  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j272 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a258 
=== Succesors ===
next: v265 
=== Usages ===
v368 j274 j277 
=== Predecessor ===
v264 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a258 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j282 
y: j266 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j282 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
j272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v268 #falseSuccessor: v269  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j272 
y: j273 
=== Succesors ===
=== Usages ===
j276 v369 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j272 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j274 
y: j275 
=== Succesors ===
=== Usages ===
j277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j274 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j272 
y: j276 
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j272 y: j276  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j277 
y: i278 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j277 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j274 
index: j279 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j274 index: j279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v369 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v369 lastLocationAccess: - value: i249 stateAfter: - #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v368 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v368 lastLocationAccess: - value: i249 stateAfter: - #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v287 v288 v289 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v288 v289 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
lastLocationAccess: - 
value: a162 
stateAfter: - 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v355 lastLocationAccess: - value: a162 stateAfter: - #next: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j311 
=== Usages ===
v370 j304 
=== Predecessor ===
v150 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a293 
index: - 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a293 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v370 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
v296 v300 
=== Predecessor ===
a293 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v370 lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j311 
y: j261 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j311 y: j261  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
j311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j304 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a293 
=== Succesors ===
next: v299 
=== Usages ===
v371 j305 j307 
=== Predecessor ===
v298 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a293 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j311 
y: j266 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j311 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
j304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v301 #falseSuccessor: v302  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j304 
y: j273 
=== Succesors ===
=== Usages ===
j306 v372 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j304 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j305 
y: j275 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j305 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j304 
y: j306 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j304 y: j306  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j307 
y: i278 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j307 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j305 
index: j308 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: j308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v372 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v372 lastLocationAccess: - value: i249 stateAfter: - #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j304 
index: - 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v371 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v371 lastLocationAccess: - value: i249 stateAfter: - #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v316 v317 v318 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v316 v317 v318 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a145 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a226 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
lastLocationAccess: - 
value: a145 
stateAfter: - 
=== Succesors ===
next: a322 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v354 lastLocationAccess: - value: a145 stateAfter: - #next: a322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j340 
=== Usages ===
v373 j333 
=== Predecessor ===
v146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j340  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a322 
index: - 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a322 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v373 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
v325 v329 
=== Predecessor ===
a322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v373 lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j340 
y: j261 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j340 y: j261  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
j340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a322 
=== Succesors ===
next: v328 
=== Usages ===
v374 j334 j336 
=== Predecessor ===
v327 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a322 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j340 
y: j266 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j340 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
j333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j333 
y: j273 
=== Succesors ===
=== Usages ===
j335 v375 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j333 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j334 
y: j275 
=== Succesors ===
=== Usages ===
j336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j334 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j333 
y: j335 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j333 y: j335  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j336 
y: i278 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j336 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j334 
index: j337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v375 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v375 lastLocationAccess: - value: i249 stateAfter: - #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v374 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v374 lastLocationAccess: - value: i249 stateAfter: - #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v345 v346 v347 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v346 v347 #next: v156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: a87 
=== Usages ===
v157 ?124 v159 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: a87  <|@  <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@29be1ad7
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a155 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a155  <|@  <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@3889b0ad
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?124 ?67 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 19
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a121 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a121  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - 
=== Succesors ===
=== Usages ===
?80 ?187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: -  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a121 
materializedValue: a155 
=== Succesors ===
=== Usages ===
?80 ?187 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a121 materializedValue: a155  <|@  <|@
tid ?187 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?82 
values: - 
virtualObjectMappings: ?124 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?82 values: - virtualObjectMappings: ?124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v157 
stateDuring: ?187 
=== Succesors ===
next: v81 
=== Usages ===
?80 
=== Predecessor ===
a155 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v157 stateDuring: ?187 #next: v81  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j158 
=== Usages ===
=== Predecessor ===
a87 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
v159 
=== Predecessor ===
v81 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v159  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest30.example_ftest30(ftest30.java:19) [bci: 28]
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 1
=== Inputs ===
outerFrameState: ?82 
values: - a87 
virtualObjectMappings: ?124 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?82 values: - a87 virtualObjectMappings: ?124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?80 
arguments: a155 j158 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
j158 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?80 arguments: a155 j158 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a86  <|@  <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6879c44a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i117 
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v141 
stateDuring: ?185 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v141 stateDuring: ?185 #next: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
a86 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 36]
stamp: i32
=== Inputs ===
x: i117 
y: i50 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i117 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v114 v115 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v115 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 45]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@644f785e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a56 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a56  <|@  <|@
tid ?186 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v161 
stateDuring: ?186 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v161 stateDuring: ?186 #next: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 47]
rethrowException: false
sourceFile: ftest30.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j136  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v353 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j125 
index: - 
=== Succesors ===
=== Usages ===
j136 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j125 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j136 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@6d195610
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v353 
lastLocationAccess: - 
=== Succesors ===
next: j126 
=== Usages ===
v128 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v353 lastLocationAccess: - #next: j126  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j126 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v127 
=== Usages ===
v128 
=== Predecessor ===
j136 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v127  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2cee72b8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j136 
y: j126 
=== Succesors ===
=== Usages ===
v127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j136 y: j126  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?182 ?185 ?184 v17 ?183 v118 ?181 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?182 ?185 ?184 v35 ?183 ?181 v97 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v129 
falseSuccessor: v130 
=== Usages ===
=== Predecessor ===
j126 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v129 #falseSuccessor: v130  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@1b91db90
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a5 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a5  <|@  <|@
tid ?181 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 - 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v137 
stateDuring: ?181 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v137 stateDuring: ?181 #next: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v93  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 36]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i117 v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i50 
=== Succesors ===
=== Usages ===
v93 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v91 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v91 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v91 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a106 
=== Usages ===
=== Predecessor ===
v93 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a106  <|@  <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@746cb954
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 ?182 ?183 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?182 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i12 
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a106 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v138 
stateDuring: ?182 
=== Succesors ===
next: v96 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v138 stateDuring: ?182 #next: v96  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v100 
=== Usages ===
=== Predecessor ===
a106 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v100  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v100 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v99 
falseSuccessor: v98 
=== Usages ===
=== Predecessor ===
v96 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v99 #falseSuccessor: v98  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v111 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v111  <|@  <|@
f <@*|@fixed>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v99 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v98 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1f79fb25
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?183 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i12 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v139 
stateDuring: ?183 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v98 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v139 stateDuring: ?183 #next: v103  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v103 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i117 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v14 
values: i50 i51 
=== Succesors ===
=== Usages ===
?185 v17 i51 ?184 v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v14 values: i50 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v13 
=== Succesors ===
next: v21 
=== Usages ===
i117 v18 v52 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v13 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i1 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i117 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v20 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a85 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a85  <|@  <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@3c660b90
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?184 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i117 
=== Succesors ===
=== Usages ===
a85 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a85 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v140 
stateDuring: ?184 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v140 stateDuring: ?184 #next: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a85 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@55ae6807
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i117 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i117  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v37 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v110 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v110  <|@  <|@
f <@*|@fixed>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v110 v111 
=== Succesors ===
next: j200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v110 v111 #next: j200  <|@  <|@
f <@~|@floating>@ <|@
tid a191 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j200 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j200 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a191 
=== Succesors ===
next: j201 
=== Usages ===
j218 
=== Predecessor ===
v109 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a191 #next: j201  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j201 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j202 
=== Usages ===
j218 
=== Predecessor ===
j200 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j202  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j202 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j203 
=== Usages ===
v365 v366 
=== Predecessor ===
j201 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j203  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
result [v13|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j203 v212 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j203 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
=== Succesors ===
next: j204 
=== Usages ===
j208 v357 a224 v358 v359 v360 v361 v362 v363 v364 
=== Predecessor ===
j202 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - #next: j204  <|@  <|@
f <@~|@floating>@ <|@
tid v366 <|@
result [v13|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j202 
index: - 
=== Succesors ===
=== Usages ===
j204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j202 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j204 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v366 
lastLocationAccess: - 
=== Succesors ===
next: v206 
=== Usages ===
v209 
=== Predecessor ===
j203 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v366 lastLocationAccess: - #next: v206  <|@  <|@
f <@~|@floating>@ <|@
tid j207 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j208 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j208 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j203 
y: j207 
=== Succesors ===
=== Usages ===
v209 v212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j203 y: j207  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@2cee72b8
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j204 
y: j208 
=== Succesors ===
=== Usages ===
v206 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j204 y: j208  <|@  <|@
f <@~|@floating>@ <|@
tid j218 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j200 
y: j201 
=== Succesors ===
=== Usages ===
a219 v242 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j200 y: j201  <|@  <|@
f <@*|@fixed>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
j204 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a219 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a219  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:19) [bci: 24]
rethrowException: false
sourceFile: ftest30.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a219 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?38 
arguments: j218 
=== Succesors ===
next: v220 
=== Usages ===
a226 
=== Predecessor ===
v210 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?38 arguments: j218 #next: v220  <|@  <|@
f <@*|@fixed>@ <|@
tid v220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
a219 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v365 
lastLocationAccess: - 
value: j208 
stateAfter: - 
=== Succesors ===
next: v229 
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v365 lastLocationAccess: - value: j208 stateAfter: - #next: v229  <|@  <|@
f <@~|@floating>@ <|@
tid v358 <|@
result [v14|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v229 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v358 
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v358 #next: v242  <|@  <|@
f <@~|@floating>@ <|@
tid v357 <|@
result [v14|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v357 
lastLocationAccess: - 
value: j218 
stateAfter: - 
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v357 lastLocationAccess: - value: j218 stateAfter: - #next: v243  <|@  <|@
f <@~|@floating>@ <|@
tid v359 <|@
result [v14|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j216 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v248 v243 v244 v245 v246 v247 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v359 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v359 lastLocationAccess: - value: j216 stateAfter: - #next: v244  <|@  <|@
f <@~|@floating>@ <|@
tid v360 <|@
result [v14|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v360 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v360 lastLocationAccess: - value: j216 stateAfter: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid v361 <|@
result [v14|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v361 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v361 lastLocationAccess: - value: j216 stateAfter: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid v362 <|@
result [v14|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v362 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v362 lastLocationAccess: - value: j216 stateAfter: - #next: v247  <|@  <|@
f <@~|@floating>@ <|@
tid v363 <|@
result [v14|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v363 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v363 lastLocationAccess: - value: j216 stateAfter: - #next: v248  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
result [v14|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j203 
index: - 
=== Succesors ===
=== Usages ===
v248 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j203 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v364 
lastLocationAccess: - 
value: j216 
stateAfter: - 
=== Succesors ===
next: a224 
=== Usages ===
=== Predecessor ===
v247 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v364 lastLocationAccess: - value: j216 stateAfter: - #next: a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a224 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j203 
=== Succesors ===
next: v225 
=== Usages ===
a226 
=== Predecessor ===
v248 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j203 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v221 
=== Predecessor ===
a224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a226 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v221 
values: a219 a224 
=== Succesors ===
=== Usages ===
a322 a155 v354 a145 v355 v356 a258 a293 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v221 values: a219 a224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v220 v225 
=== Succesors ===
next: v154 
=== Usages ===
a226 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v220 v225 #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid v356 <|@
result [v20|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a163 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v154 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v356 
lastLocationAccess: - 
value: a163 
stateAfter: - 
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v221 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v356 lastLocationAccess: - value: a163 stateAfter: - #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j282 
=== Usages ===
v367 j272 
=== Predecessor ===
v154 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j282  <|@  <|@
f <@~|@floating>@ <|@
tid v367 <|@
result [v20|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a258 
index: - 
=== Succesors ===
=== Usages ===
j282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a258 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j282 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v367 
lastLocationAccess: - 
=== Succesors ===
next: v260 
=== Usages ===
v262 v267 
=== Predecessor ===
a258 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v367 lastLocationAccess: - #next: v260  <|@  <|@
f <@~|@floating>@ <|@
tid j261 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v262 v296 v325 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j282 
y: j261 
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j282 y: j261  <|@  <|@
f <@~|@floating>@ <|@
tid i249 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v283 v284 v312 v313 v341 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j273 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j274 j305 j334 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j275 <|@
result long[4136|0x1028] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j276 j306 j335 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i278 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j279 j308 j337 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j266 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v267 v300 v329 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v262 
=== Succesors ===
trueSuccessor: v263 
falseSuccessor: v264 
=== Usages ===
=== Predecessor ===
j282 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v262 #trueSuccessor: v263 #falseSuccessor: v264  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@*|@fixed>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j272 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j272  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j272 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a258 
=== Succesors ===
next: v265 
=== Usages ===
v368 j274 j277 
=== Predecessor ===
v264 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a258 #next: v265  <|@  <|@
f <@~|@floating>@ <|@
tid v267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j282 
y: j266 
=== Succesors ===
=== Usages ===
v265 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j282 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v267 
=== Succesors ===
trueSuccessor: v268 
falseSuccessor: v269 
=== Usages ===
=== Predecessor ===
j272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v267 #trueSuccessor: v268 #falseSuccessor: v269  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid j274 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j272 
y: j273 
=== Succesors ===
=== Usages ===
j276 v369 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j272 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j276 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j274 
y: j275 
=== Succesors ===
=== Usages ===
j277 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j274 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j277 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j272 
y: j276 
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j272 y: j276  <|@  <|@
f <@~|@floating>@ <|@
tid j279 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j277 
y: i278 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j277 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
result [v24|QWORD + v27|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j274 
index: j279 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j274 index: j279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v369 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v289 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v369 lastLocationAccess: - value: i249 stateAfter: - #next: v289  <|@  <|@
f <@*|@fixed>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v265 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
result [v23|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j272 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j272 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v368 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v368 lastLocationAccess: - value: i249 stateAfter: - #next: v288  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
v284 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v287 v288 v289 
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v287 v288 v289 #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid v355 <|@
result [v20|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a162 <|@
result v28|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v355 
lastLocationAccess: - 
value: a162 
stateAfter: - 
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v355 lastLocationAccess: - value: a162 stateAfter: - #next: a293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j311 
=== Usages ===
v370 j304 
=== Predecessor ===
v150 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j311  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
result [v20|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a293 
index: - 
=== Succesors ===
=== Usages ===
j311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a293 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v370 
lastLocationAccess: - 
=== Succesors ===
next: v295 
=== Usages ===
v296 v300 
=== Predecessor ===
a293 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v370 lastLocationAccess: - #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j311 
y: j261 
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j311 y: j261  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v297 
falseSuccessor: v298 
=== Usages ===
=== Predecessor ===
j311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v297 #falseSuccessor: v298  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v316  <|@  <|@
f <@*|@fixed>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v297 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j304 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j304 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a293 
=== Succesors ===
next: v299 
=== Usages ===
v371 j305 j307 
=== Predecessor ===
v298 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a293 #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j311 
y: j266 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j311 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v300 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v302 
=== Usages ===
=== Predecessor ===
j304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v300 #trueSuccessor: v301 #falseSuccessor: v302  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j304 
y: j273 
=== Succesors ===
=== Usages ===
j306 v372 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j304 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j305 
y: j275 
=== Succesors ===
=== Usages ===
j307 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j305 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j307 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j304 
y: j306 
=== Succesors ===
=== Usages ===
j308 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j304 y: j306  <|@  <|@
f <@~|@floating>@ <|@
tid j308 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j307 
y: i278 
=== Succesors ===
=== Usages ===
v372 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j307 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v372 <|@
result [v31|QWORD + v34|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j305 
index: j308 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j305 index: j308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v372 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v301 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v372 lastLocationAccess: - value: i249 stateAfter: - #next: v318  <|@  <|@
f <@*|@fixed>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid v371 <|@
result [v30|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j304 
index: - 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j304 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v371 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v371 lastLocationAccess: - value: i249 stateAfter: - #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v315 
=== Predecessor ===
v313 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v316 v317 v318 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v316 v317 v318 #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid v354 <|@
result [v20|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a226 
index: - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a226 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a145 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a226 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a226  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v354 
lastLocationAccess: - 
value: a145 
stateAfter: - 
=== Succesors ===
next: a322 
=== Usages ===
=== Predecessor ===
v315 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v354 lastLocationAccess: - value: a145 stateAfter: - #next: a322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a322 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: j340 
=== Usages ===
v373 j333 
=== Predecessor ===
v146 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: j340  <|@  <|@
f <@~|@floating>@ <|@
tid v373 <|@
result [v20|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a322 
index: - 
=== Succesors ===
=== Usages ===
j340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a322 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j340 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v373 
lastLocationAccess: - 
=== Succesors ===
next: v324 
=== Usages ===
v325 v329 
=== Predecessor ===
a322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v373 lastLocationAccess: - #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j340 
y: j261 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j340 y: j261  <|@  <|@
f <@*|@fixed>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v325 
=== Succesors ===
trueSuccessor: v326 
falseSuccessor: v327 
=== Usages ===
=== Predecessor ===
j340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v325 #trueSuccessor: v326 #falseSuccessor: v327  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v345 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v345  <|@  <|@
f <@*|@fixed>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j333 
=== Usages ===
=== Predecessor ===
v324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j333 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a322 
=== Succesors ===
next: v328 
=== Usages ===
v374 j334 j336 
=== Predecessor ===
v327 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a322 #next: v328  <|@  <|@
f <@~|@floating>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j340 
y: j266 
=== Succesors ===
=== Usages ===
v328 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j340 y: j266  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v329 
=== Succesors ===
trueSuccessor: v330 
falseSuccessor: v331 
=== Usages ===
=== Predecessor ===
j333 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v329 #trueSuccessor: v330 #falseSuccessor: v331  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v341  <|@  <|@
f <@~|@floating>@ <|@
tid j334 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j333 
y: j273 
=== Succesors ===
=== Usages ===
j335 v375 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j333 y: j273  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j334 
y: j275 
=== Succesors ===
=== Usages ===
j336 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j334 y: j275  <|@  <|@
f <@~|@floating>@ <|@
tid j336 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j333 
y: j335 
=== Succesors ===
=== Usages ===
j337 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j333 y: j335  <|@  <|@
f <@~|@floating>@ <|@
tid j337 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j336 
y: i278 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j336 y: i278  <|@  <|@
f <@~|@floating>@ <|@
tid v375 <|@
result [v38|QWORD + v41|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j334 
index: j337 
=== Succesors ===
=== Usages ===
v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j334 index: j337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v375 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v347 
=== Usages ===
=== Predecessor ===
v330 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v375 lastLocationAccess: - value: i249 stateAfter: - #next: v347  <|@  <|@
f <@*|@fixed>@ <|@
tid v347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v328 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
result [v37|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j333 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v374 
lastLocationAccess: - 
value: i249 
stateAfter: - 
=== Succesors ===
next: v346 
=== Usages ===
=== Predecessor ===
v331 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v374 lastLocationAccess: - value: i249 stateAfter: - #next: v346  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v344 
=== Predecessor ===
v342 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v345 v346 v347 
=== Succesors ===
next: v156 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v345 v346 v347 #next: v156  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a155 
=== Usages ===
=== Predecessor ===
v344 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a155  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a155 <|@
result v20|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a226 
=== Succesors ===
next: a87 
=== Usages ===
v157 ?124 v159 
=== Predecessor ===
v156 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a226 #next: a87  <|@  <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@29be1ad7
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a155 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a155  <|@  <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@3889b0ad
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?124 ?67 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?67 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 19
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a121 
=== Succesors ===
=== Usages ===
?82 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a121  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?67 
values: - 
=== Succesors ===
=== Usages ===
?80 ?187 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?67 values: -  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a121 
materializedValue: a155 
=== Succesors ===
=== Usages ===
?80 ?187 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a121 materializedValue: a155  <|@  <|@
tid ?187 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?82 
values: - 
virtualObjectMappings: ?124 
=== Succesors ===
=== Usages ===
a87 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?82 values: - virtualObjectMappings: ?124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a87 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v157 
stateDuring: ?187 
=== Succesors ===
next: v81 
=== Usages ===
?80 
=== Predecessor ===
a155 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v157 stateDuring: ?187 #next: v81  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j158 
=== Usages ===
=== Predecessor ===
a87 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j158 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
v159 
=== Predecessor ===
v81 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v159  <|@  <|@
tid ?80 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest30.example_ftest30(ftest30.java:19) [bci: 28]
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 1
=== Inputs ===
outerFrameState: ?82 
values: - a87 
virtualObjectMappings: ?124 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?82 values: - a87 virtualObjectMappings: ?124  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?80 
arguments: a155 j158 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
j158 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?80 arguments: a155 j158 #next: v160  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest30.example_ftest30(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a86 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a86  <|@  <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6879c44a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?185 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 i117 
=== Succesors ===
=== Usages ===
a86 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 i117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a86 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 32
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v141 
stateDuring: ?185 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v141 stateDuring: ?185 #next: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
a86 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 36]
stamp: i32
=== Inputs ===
x: i117 
y: i50 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i117 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v113 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v114 v115 
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v114 v115 #next: v88  <|@  <|@
f <@~|@floating>@ <|@
tid a56 <|@
result v46|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 45]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@644f785e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a56 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a56  <|@  <|@
tid ?186 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v161 
stateDuring: ?186 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v161 stateDuring: ?186 #next: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v88 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v170  <|@  <|@
f <@~|@floating>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v170 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v171 
=== Succesors ===
trueSuccessor: v172 
falseSuccessor: v173 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v171 #trueSuccessor: v172 #falseSuccessor: v173  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v174 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v174  <|@  <|@
tid ?62 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:22) [bci: 47]
rethrowException: false
sourceFile: ftest30.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?62 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
v172 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?62 #next: v180  <|@  <|@
f <@*|@fixed>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
v170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v179  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest30.example_ftest30(ftest30.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest30.example_ftest30(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest30.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - i2 - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 - i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@435c60f6
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v130 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v133  <|@  <|@
f <@*|@fixed>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: v0|DWORD - v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v45|DWORD] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v46|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v13|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOV [v13|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = LEA [v14|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = SUB (x: v11|QWORD, ~y: v12|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v16|QWORD, y: v15|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD + 24], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v14|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v14|QWORD], y: v17|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v14|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = MOVE v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [v20|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 32], y: v21|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 24], y: v28|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = COMPRESSPOINTER (input: v20|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v20|QWORD[.] + 16], y: v35|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = MOV [v20|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v42|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: v20|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v29|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = AND v30|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = LEA [v31|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = SUB (x: v30|QWORD, ~y: v32|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = SHR v33|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v31|QWORD + v34|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v22|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = AND v23|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = LEA [v24|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = SUB (x: v23|QWORD, ~y: v25|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = SHR v26|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v24|QWORD + v27|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = MOVE v20|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v36|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = AND v37|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = LEA [v38|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = SUB (x: v37|QWORD, ~y: v39|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = SHR v40|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v38|QWORD + v41|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v30|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v23|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v37|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: v0|DWORD - v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[104, 105[[290, 292[[312, 314[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 4[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 1[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[102, 105[[290, 291[[302, 304[[312, 313[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[100, 105[[288, 291[[300, 304[[310, 313[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 84[[324, 327[2 MustHaveRegister 28 ShouldHaveRegister 56 MustHaveRegister 83 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|- [4, 84[[324, 327[4 MustHaveRegister 40 MustHaveRegister 68 ShouldHaveRegister 83 LiveAtLoopEnd  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [14, 88[[92, 100[14 MustHaveRegister 18 ShouldHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q rax|q [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v45|d [54, 80[56 ShouldHaveRegister 68 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q rax|q [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q -1 [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [126, 138[126 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q r14|q [128, 139[128 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q r15|q [130, 144[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [132, 162[132 MustHaveRegister 136 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [134, 140[134 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [136, 144[136 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q v11|q [138, 148[[308, 310[138 MustHaveRegister 148 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q rax|q [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v14|q [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v19|q [166, 305[170 MustHaveRegister 172 MustHaveRegister 182 ShouldHaveRegister 210 MustHaveRegister 212 MustHaveRegister 222 ShouldHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 ShouldHaveRegister 288 ShouldHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q -1 [172, 176[[180, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v20|q [182, 192[[200, 202[182 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [188, 196[188 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v23|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [212, 216[[220, 224[212 MustHaveRegister 214 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v20|q [222, 232[[240, 242[222 MustHaveRegister 228 MustHaveRegister 232 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v30|q [228, 236[228 MustHaveRegister 230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v30|q [232, 234[232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v20|q [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [252, 256[[260, 264[252 MustHaveRegister 254 ShouldHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v20|q [262, 272[[280, 282[262 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|q [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v37|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q rax|q [292, 305[292 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [298, 302[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [74, 75[74 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[v45|d]" v45|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [98, 102[98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[104, 105[[290, 292[[312, 314[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 4[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 1[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[102, 105[[290, 291[[302, 304[[312, 313[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[100, 105[[288, 291[[300, 304[[310, 313[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [4, 12[4 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rsi|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v45|d [54, 58[56 ShouldHaveRegister  "SpillInDominator"
  v9|q QWORD "[rax|q]" v9|q rax|q [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [126, 138[126 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q r14|q [128, 139[128 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q r15|q [130, 144[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q -1 [132, 162[132 MustHaveRegister 136 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [134, 140[134 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q -1 [136, 144[136 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v11|q [138, 148[[308, 310[138 MustHaveRegister 148 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v14|q [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v19|q [166, 289[170 MustHaveRegister 172 MustHaveRegister 182 ShouldHaveRegister 210 MustHaveRegister 212 MustHaveRegister 222 ShouldHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 ShouldHaveRegister 288 ShouldHaveRegister  "OneSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [172, 176[[180, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v20|q [182, 192[[200, 202[182 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q v23|q [188, 196[188 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q -1 [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [212, 216[[220, 224[212 MustHaveRegister 214 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v20|q [222, 232[[240, 242[222 MustHaveRegister 228 MustHaveRegister 232 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q v30|q [228, 236[228 MustHaveRegister 230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v30|q [232, 234[232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v20|q [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [252, 256[[260, 264[252 MustHaveRegister 254 ShouldHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v20|q [262, 272[[280, 282[262 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v37|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v40|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [292, 305[292 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [298, 302[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [74, 75[74 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [98, 102[98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "SpillInDominator"
  v48|d DWORD "[vstack:2|d]" v1|d v1|d [12, 21[ "SpillInDominator"
  v49|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "SpillInDominator"
  v50|d DWORD "[vstack:2|d]" v1|d v1|d [21, 38[ "SpillInDominator"
  v51|q QWORD "[vstack:3|q]" v4|q v4|q [21, 88[[92, 96[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "SpillInDominator"
  v53|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "SpillInDominator"
  v54|d DWORD "[rdx|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "SpillInDominator"
  v55|q QWORD "[rax|q]" v4|q v4|q [96, 100[100 ShouldHaveRegister  "OneSpillStore"
  v56|d DWORD "[vstack:2|d]" v1|d v1|d [42, 43[ "SpillInDominator"
  v57|d DWORD "[vstack:2|d]" v1|d v1|d [43, 54[ "SpillInDominator"
  v58|d DWORD "[vstack:2|d]" v1|d v1|d [54, 58[ "SpillInDominator"
  v59|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "SpillInDominator"
  v60|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "SpillInDominator"
  v61|d DWORD "[vstack:2|d]" v1|d v1|d [58, 59[ "SpillInDominator"
  v62|d DWORD "[vstack:2|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "SpillInDominator"
  v63|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "SpillInDominator"
  v64|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "SpillInDominator"
  v65|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "SpillInDominator"
  v66|d DWORD "[rdx|d]" v1|d v1|d [324, 327[ "SpillInDominator"
  v67|d DWORD "[rdi|d]" v0|d v0|d [324, 327[ "SpillInDominator"
  v68|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "SpillInDominator"
  v69|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "SpillInDominator"
  v70|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "SpillInDominator"
  v71|q QWORD "[vstack:5|q]" v20|q v20|q [289, 296[ "OneSpillStore"
  v72|q QWORD "[rdx|q]" v20|q v20|q [296, 305[300 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[104, 105[[290, 292[[312, 314[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 4[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 1[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[102, 105[[290, 291[[302, 304[[312, 313[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[100, 105[[288, 291[[300, 304[[310, 313[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [4, 12[4 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rsi|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v45|d [54, 58[56 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[rax|q]" v9|q rax|q [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [126, 138[126 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q r14|q [128, 139[128 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q r15|q [130, 144[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q -1 [132, 162[132 MustHaveRegister 136 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [134, 140[134 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q -1 [136, 144[136 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v11|q [138, 148[[308, 310[138 MustHaveRegister 148 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v14|q [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v19|q [166, 289[170 MustHaveRegister 172 MustHaveRegister 182 ShouldHaveRegister 210 MustHaveRegister 212 MustHaveRegister 222 ShouldHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 ShouldHaveRegister 288 ShouldHaveRegister  "OneSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [172, 176[[180, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v20|q [182, 192[[200, 202[182 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q v23|q [188, 196[188 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q -1 [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [212, 216[[220, 224[212 MustHaveRegister 214 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v20|q [222, 232[[240, 242[222 MustHaveRegister 228 MustHaveRegister 232 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q v30|q [228, 236[228 MustHaveRegister 230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v30|q [232, 234[232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v20|q [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [252, 256[[260, 264[252 MustHaveRegister 254 ShouldHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v20|q [262, 272[[280, 282[262 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v37|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v40|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [292, 305[292 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [298, 302[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [74, 75[74 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [98, 102[98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "StoreAtDefinition"
  v48|d DWORD "[vstack:2|d]" v1|d v1|d [12, 21[ "StoreAtDefinition"
  v49|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "StoreAtDefinition"
  v50|d DWORD "[vstack:2|d]" v1|d v1|d [21, 38[ "StoreAtDefinition"
  v51|q QWORD "[vstack:3|q]" v4|q v4|q [21, 88[[92, 96[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "StoreAtDefinition"
  v53|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "StoreAtDefinition"
  v54|d DWORD "[rdx|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "StoreAtDefinition"
  v55|q QWORD "[rax|q]" v4|q v4|q [96, 100[100 ShouldHaveRegister  "OneSpillStore"
  v56|d DWORD "[vstack:2|d]" v1|d v1|d [42, 43[ "StoreAtDefinition"
  v57|d DWORD "[vstack:2|d]" v1|d v1|d [43, 54[ "StoreAtDefinition"
  v58|d DWORD "[vstack:2|d]" v1|d v1|d [54, 58[ "StoreAtDefinition"
  v59|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "StoreAtDefinition"
  v60|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "StoreAtDefinition"
  v61|d DWORD "[vstack:2|d]" v1|d v1|d [58, 59[ "StoreAtDefinition"
  v62|d DWORD "[vstack:2|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "StoreAtDefinition"
  v63|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "StoreAtDefinition"
  v64|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "StoreAtDefinition"
  v65|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "StoreAtDefinition"
  v66|d DWORD "[rdx|d]" v1|d v1|d [324, 327[ "StoreAtDefinition"
  v67|d DWORD "[rdi|d]" v0|d v0|d [324, 327[ "StoreAtDefinition"
  v68|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "StoreAtDefinition"
  v69|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "StoreAtDefinition"
  v70|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "StoreAtDefinition"
  v71|q QWORD "[vstack:5|q]" v20|q v20|q [289, 296[ "OneSpillStore"
  v72|q QWORD "[rdx|q]" v20|q v20|q [296, 305[300 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[104, 105[[290, 292[[312, 314[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 4[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 1[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[102, 105[[290, 291[[302, 304[[312, 313[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[100, 105[[288, 291[[300, 304[[310, 313[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 105[[290, 291[[312, 313[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rdx|d]" v1|d rdx|- [4, 12[4 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rsi|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rax|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rsi|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v45|d [54, 58[56 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[rax|q]" v9|q rax|q [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rdi|q]" v10|q -1 [124, 126[124 MustHaveRegister 126 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rdi|q]" v11|q v10|q [126, 138[126 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q r14|q [128, 139[128 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rcx|q]" v13|q r15|q [130, 144[130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdx|q]" v14|q -1 [132, 162[132 MustHaveRegister 136 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 150 MustHaveRegister 152 MustHaveRegister 154 MustHaveRegister 156 MustHaveRegister 158 MustHaveRegister 160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[rbx|q]" v15|q -1 [134, 140[134 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rbp|q]" v16|q -1 [136, 144[136 MustHaveRegister 140 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdi|q]" v17|q v11|q [138, 148[[308, 310[138 MustHaveRegister 148 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rax|q]" v18|q rax|q [314, 317[314 MustHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rdx|q]" v19|q v14|q [162, 165[162 MustHaveRegister 164 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdx|q]" v20|q v19|q [166, 289[170 MustHaveRegister 172 MustHaveRegister 182 ShouldHaveRegister 210 MustHaveRegister 212 MustHaveRegister 222 ShouldHaveRegister 248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 ShouldHaveRegister 288 ShouldHaveRegister  "OneSpillStore"
  v21|q QWORD "[rdi|q]" v21|q -1 [168, 170[168 MustHaveRegister 170 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q -1 [172, 176[[180, 184[172 MustHaveRegister 174 ShouldHaveRegister 184 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rax|q]" v23|q v20|q [182, 192[[200, 202[182 MustHaveRegister 188 MustHaveRegister 192 MustHaveRegister 202 MustHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdi|q]" v24|q v23|q [188, 196[188 MustHaveRegister 190 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rcx|q]" v25|q -1 [190, 193[190 MustHaveRegister 192 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [192, 194[192 MustHaveRegister 194 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v26|q [194, 196[194 MustHaveRegister 196 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q -1 [208, 210[208 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rdi|q]" v29|q -1 [212, 216[[220, 224[212 MustHaveRegister 214 ShouldHaveRegister 224 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v20|q [222, 232[[240, 242[222 MustHaveRegister 228 MustHaveRegister 232 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q v30|q [228, 236[228 MustHaveRegister 230 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rcx|q]" v32|q -1 [230, 233[230 MustHaveRegister 232 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v30|q [232, 234[232 MustHaveRegister 234 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v33|q [234, 236[234 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v20|q [248, 250[248 MustHaveRegister 250 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rdi|q]" v36|q -1 [252, 256[[260, 264[252 MustHaveRegister 254 ShouldHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v20|q [262, 272[[280, 282[262 MustHaveRegister 268 MustHaveRegister 272 MustHaveRegister 282 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v37|q [268, 276[268 MustHaveRegister 270 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rcx|q]" v39|q -1 [270, 273[270 MustHaveRegister 272 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v37|q [272, 274[272 MustHaveRegister 274 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rax|q]" v41|q v40|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q rax|q [292, 305[292 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rsi|q]" v43|q -1 [298, 302[298 MustHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [74, 75[74 MustHaveRegister  "NoSpillStore"
  v45|d DWORD "[rax|d]" v45|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [98, 102[98 MustHaveRegister 102 ShouldHaveRegister  "NoSpillStore"
  v47|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "StoreAtDefinition"
  v48|d DWORD "[vstack:2|d]" v1|d v1|d [12, 21[ "StoreAtDefinition"
  v49|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "StoreAtDefinition"
  v50|d DWORD "[vstack:2|d]" v1|d v1|d [21, 38[ "StoreAtDefinition"
  v51|q QWORD "[vstack:3|q]" v4|q v4|q [21, 88[[92, 96[ "OneSpillStore"
  v52|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "StoreAtDefinition"
  v53|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "StoreAtDefinition"
  v54|d DWORD "[rdx|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "StoreAtDefinition"
  v55|q QWORD "[rax|q]" v4|q v4|q [96, 100[100 ShouldHaveRegister  "OneSpillStore"
  v56|d DWORD "[vstack:2|d]" v1|d v1|d [42, 43[ "StoreAtDefinition"
  v57|d DWORD "[vstack:2|d]" v1|d v1|d [43, 54[ "StoreAtDefinition"
  v58|d DWORD "[vstack:2|d]" v1|d v1|d [54, 58[ "StoreAtDefinition"
  v59|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "StoreAtDefinition"
  v60|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "StoreAtDefinition"
  v61|d DWORD "[vstack:2|d]" v1|d v1|d [58, 59[ "StoreAtDefinition"
  v62|d DWORD "[vstack:2|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "StoreAtDefinition"
  v63|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "StoreAtDefinition"
  v64|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "StoreAtDefinition"
  v65|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "StoreAtDefinition"
  v66|d DWORD "[rdx|d]" v1|d v1|d [324, 327[ "StoreAtDefinition"
  v67|d DWORD "[rdi|d]" v0|d v0|d [324, 327[ "StoreAtDefinition"
  v68|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "StoreAtDefinition"
  v69|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "StoreAtDefinition"
  v70|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "StoreAtDefinition"
  v71|q QWORD "[vstack:5|q]" v20|q v20|q [289, 296[ "OneSpillStore"
  v72|q QWORD "[rdx|q]" v20|q v20|q [296, 305[300 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE rdx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: vstack:0|DWORD - vstack:2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH vstack:0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: vstack:0|DWORD - vstack:2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: vstack:0|DWORD - vstack:2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: vstack:0|DWORD - vstack:2|DWORD vstack:4|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: vstack:0|DWORD - vstack:2|DWORD vstack:4|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  100  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction  <|@ <|@
      nr  112  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  126  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  130  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  132  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  134  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  136  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  138  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  140  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  148  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  150  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  168  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  170  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  174  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  208  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  210  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  214  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  250  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  254  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  288  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  290  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: vstack:5|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  300  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  306  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  226  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  230  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  232  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  184  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  190  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  192  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  196  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  270  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  272  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  204  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  284  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  322  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  328  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  294  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B35" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B36" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B3 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B3" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B13" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" "B6" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B36" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B40" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 5]
locals: stack:12|DWORD - stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B36" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   40  <|@ instruction rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   42  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B13" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:17) [bci: 15]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15] <|@ <|@
      nr   76  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B33" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B34" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:20) [bci: 32]
locals: stack:12|DWORD - stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32] <|@ <|@
      nr  286  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  288  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B34" 
    successors "B10" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B9" "B2" 
    successors "B37" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:22) [bci: 47]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47] <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4603804662784494194
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction  <|@ <|@
      nr  318  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4603799033341254976
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" "B5" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   92  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   96  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   98  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  100  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  102  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  104  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  106  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4599244768724731520
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0 <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  264  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28] <|@ <|@
      nr  268  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors 
    xhandlers
    flags 
    probability 4599301063157123698
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest30.example_ftest30(ftest30.java:19) [bci: 28]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28] <|@ <|@
      nr  280  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  166  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  168  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  172  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4584664330591172379
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4581061486918073002
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  174  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  176  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4578359309127252195
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4569352109872511210
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24] <|@ <|@
      nr  112  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4558903773148530466
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:23) [bci: 50]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50] <|@ <|@
      nr  324  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest30.example_ftest30(ftest30.java:15) [bci: 0]
locals: rdi|DWORD - rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0] <|@ <|@
      nr  334  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     42
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_2       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: invokestatic  #7          // java.lang.System.console:()java.io.Console
    35: pop           
    36: iinc          
    39: goto          10
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #13         // End
    47: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec28897c242489542420498b7778488bc4483bc60f864b020000488b0500000000498d0406488b3500000000498d3436488bf84889442410e80000000090837c2424010f8c51000000e800000000908b54242085d20f8c6b000000e80000000090b801000000e923000000666690e800000000908b44241c3b4424200f8f44000000e800000000908b44241cffc08b7c24248944241c3bf87fd4488b442410488b3500000000498d3436488bf8e800000000904183afb0000000010f8e990100004883c428c3488b3d00000000498d3c3e498bc6498bcf488b5118488b5910488d6a38482bf8483beb0f875d010000488969180f18823801000048893a48c742080000000048c742100000000048c742180000000048c742200000000048c742280000000048c7423000000000488b3d0000000048897a20488b3a48f7c7020000000f8585000000488b3d0000000048897a18488b3a48f7c7020000000f853b000000488bfa492bfe48897a10488b3a48f7c7020000000f8582000000488bfa4889542408e80000000090488b542408488d742430488bfae80000000090488bc248f7c7010000000f8583000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800eb96488bc248f7c7010000000f855d000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e949ffffff488bc248f7c7010000000f8534000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e94cffffffc640f800e929ffffffc640f800e905ffffffc640f800e931ffffffe80000000090488bd0e9d3feffffe800000000904883c428c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 stack:16|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 12 6 rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 16 8 rax|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 19 10 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B40 size: QWORD  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 28 {DataSection[?]}  <||@
  Comment 39 16 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 39 {DataSection[?]}  <||@
  Comment 50 18 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 53 20 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 58 22 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:5]  <||@
  Comment 58 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 63 [16]at ftest30.example_ftest30(ftest30.java:15) [bci: 5, duringCall: true, rethrow: false]
              |0               |1  |2               |3 
     locals:  |stack:12|DWORD  |-  |stack:16|DWORD  |-   <||@
  Comment 64 24 JUMP ~[] destination: B1 -> B2  <||@
  Comment 64 block B2 null  <||@
  Comment 64 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 28 CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B36 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 75 block B4 null  <||@
  Comment 75 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 38 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15]  <||@
  Comment 75 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 80 [16]at ftest30.example_ftest30(ftest30.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1  |2               |3          
     locals:  |stack:12|DWORD  |-  |stack:16|DWORD  |int[0|0x0]   <||@
  Comment 81 40 rdx|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 85 42 JUMP ~[] destination: B4 -> B5  <||@
  Comment 85 block B5 null  <||@
  Comment 85 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 46 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B13 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 93 block B7 null  <||@
  Comment 93 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 93 54 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32]  <||@
  Comment 93 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 98 [16]at ftest30.example_ftest30(ftest30.java:20) [bci: 32, duringCall: true, rethrow: false]
              |0               |1  |2               |3          
     locals:  |stack:12|DWORD  |-  |stack:16|DWORD  |int[0|0x0]   <||@
  Comment 99 56 JUMP ~[] destination: B7 -> B8  <||@
  Comment 99 block B8 null  <||@
  Comment 99 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 99 60 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 104 64 JUMP ~[] destination: B8 -> B9  <||@
  Comment 109 block B10 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 109 72 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 74 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:15]  <||@
  Comment 112 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 117 [16]at ftest30.example_ftest30(ftest30.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1  |2               |3              
     locals:  |stack:12|DWORD  |-  |stack:16|DWORD  |stack:20|DWORD   <||@
  Comment 118 76 rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 122 78 JUMP ~[] destination: B10 -> B11  <||@
  Comment 122 block B11 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 122 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 82 CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B13 falseDestination: B11 -> B33 size: DWORD  <||@
  Comment 132 block B33 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 132 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 284 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:32]  <||@
  Comment 132 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 137 [16]at ftest30.example_ftest30(ftest30.java:20) [bci: 32, duringCall: true, rethrow: false]
              |0               |1  |2               |3              
     locals:  |stack:12|DWORD  |-  |stack:16|DWORD  |stack:20|DWORD   <||@
  Comment 138 286 rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 142 288 JUMP ~[] destination: B33 -> B34  <||@
  Comment 142 block B34 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 142 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 292 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 144 296 JUMP ~[] destination: B34 -> B9  <||@
  Comment 144 block B9 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 144 66 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 144 62 rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD  <||@
  Comment 148 68 stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 152 70 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B36 size: DWORD  <||@
  Comment 156 block B36 null  <||@
  Comment 156 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 300 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 161 306 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 161 {DataSection[?]}  <||@
  Comment 172 308 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 175 310 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:47]  <||@
  Comment 175 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 180 []at ftest30.example_ftest30(ftest30.java:22) [bci: 47, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 181 312 JUMP ~[] destination: B36 -> B37  <||@
  Comment 181 block B37 null  <||@
  Comment 181 314 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 316   <||@
  Comment 189 318 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B37 -> B38 falseDestination: B37 -> B39  <||@
  Comment 195 block B39 null  <||@
  Comment 195 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 328 RETURN -  <||@
  Comment 195 EPILOGUE_START  <||@
  Comment 199 EPILOGUE_INCD_RSP  <||@
  Comment 199 EPILOGUE_END  <||@
  Comment 200 block B13 null  <||@
  Comment 200 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 90 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 200 {DataSection[?]}  <||@
  Comment 211 92 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 211 94 rax|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 214 96 rcx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 217 98 rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD  <||@
  Comment 221 100 rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD  <||@
  Comment 225 102 rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD  <||@
  Comment 229 104 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 232 106 CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 241 block B15 null  <||@
  Comment 241 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 241 118 MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD  <||@
  Comment 245 120 AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0  <||@
  Comment 252 122 MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 255 124 MOV [rdx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 263 126 MOV [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 271 128 MOV [rdx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 279 130 MOV [rdx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 287 132 MOV [rdx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 295 134 MOV [rdx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 303 136 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 303 138 JUMP ~[] destination: B15 -> B16  <||@
  Comment 303 block B16 null  <||@
  Comment 303 140 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 303 142 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 303 {DataSection[?]}  <||@
  Comment 310 144 MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 314 146 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 317 148 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD  <||@
  Comment 330 block B21 null  <||@
  Comment 330 180 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 330 182 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@48076d78 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 330 {DataSection[?]}  <||@
  Comment 337 184 MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 341 186 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 344 188 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD  <||@
  Comment 357 block B26 null  <||@
  Comment 357 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 357 222 rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7168b3af encoding: base: 1 shift: 0  <||@
  Comment 363 224 MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 367 226 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 370 228 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD  <||@
  Comment 383 block B31 null  <||@
  Comment 383 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 383 262 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 386 264 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 391 266 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24, 1, 28]  <||@
  Comment 391 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 396 [8]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest30.example_ftest30(ftest30.java:19) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |    <||@
  Comment 397 268 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 402 270 JUMP ~[] destination: B31 -> B32  <||@
  Comment 402 block B32 null  <||@
  Comment 402 272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 274 rsi|QWORD = STACKLEA in:0|QWORD  <||@
  Comment 407 276 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 410 278 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:27, 1, 28]  <||@
  Comment 410 {HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>>}  <||@
  Comment 415 [-32, -16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 27, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest30.example_ftest30(ftest30.java:19) [bci: 28, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |rdx|QWORD[.]  |   |   |    <||@
  Comment 416 280 DEAD_END  <||@
  Comment 416 block B23 null  <||@
  Comment 416 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 416 196 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 419 198 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD  <||@
  Comment 432 block B24 null  <||@
  Comment 432 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 432 202 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 442 204 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 449 206 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 452 208 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 456 210 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 461 212 JUMP ~[] destination: B24 -> B26  <||@
  Comment 463 block B18 null  <||@
  Comment 463 154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 463 156 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 466 158 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD  <||@
  Comment 479 block B19 null  <||@
  Comment 479 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 479 162 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 489 164 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 496 166 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 499 168 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 503 170 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 508 172 JUMP ~[] destination: B19 -> B21  <||@
  Comment 513 block B28 null  <||@
  Comment 513 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 236 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 516 238 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD  <||@
  Comment 529 block B29 null  <||@
  Comment 529 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 242 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 539 244 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 546 246 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 549 248 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 553 250 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 558 252 JUMP ~[] destination: B29 -> B31  <||@
  Comment 563 block B25 null  <||@
  Comment 563 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 563 216 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 567 218 JUMP ~[] destination: B25 -> B26  <||@
  Comment 572 block B20 null  <||@
  Comment 572 174 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 572 176 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 576 178 JUMP ~[] destination: B20 -> B21  <||@
  Comment 581 block B30 null  <||@
  Comment 581 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 581 256 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 585 258 JUMP ~[] destination: B30 -> B31  <||@
  Comment 590 block B14 null  <||@
  Comment 590 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 590 110 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:24]  <||@
  Comment 590 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 595 []at ftest30.example_ftest30(ftest30.java:19) [bci: 24, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 596 112 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 599 114 JUMP ~[] destination: B14 -> B16  <||@
  Comment 604 block B38 null  <||@
  Comment 604 320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 604 322 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:50]  <||@
  Comment 604 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 609 []at ftest30.example_ftest30(ftest30.java:23) [bci: 50, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 610 324 RETURN -  <||@
  Comment 610 EPILOGUE_START  <||@
  Comment 614 EPILOGUE_INCD_RSP  <||@
  Comment 614 EPILOGUE_END  <||@
  Comment 615 block B40 null  <||@
  Comment 615 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 615 332 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@6efaaba6 state [bci:0]  <||@
  Comment 615 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 620 []at ftest30.example_ftest30(ftest30.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1  |2          |3 
     locals:  |rdi|DWORD  |-  |rdx|DWORD  |-   <||@
  Comment 621 334 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
