begin_compilation
  name " SubstrateHostedCompilation-27722[ftest28.example_ftest28(int, int, int)]"
  method "SubstrateHostedCompilation-27722[ftest28.example_ftest28(int, int, int)]"
  date 1585075236953
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j171 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@754386d3
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: j161 
=== Usages ===
v163 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: j161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j161 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
v163 
=== Predecessor ===
j171 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j171 
y: j161 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j171 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 v18 ?222 ?223 v151 ?220 ?219 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 ?222 ?223 v36 ?220 v118 ?219 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 ?222 ?223 v51 ?220 ?219 v125 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
j161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@66b596e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a6 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a6  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v172 
stateDuring: ?219 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v172 stateDuring: ?219 #next: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i150 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i66 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v112 #falseSuccessor: v113  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a134  <|@  <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@2a6e454a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 ?220 ?222 v118 ?221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v173 
stateDuring: ?220 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v173 stateDuring: ?220 #next: v117  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
a134 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i13 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@35035396
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v174 
stateDuring: ?221 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v174 stateDuring: ?221 #next: v124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v127 #falseSuccessor: v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@fc88bdd
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v175 
stateDuring: ?222 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v175 stateDuring: ?222 #next: v131  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i66 i67 
=== Succesors ===
=== Usages ===
?225 v18 i67 ?224 v36 v51 ?223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i66 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v22 
=== Usages ===
i150 v19 v68 v38 v53 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i150 
y: i1 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i150 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@53340363
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v176 
stateDuring: ?223 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v176 stateDuring: ?223 #next: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
a105 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i150 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a106 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a106  <|@  <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@b28585a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v177 
stateDuring: ?224 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v177 stateDuring: ?224 #next: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
a106 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i150 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v143 v144 
=== Succesors ===
next: j240 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v144 #next: j240  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a231 
=== Succesors ===
next: j241 
=== Usages ===
j258 
=== Predecessor ===
v142 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a231 #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
j258 
=== Predecessor ===
j240 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
v405 v406 
=== Predecessor ===
j241 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
j243 v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: j244 
=== Usages ===
j248 v397 a264 v398 v399 v400 v401 v402 v403 v404 
=== Predecessor ===
j242 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v405 lastLocationAccess: - #next: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
j244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j244 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
v249 
=== Predecessor ===
j243 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v406 lastLocationAccess: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j243 
y: j247 
=== Succesors ===
=== Usages ===
v249 v252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j248 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j244 y: j248  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j240 
y: j241 
=== Succesors ===
=== Usages ===
a259 v282 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j240 y: j241  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
j244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v250 #falseSuccessor: v251  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a259 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a259  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
rethrowException: false
sourceFile: ftest28.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?54 
arguments: j258 
=== Succesors ===
next: v260 
=== Usages ===
a266 
=== Predecessor ===
v250 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?54 arguments: j258 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
a259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
lastLocationAccess: - 
value: j248 
stateAfter: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v405 lastLocationAccess: - value: j248 stateAfter: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v398 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v398 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
value: j258 
stateAfter: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - value: j258 stateAfter: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 v283 v284 v285 v286 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - value: j256 stateAfter: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - value: j256 stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - value: j256 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - value: j256 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - value: j256 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: a264 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - value: j256 stateAfter: - #next: a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j243 
=== Succesors ===
next: v265 
=== Usages ===
a266 
=== Predecessor ===
v288 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j243 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
a264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v261 
values: a259 a264 
=== Succesors ===
=== Usages ===
a362 a192 v394 a182 v395 v396 a298 a333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v261 values: a259 a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v260 v265 
=== Succesors ===
next: v191 
=== Usages ===
a266 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v260 v265 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
value: a200 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - value: a200 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j322 
=== Usages ===
v407 j312 
=== Predecessor ===
v191 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
v302 v307 
=== Predecessor ===
a298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v336 v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j322 
y: j301 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j322 y: j301  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 v323 v324 v352 v353 v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 j345 j374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 j346 j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j319 j348 j377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 v340 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
j322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v303 #falseSuccessor: v304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j312 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a298 
=== Succesors ===
next: v305 
=== Usages ===
v408 j314 j317 
=== Predecessor ===
v304 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a298 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j322 
y: j306 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j322 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
j312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j312 
y: j313 
=== Succesors ===
=== Usages ===
j316 v409 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j312 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j314 
y: j315 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j314 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j312 
y: j316 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j312 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j317 
y: i318 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j317 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j314 
index: j319 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - value: i289 stateAfter: - #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v408 lastLocationAccess: - value: i289 stateAfter: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v327 v328 v329 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v328 v329 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a333 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - value: a199 stateAfter: - #next: a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a333 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j351 
=== Usages ===
v410 j344 
=== Predecessor ===
v187 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j351  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a333 
index: - 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
v336 v340 
=== Predecessor ===
a333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j351 
y: j301 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j351 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j344 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a333 
=== Succesors ===
next: v339 
=== Usages ===
v411 j345 j347 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a333 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j351 
y: j306 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j351 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
j344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j344 
y: j313 
=== Succesors ===
=== Usages ===
j346 v412 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j344 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j345 
y: j315 
=== Succesors ===
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j345 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j344 
y: j346 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j344 y: j346  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j347 
y: i318 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j347 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j345 
index: j348 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j345 index: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v412 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v412 lastLocationAccess: - value: i289 stateAfter: - #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j344 
index: - 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - value: i289 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v356 v357 v358 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v357 v358 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a182 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a266 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v394 
lastLocationAccess: - 
value: a182 
stateAfter: - 
=== Succesors ===
next: a362 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v394 lastLocationAccess: - value: a182 stateAfter: - #next: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j380 
=== Usages ===
v413 j373 
=== Predecessor ===
v183 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a362 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a362 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v413 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
v365 v369 
=== Predecessor ===
a362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v413 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j380 
y: j301 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j380 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v366 
falseSuccessor: v367 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v366 #falseSuccessor: v367  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a362 
=== Succesors ===
next: v368 
=== Usages ===
v414 j374 j376 
=== Predecessor ===
v367 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a362 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j380 
y: j306 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j380 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v370 #falseSuccessor: v371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j373 
y: j313 
=== Succesors ===
=== Usages ===
j375 v415 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j373 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j374 
y: j315 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j374 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j373 
y: j375 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j373 y: j375  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j376 
y: i318 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j376 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j374 
index: j377 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v415 lastLocationAccess: - value: i289 stateAfter: - #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 lastLocationAccess: - value: i289 stateAfter: - #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v385 v386 v387 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v386 v387 #next: v193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a192 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: a108 
=== Usages ===
v194 ?159 v196 
=== Predecessor ===
v193 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: a108  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@2418254a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a192 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a192  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@6fc5c477
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?159 ?87 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 22
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a156 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a156  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - 
=== Succesors ===
=== Usages ===
?100 ?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: -  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
materializedValue: a192 
=== Succesors ===
=== Usages ===
?100 ?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a156 materializedValue: a192  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - virtualObjectMappings: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?227 
=== Succesors ===
next: v101 
=== Usages ===
?100 
=== Predecessor ===
a192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?227 #next: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j195 
=== Usages ===
=== Predecessor ===
a108 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
v196 
=== Predecessor ===
v101 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v196  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest28.example_ftest28(ftest28.java:22) [bci: 40]
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - a108 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - a108 virtualObjectMappings: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?100 
arguments: a192 j195 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j195 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?100 arguments: a192 j195 #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1c19edf7
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?225 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v178 
stateDuring: ?225 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v178 stateDuring: ?225 #next: v65  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 48]
stamp: i32
=== Inputs ===
x: i150 
y: i66 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v69 v71 v153 v154 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 v153 v154 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 57]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@55ba8ca6
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a76 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a76  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
bci: 59
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v198 
stateDuring: ?226 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v198 stateDuring: ?226 #next: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 59]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 59]
rethrowException: false
sourceFile: ftest28.java
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:26) [bci: 62]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:26) [bci: 62]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j171 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j171  <|@  <|@
f <@~|@floating>@ <|@
tid j160 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v393 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j160 
index: - 
=== Succesors ===
=== Usages ===
j171 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j160 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j171 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@754386d3
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v393 
lastLocationAccess: - 
=== Succesors ===
next: j161 
=== Usages ===
v163 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v393 lastLocationAccess: - #next: j161  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j161 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v162 
=== Usages ===
v163 
=== Predecessor ===
j171 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j171 
y: j161 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j171 y: j161  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 v18 ?222 ?223 v151 ?220 ?219 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 ?222 ?223 v36 ?220 v118 ?219 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?221 ?225 ?224 ?222 ?223 v51 ?220 ?219 v125 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v163 
=== Succesors ===
trueSuccessor: v164 
falseSuccessor: v165 
=== Usages ===
=== Predecessor ===
j161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v163 #trueSuccessor: v164 #falseSuccessor: v165  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v172 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@66b596e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a6 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a6  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v104 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v172 
stateDuring: ?219 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v172 stateDuring: ?219 #next: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v104 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v114  <|@  <|@
f <@~|@floating>@ <|@
tid i66 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 48]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i67 i150 v151 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i66 
=== Succesors ===
=== Usages ===
v114 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v151 
=== Succesors ===
trueSuccessor: v112 
falseSuccessor: v113 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v151 #trueSuccessor: v112 #falseSuccessor: v113  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a134  <|@  <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@2a6e454a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v125 ?220 ?222 v118 ?221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v173 
stateDuring: ?220 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v113 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v173 stateDuring: ?220 #next: v117  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v121 
=== Usages ===
=== Predecessor ===
a134 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v121  <|@  <|@
f <@~|@floating>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i13 
=== Succesors ===
=== Usages ===
v121 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v118 
=== Succesors ===
trueSuccessor: v120 
falseSuccessor: v119 
=== Usages ===
=== Predecessor ===
v117 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v118 #trueSuccessor: v120 #falseSuccessor: v119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@*|@fixed>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v120 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v121 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@35035396
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v174 
stateDuring: ?221 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
v119 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v174 stateDuring: ?221 #next: v124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v125 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v126 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v125 #trueSuccessor: v127 #falseSuccessor: v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v144  <|@  <|@
f <@*|@fixed>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a136  <|@  <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@fc88bdd
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v175 
stateDuring: ?222 
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v126 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v175 stateDuring: ?222 #next: v131  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v131 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i150 <|@
result v10|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i66 i67 
=== Succesors ===
=== Usages ===
?225 v18 i67 ?224 v36 v51 ?223 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i66 i67  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v22 
=== Usages ===
i150 v19 v68 v38 v53 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i150 
y: i1 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i150 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a105 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a105  <|@  <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@53340363
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a105 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a105 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v176 
stateDuring: ?223 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v176 stateDuring: ?223 #next: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
a105 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i150 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a106 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a106  <|@  <|@
tid v177 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@b28585a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?224 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a106 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a106 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v177 
stateDuring: ?224 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v177 stateDuring: ?224 #next: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
a106 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i150 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i150  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:21) [bci: 33]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v51 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v52 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v51 #trueSuccessor: v53 #falseSuccessor: v52  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v143  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v142 
=== Predecessor ===
v53 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v143 v144 
=== Succesors ===
next: j240 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v143 v144 #next: j240  <|@  <|@
f <@~|@floating>@ <|@
tid a231 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j240 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a231 
=== Succesors ===
next: j241 
=== Usages ===
j258 
=== Predecessor ===
v142 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a231 #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
j258 
=== Predecessor ===
j240 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j243 
=== Usages ===
v405 v406 
=== Predecessor ===
j241 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
result [v16|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
j243 v252 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
lastLocationAccess: - 
=== Succesors ===
next: j244 
=== Usages ===
j248 v397 a264 v398 v399 v400 v401 v402 v403 v404 
=== Predecessor ===
j242 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v405 lastLocationAccess: - #next: j244  <|@  <|@
f <@~|@floating>@ <|@
tid v406 <|@
result [v16|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
j244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j244 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v406 
lastLocationAccess: - 
=== Succesors ===
next: v246 
=== Usages ===
v249 
=== Predecessor ===
j243 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v406 lastLocationAccess: - #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j248 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j248 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j243 
y: j247 
=== Succesors ===
=== Usages ===
v249 v252 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j243 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j244 
y: j248 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j244 y: j248  <|@  <|@
f <@~|@floating>@ <|@
tid j258 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j240 
y: j241 
=== Succesors ===
=== Usages ===
a259 v282 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j240 y: j241  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v250 
falseSuccessor: v251 
=== Usages ===
=== Predecessor ===
j244 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v250 #falseSuccessor: v251  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a259 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a259  <|@  <|@
tid ?54 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:22) [bci: 36]
rethrowException: false
sourceFile: ftest28.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a259 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?54 
arguments: j258 
=== Succesors ===
next: v260 
=== Usages ===
a266 
=== Predecessor ===
v250 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?54 arguments: j258 #next: v260  <|@  <|@
f <@*|@fixed>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
a259 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v405 
lastLocationAccess: - 
value: j248 
stateAfter: - 
=== Succesors ===
next: v269 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v405 lastLocationAccess: - value: j248 stateAfter: - #next: v269  <|@  <|@
f <@~|@floating>@ <|@
tid v398 <|@
result [v17|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v269 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v398 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v398 #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v397 <|@
result [v17|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v397 
lastLocationAccess: - 
value: j258 
stateAfter: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v269 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v397 lastLocationAccess: - value: j258 stateAfter: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
result [v17|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j256 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v288 v283 v284 v285 v286 v287 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v399 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v399 lastLocationAccess: - value: j256 stateAfter: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v400 <|@
result [v17|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v400 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v400 lastLocationAccess: - value: j256 stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v401 <|@
result [v17|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v401 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v401 lastLocationAccess: - value: j256 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
result [v17|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v402 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v402 lastLocationAccess: - value: j256 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
result [v17|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v403 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v403 lastLocationAccess: - value: j256 stateAfter: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid v404 <|@
result [v17|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j243 
index: - 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j243 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v404 
lastLocationAccess: - 
value: j256 
stateAfter: - 
=== Succesors ===
next: a264 
=== Usages ===
=== Predecessor ===
v287 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v404 lastLocationAccess: - value: j256 stateAfter: - #next: a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a264 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j243 
=== Succesors ===
next: v265 
=== Usages ===
a266 
=== Predecessor ===
v288 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j243 #next: v265  <|@  <|@
f <@*|@fixed>@ <|@
tid v265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v261 
=== Predecessor ===
a264 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a266 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v261 
values: a259 a264 
=== Succesors ===
=== Usages ===
a362 a192 v394 a182 v395 v396 a298 a333 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v261 values: a259 a264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v261 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v260 v265 
=== Succesors ===
next: v191 
=== Usages ===
a266 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v260 v265 #next: v191  <|@  <|@
f <@~|@floating>@ <|@
tid v396 <|@
result [v23|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a200 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v396 
lastLocationAccess: - 
value: a200 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v261 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v396 lastLocationAccess: - value: a200 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j322 
=== Usages ===
v407 j312 
=== Predecessor ===
v191 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j322  <|@  <|@
f <@~|@floating>@ <|@
tid v407 <|@
result [v23|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a298 
index: - 
=== Succesors ===
=== Usages ===
j322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a298 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j322 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v407 
lastLocationAccess: - 
=== Succesors ===
next: v300 
=== Usages ===
v302 v307 
=== Predecessor ===
a298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v407 lastLocationAccess: - #next: v300  <|@  <|@
f <@~|@floating>@ <|@
tid j301 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v302 v336 v365 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j322 
y: j301 
=== Succesors ===
=== Usages ===
v300 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j322 y: j301  <|@  <|@
f <@~|@floating>@ <|@
tid i289 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v382 v323 v324 v352 v353 v381 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j314 j345 j374 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
result long[4136|0x1028] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j316 j346 j375 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i318 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j319 j348 j377 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j306 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v307 v340 v369 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v302 
=== Succesors ===
trueSuccessor: v303 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
j322 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v302 #trueSuccessor: v303 #falseSuccessor: v304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v303 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j312 
=== Usages ===
=== Predecessor ===
v300 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j312  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j312 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a298 
=== Succesors ===
next: v305 
=== Usages ===
v408 j314 j317 
=== Predecessor ===
v304 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a298 #next: v305  <|@  <|@
f <@~|@floating>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j322 
y: j306 
=== Succesors ===
=== Usages ===
v305 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j322 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v307 
=== Succesors ===
trueSuccessor: v308 
falseSuccessor: v309 
=== Usages ===
=== Predecessor ===
j312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v307 #trueSuccessor: v308 #falseSuccessor: v309  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j312 
y: j313 
=== Succesors ===
=== Usages ===
j316 v409 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j312 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j314 
y: j315 
=== Succesors ===
=== Usages ===
j317 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j314 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j317 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j312 
y: j316 
=== Succesors ===
=== Usages ===
j319 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j312 y: j316  <|@  <|@
f <@~|@floating>@ <|@
tid j319 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j317 
y: i318 
=== Succesors ===
=== Usages ===
v409 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j317 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v409 <|@
result [v27|QWORD + v30|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j314 
index: j319 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j314 index: j319  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v409 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v329 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v409 lastLocationAccess: - value: i289 stateAfter: - #next: v329  <|@  <|@
f <@*|@fixed>@ <|@
tid v329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v324 
=== Usages ===
=== Predecessor ===
v305 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v324  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
result [v26|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j312 
index: - 
=== Succesors ===
=== Usages ===
v324 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j312 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v408 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v309 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v408 lastLocationAccess: - value: i289 stateAfter: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v327 v328 v329 
=== Succesors ===
next: v187 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v327 v328 v329 #next: v187  <|@  <|@
f <@~|@floating>@ <|@
tid v395 <|@
result [v23|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v187 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v395 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a333 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v395 lastLocationAccess: - value: a199 stateAfter: - #next: a333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a333 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j351 
=== Usages ===
v410 j344 
=== Predecessor ===
v187 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j351  <|@  <|@
f <@~|@floating>@ <|@
tid v410 <|@
result [v23|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a333 
index: - 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a333 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j351 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v410 
lastLocationAccess: - 
=== Succesors ===
next: v335 
=== Usages ===
v336 v340 
=== Predecessor ===
a333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v410 lastLocationAccess: - #next: v335  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j351 
y: j301 
=== Succesors ===
=== Usages ===
v335 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j351 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j344 
=== Usages ===
=== Predecessor ===
v335 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j344  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j344 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a333 
=== Succesors ===
next: v339 
=== Usages ===
v411 j345 j347 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a333 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j351 
y: j306 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j351 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v340 
=== Succesors ===
trueSuccessor: v341 
falseSuccessor: v342 
=== Usages ===
=== Predecessor ===
j344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v340 #trueSuccessor: v341 #falseSuccessor: v342  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j344 
y: j313 
=== Succesors ===
=== Usages ===
j346 v412 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j344 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j345 
y: j315 
=== Succesors ===
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j345 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j344 
y: j346 
=== Succesors ===
=== Usages ===
j348 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j344 y: j346  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j347 
y: i318 
=== Succesors ===
=== Usages ===
v412 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j347 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v412 <|@
result [v34|QWORD + v37|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j345 
index: j348 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j345 index: j348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v412 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v412 lastLocationAccess: - value: i289 stateAfter: - #next: v358  <|@  <|@
f <@*|@fixed>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v353 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v353  <|@  <|@
f <@~|@floating>@ <|@
tid v411 <|@
result [v33|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j344 
index: - 
=== Succesors ===
=== Usages ===
v353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j344 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v411 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v411 lastLocationAccess: - value: i289 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v355 
=== Predecessor ===
v353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v356 v357 v358 
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v356 v357 v358 #next: v183  <|@  <|@
f <@~|@floating>@ <|@
tid v394 <|@
result [v23|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a266 
index: - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a266 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a182 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a266 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a266  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v394 
lastLocationAccess: - 
value: a182 
stateAfter: - 
=== Succesors ===
next: a362 
=== Usages ===
=== Predecessor ===
v355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v394 lastLocationAccess: - value: a182 stateAfter: - #next: a362  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a362 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: j380 
=== Usages ===
v413 j373 
=== Predecessor ===
v183 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: j380  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
result [v23|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a362 
index: - 
=== Succesors ===
=== Usages ===
j380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a362 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j380 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v413 
lastLocationAccess: - 
=== Succesors ===
next: v364 
=== Usages ===
v365 v369 
=== Predecessor ===
a362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v413 lastLocationAccess: - #next: v364  <|@  <|@
f <@~|@floating>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j380 
y: j301 
=== Succesors ===
=== Usages ===
v364 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j380 y: j301  <|@  <|@
f <@*|@fixed>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v365 
=== Succesors ===
trueSuccessor: v366 
falseSuccessor: v367 
=== Usages ===
=== Predecessor ===
j380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v365 #trueSuccessor: v366 #falseSuccessor: v367  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j373 
=== Usages ===
=== Predecessor ===
v364 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j373  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j373 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a362 
=== Succesors ===
next: v368 
=== Usages ===
v414 j374 j376 
=== Predecessor ===
v367 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a362 #next: v368  <|@  <|@
f <@~|@floating>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j380 
y: j306 
=== Succesors ===
=== Usages ===
v368 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j380 y: j306  <|@  <|@
f <@*|@fixed>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v369 
=== Succesors ===
trueSuccessor: v370 
falseSuccessor: v371 
=== Usages ===
=== Predecessor ===
j373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v369 #trueSuccessor: v370 #falseSuccessor: v371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j373 
y: j313 
=== Succesors ===
=== Usages ===
j375 v415 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j373 y: j313  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j374 
y: j315 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j374 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j373 
y: j375 
=== Succesors ===
=== Usages ===
j377 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j373 y: j375  <|@  <|@
f <@~|@floating>@ <|@
tid j377 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j376 
y: i318 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j376 y: i318  <|@  <|@
f <@~|@floating>@ <|@
tid v415 <|@
result [v41|QWORD + v44|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j374 
index: j377 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j374 index: j377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v415 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v415 lastLocationAccess: - value: i289 stateAfter: - #next: v387  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v382 
=== Usages ===
=== Predecessor ===
v368 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v382  <|@  <|@
f <@~|@floating>@ <|@
tid v414 <|@
result [v40|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j373 
index: - 
=== Succesors ===
=== Usages ===
v382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v414 
lastLocationAccess: - 
value: i289 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v371 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v414 lastLocationAccess: - value: i289 stateAfter: - #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v384 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v385 v386 v387 
=== Succesors ===
next: v193 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v385 v386 v387 #next: v193  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a192 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a192  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a192 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a266 
=== Succesors ===
next: a108 
=== Usages ===
v194 ?159 v196 
=== Predecessor ===
v193 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a266 #next: a108  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@2418254a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a192 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a192  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@6fc5c477
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?159 ?87 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 40
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 22
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a156 
=== Succesors ===
=== Usages ===
?102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a156  <|@  <|@
tid ?102 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - 
=== Succesors ===
=== Usages ===
?100 ?227 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: -  <|@  <|@
tid ?159 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
materializedValue: a192 
=== Succesors ===
=== Usages ===
?100 ?227 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a156 materializedValue: a192  <|@  <|@
tid ?227 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?102 
values: - 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
a108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - virtualObjectMappings: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a108 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?227 
=== Succesors ===
next: v101 
=== Usages ===
?100 
=== Predecessor ===
a192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?227 #next: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j195 
=== Usages ===
=== Predecessor ===
a108 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j195  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j195 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v196 
=== Usages ===
v196 
=== Predecessor ===
v101 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v196  <|@  <|@
tid ?100 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest28.example_ftest28(ftest28.java:22) [bci: 40]
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 1
=== Inputs ===
outerFrameState: ?102 
values: - a108 
virtualObjectMappings: ?159 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?102 values: - a108 virtualObjectMappings: ?159  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?100 
arguments: a192 j195 
=== Succesors ===
next: v197 
=== Usages ===
=== Predecessor ===
j195 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?100 arguments: a192 j195 #next: v197  <|@  <|@
f <@*|@fixed>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest28.example_ftest28(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v196 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a107 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a107  <|@  <|@
tid v178 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1c19edf7
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?225 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i150 
=== Succesors ===
=== Usages ===
a107 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a107 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 44
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v178 
stateDuring: ?225 
=== Succesors ===
next: v65 
=== Usages ===
=== Predecessor ===
v52 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v178 stateDuring: ?225 #next: v65  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:23) [bci: 44]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v68 
=== Usages ===
=== Predecessor ===
a107 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result v48|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 48]
stamp: i32
=== Inputs ===
x: i150 
y: i66 
=== Succesors ===
=== Usages ===
i150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i150 y: i66  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 54]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v69 v71 v153 v154 
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 v153 v154 #next: v109  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 57]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v198 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@55ba8ca6
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a76 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a76  <|@  <|@
tid ?226 <|@
d <@d|@=== Debug Properties ===
bci: 59
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
bci: 59
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v198 
stateDuring: ?226 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v198 stateDuring: ?226 #next: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 59]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v109 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v209 
=== Succesors ===
trueSuccessor: v210 
falseSuccessor: v211 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v209 #trueSuccessor: v210 #falseSuccessor: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:25) [bci: 59]
rethrowException: false
sourceFile: ftest28.java
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
=== Succesors ===
next: v218 
=== Usages ===
=== Predecessor ===
v210 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 #next: v218  <|@  <|@
f <@*|@fixed>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:26) [bci: 62]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
v208 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v217  <|@  <|@
f <@*|@fixed>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest28.example_ftest28(ftest28.java:26) [bci: 62]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v211 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v166 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v166  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest28.example_ftest28(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest28.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v166 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v168 
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v168  <|@  <|@
f <@*|@fixed>@ <|@
tid v168 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v166 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v10|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: v0|DWORD v1|DWORD v2|DWORD v10|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|DWORD = INC v10|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|DWORD] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v10|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v10|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v49|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOV [v16|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v16|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = LEA [v17|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = SUB (x: v14|QWORD, ~y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v19|QWORD, y: v18|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v16|QWORD + 24], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v17|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v17|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE v17|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 32], y: v24|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 24], y: v31|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = COMPRESSPOINTER (input: v23|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v23|QWORD[.] + 16], y: v38|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [v23|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: v45|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: v23|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v39|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = AND v40|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = LEA [v41|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SUB (x: v40|QWORD, ~y: v42|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = SHR v43|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v41|QWORD + v44|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOVE v23|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v32|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = AND v33|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = LEA [v34|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SUB (x: v33|QWORD, ~y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SHR v36|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD + v37|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v20|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v21|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[46, 48[[58, 60[[74, 76[[86, 88[[98, 100[[138, 139[[324, 326[[346, 348[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[136, 139[[324, 325[[336, 338[[346, 347[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[134, 139[[322, 325[[334, 338[[344, 347[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 110[[358, 361[2 MustHaveRegister 30 ShouldHaveRegister 70 MustHaveRegister 109 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rsi|- [4, 110[[358, 361[4 MustHaveRegister 42 MustHaveRegister 82 ShouldHaveRegister 109 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rdx|- [6, 110[[358, 361[6 MustHaveRegister 54 MustHaveRegister 94 ShouldHaveRegister 109 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 118[[122, 134[16 MustHaveRegister 20 ShouldHaveRegister 134 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q rax|q [48, 49[48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q rax|q [60, 61[60 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[v10|d]" v10|d v48|d [68, 106[70 ShouldHaveRegister 82 MustHaveRegister 94 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q rax|q [76, 77[76 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [88, 89[88 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q v13|q [160, 172[160 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q r14|q [162, 173[162 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q r15|q [164, 178[164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q -1 [166, 196[166 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [168, 174[168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [170, 178[170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q v14|q [172, 182[[342, 344[172 MustHaveRegister 182 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q rax|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v17|q [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v22|q [200, 339[204 MustHaveRegister 206 MustHaveRegister 216 ShouldHaveRegister 244 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 296 ShouldHaveRegister 322 ShouldHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [206, 210[[214, 218[206 MustHaveRegister 208 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v23|q [216, 226[[234, 236[216 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [222, 230[222 MustHaveRegister 224 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v26|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q -1 [246, 250[[254, 258[246 MustHaveRegister 248 ShouldHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v23|q [256, 266[[274, 276[256 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v33|q [262, 270[262 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q -1 [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v33|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v36|q [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v23|q [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q -1 [286, 290[[294, 298[286 MustHaveRegister 288 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v23|q [296, 306[[314, 316[296 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q v40|q [302, 310[302 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q -1 [304, 307[304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v40|q [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q v43|q [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q rax|q [326, 339[326 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [332, 336[332 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q rax|q [100, 101[100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[v48|d]" v48|d v10|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [132, 136[132 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[46, 48[[58, 60[[74, 76[[86, 88[[98, 100[[138, 139[[324, 326[[346, 348[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[136, 139[[324, 325[[336, 338[[346, 347[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[134, 139[[322, 325[[334, 338[[344, 347[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [48, 49[48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [60, 61[60 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v48|d [68, 72[70 ShouldHaveRegister  "SpillInDominator"
  v11|q QWORD "[rax|q]" v11|q rax|q [76, 77[76 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [88, 89[88 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v13|q [160, 172[160 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q r14|q [162, 173[162 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r15|q [164, 178[164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q -1 [166, 196[166 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [168, 174[168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [170, 178[170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [172, 182[[342, 344[172 MustHaveRegister 182 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v17|q [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [200, 323[204 MustHaveRegister 206 MustHaveRegister 216 ShouldHaveRegister 244 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 296 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [206, 210[[214, 218[206 MustHaveRegister 208 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [216, 226[[234, 236[216 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [222, 230[222 MustHaveRegister 224 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [246, 250[[254, 258[246 MustHaveRegister 248 ShouldHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v23|q [256, 266[[274, 276[256 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v33|q [262, 270[262 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rcx|q]" v35|q -1 [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v33|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v23|q [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q -1 [286, 290[[294, 298[286 MustHaveRegister 288 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v23|q [296, 306[[314, 316[296 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v40|q [302, 310[302 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [304, 307[304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v40|q [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [326, 339[326 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [332, 336[332 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [100, 101[100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v10|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [132, 136[132 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "SpillInDominator"
  v51|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "SpillInDominator"
  v52|d DWORD "[vstack:2|d]" v2|d v2|d [14, 23[ "SpillInDominator"
  v53|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "SpillInDominator"
  v54|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "SpillInDominator"
  v55|d DWORD "[vstack:2|d]" v2|d v2|d [23, 52[ "SpillInDominator"
  v56|q QWORD "[vstack:3|q]" v5|q v5|q [23, 118[[122, 130[ "OneSpillStore"
  v57|d DWORD "[vstack:0|d]" v0|d v0|d [23, 68[30 ShouldHaveRegister  "SpillInDominator"
  v58|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "SpillInDominator"
  v59|d DWORD "[rdi|d]" v0|d v0|d [68, 72[70 MustHaveRegister  "SpillInDominator"
  v60|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "SpillInDominator"
  v61|d DWORD "[rdx|d]" v2|d v2|d [52, 56[54 MustHaveRegister  "SpillInDominator"
  v62|q QWORD "[rax|q]" v5|q v5|q [130, 134[134 ShouldHaveRegister  "OneSpillStore"
  v63|d DWORD "[vstack:1|d]" v1|d v1|d [44, 45[ "SpillInDominator"
  v64|d DWORD "[vstack:1|d]" v1|d v1|d [45, 68[ "SpillInDominator"
  v65|d DWORD "[vstack:1|d]" v1|d v1|d [68, 72[ "SpillInDominator"
  v66|d DWORD "[vstack:2|d]" v2|d v2|d [56, 57[ "SpillInDominator"
  v67|d DWORD "[vstack:2|d]" v2|d v2|d [57, 68[ "SpillInDominator"
  v68|d DWORD "[vstack:2|d]" v2|d v2|d [68, 72[ "SpillInDominator"
  v69|d DWORD "[vstack:0|d]" v0|d v0|d [72, 73[ "SpillInDominator"
  v70|d DWORD "[vstack:5|d]" v10|d v10|d [72, 73[ "SpillInDominator"
  v71|d DWORD "[vstack:1|d]" v1|d v1|d [72, 73[ "SpillInDominator"
  v72|d DWORD "[vstack:2|d]" v2|d v2|d [72, 73[ "SpillInDominator"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [73, 110[82 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
  v74|d DWORD "[vstack:5|d]" v10|d v10|d [73, 80[ "SpillInDominator"
  v75|d DWORD "[vstack:2|d]" v2|d v2|d [73, 110[94 ShouldHaveRegister 109 LiveAtLoopEnd  "SpillInDominator"
  v76|d DWORD "[vstack:0|d]" v0|d v0|d [73, 110[109 LiveAtLoopEnd  "SpillInDominator"
  v77|d DWORD "[rax|d]" v10|d v10|d [80, 84[82 MustHaveRegister  "SpillInDominator"
  v78|d DWORD "[rsi|d]" v1|d v1|d [358, 361[ "SpillInDominator"
  v79|d DWORD "[rdx|d]" v2|d v2|d [358, 361[ "SpillInDominator"
  v80|d DWORD "[rdi|d]" v0|d v0|d [358, 361[ "SpillInDominator"
  v81|d DWORD "[vstack:5|d]" v10|d v10|d [84, 85[ "SpillInDominator"
  v82|d DWORD "[vstack:5|d]" v10|d v10|d [85, 92[ "SpillInDominator"
  v83|d DWORD "[rax|d]" v10|d v10|d [92, 96[94 MustHaveRegister  "SpillInDominator"
  v84|d DWORD "[vstack:5|d]" v10|d v10|d [96, 97[ "SpillInDominator"
  v85|d DWORD "[vstack:5|d]" v10|d v10|d [97, 104[ "SpillInDominator"
  v86|d DWORD "[rax|d]" v10|d v10|d [104, 106[106 ShouldHaveRegister  "SpillInDominator"
  v87|q QWORD "[vstack:6|q]" v23|q v23|q [323, 330[ "OneSpillStore"
  v88|q QWORD "[rdx|q]" v23|q v23|q [330, 339[334 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[46, 48[[58, 60[[74, 76[[86, 88[[98, 100[[138, 139[[324, 326[[346, 348[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[136, 139[[324, 325[[336, 338[[346, 347[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[134, 139[[322, 325[[334, 338[[344, 347[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [48, 49[48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [60, 61[60 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v48|d [68, 72[70 ShouldHaveRegister  "StoreAtDefinition"
  v11|q QWORD "[rax|q]" v11|q rax|q [76, 77[76 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [88, 89[88 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v13|q [160, 172[160 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q r14|q [162, 173[162 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r15|q [164, 178[164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q -1 [166, 196[166 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [168, 174[168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [170, 178[170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [172, 182[[342, 344[172 MustHaveRegister 182 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v17|q [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [200, 323[204 MustHaveRegister 206 MustHaveRegister 216 ShouldHaveRegister 244 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 296 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [206, 210[[214, 218[206 MustHaveRegister 208 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [216, 226[[234, 236[216 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [222, 230[222 MustHaveRegister 224 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [246, 250[[254, 258[246 MustHaveRegister 248 ShouldHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v23|q [256, 266[[274, 276[256 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v33|q [262, 270[262 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rcx|q]" v35|q -1 [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v33|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v23|q [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q -1 [286, 290[[294, 298[286 MustHaveRegister 288 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v23|q [296, 306[[314, 316[296 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v40|q [302, 310[302 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [304, 307[304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v40|q [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [326, 339[326 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [332, 336[332 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [100, 101[100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v10|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [132, 136[132 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "StoreAtDefinition"
  v51|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "StoreAtDefinition"
  v52|d DWORD "[vstack:2|d]" v2|d v2|d [14, 23[ "StoreAtDefinition"
  v53|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "StoreAtDefinition"
  v54|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "StoreAtDefinition"
  v55|d DWORD "[vstack:2|d]" v2|d v2|d [23, 52[ "StoreAtDefinition"
  v56|q QWORD "[vstack:3|q]" v5|q v5|q [23, 118[[122, 130[ "OneSpillStore"
  v57|d DWORD "[vstack:0|d]" v0|d v0|d [23, 68[30 ShouldHaveRegister  "StoreAtDefinition"
  v58|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "StoreAtDefinition"
  v59|d DWORD "[rdi|d]" v0|d v0|d [68, 72[70 MustHaveRegister  "StoreAtDefinition"
  v60|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "StoreAtDefinition"
  v61|d DWORD "[rdx|d]" v2|d v2|d [52, 56[54 MustHaveRegister  "StoreAtDefinition"
  v62|q QWORD "[rax|q]" v5|q v5|q [130, 134[134 ShouldHaveRegister  "OneSpillStore"
  v63|d DWORD "[vstack:1|d]" v1|d v1|d [44, 45[ "StoreAtDefinition"
  v64|d DWORD "[vstack:1|d]" v1|d v1|d [45, 68[ "StoreAtDefinition"
  v65|d DWORD "[vstack:1|d]" v1|d v1|d [68, 72[ "StoreAtDefinition"
  v66|d DWORD "[vstack:2|d]" v2|d v2|d [56, 57[ "StoreAtDefinition"
  v67|d DWORD "[vstack:2|d]" v2|d v2|d [57, 68[ "StoreAtDefinition"
  v68|d DWORD "[vstack:2|d]" v2|d v2|d [68, 72[ "StoreAtDefinition"
  v69|d DWORD "[vstack:0|d]" v0|d v0|d [72, 73[ "StoreAtDefinition"
  v70|d DWORD "[vstack:5|d]" v10|d v10|d [72, 73[ "StoreAtDefinition"
  v71|d DWORD "[vstack:1|d]" v1|d v1|d [72, 73[ "StoreAtDefinition"
  v72|d DWORD "[vstack:2|d]" v2|d v2|d [72, 73[ "StoreAtDefinition"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [73, 110[82 ShouldHaveRegister 109 LiveAtLoopEnd  "StoreAtDefinition"
  v74|d DWORD "[vstack:5|d]" v10|d v10|d [73, 80[ "StoreAtDefinition"
  v75|d DWORD "[vstack:2|d]" v2|d v2|d [73, 110[94 ShouldHaveRegister 109 LiveAtLoopEnd  "StoreAtDefinition"
  v76|d DWORD "[vstack:0|d]" v0|d v0|d [73, 110[109 LiveAtLoopEnd  "StoreAtDefinition"
  v77|d DWORD "[rax|d]" v10|d v10|d [80, 84[82 MustHaveRegister  "StoreAtDefinition"
  v78|d DWORD "[rsi|d]" v1|d v1|d [358, 361[ "StoreAtDefinition"
  v79|d DWORD "[rdx|d]" v2|d v2|d [358, 361[ "StoreAtDefinition"
  v80|d DWORD "[rdi|d]" v0|d v0|d [358, 361[ "StoreAtDefinition"
  v81|d DWORD "[vstack:5|d]" v10|d v10|d [84, 85[ "StoreAtDefinition"
  v82|d DWORD "[vstack:5|d]" v10|d v10|d [85, 92[ "StoreAtDefinition"
  v83|d DWORD "[rax|d]" v10|d v10|d [92, 96[94 MustHaveRegister  "StoreAtDefinition"
  v84|d DWORD "[vstack:5|d]" v10|d v10|d [96, 97[ "StoreAtDefinition"
  v85|d DWORD "[vstack:5|d]" v10|d v10|d [97, 104[ "StoreAtDefinition"
  v86|d DWORD "[rax|d]" v10|d v10|d [104, 106[106 ShouldHaveRegister  "StoreAtDefinition"
  v87|q QWORD "[vstack:6|q]" v23|q v23|q [323, 330[ "OneSpillStore"
  v88|q QWORD "[rdx|q]" v23|q v23|q [330, 339[334 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[46, 48[[58, 60[[74, 76[[86, 88[[98, 100[[138, 139[[324, 326[[346, 348[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[136, 139[[324, 325[[336, 338[[346, 347[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[134, 139[[322, 325[[334, 338[[344, 347[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[46, 47[[58, 59[[74, 75[[86, 87[[98, 99[[138, 139[[324, 325[[346, 347[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "OneSpillStore"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [48, 49[48 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rax|q]" v9|q rax|q [60, 61[60 MustHaveRegister  "NoSpillStore"
  v10|d DWORD "[rax|d]" v10|d v48|d [68, 72[70 ShouldHaveRegister  "StoreAtDefinition"
  v11|q QWORD "[rax|q]" v11|q rax|q [76, 77[76 MustHaveRegister  "NoSpillStore"
  v12|q QWORD "[rax|q]" v12|q rax|q [88, 89[88 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rdi|q]" v13|q -1 [158, 160[158 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rdi|q]" v14|q v13|q [160, 172[160 MustHaveRegister 172 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rax|q]" v15|q r14|q [162, 173[162 MustHaveRegister 172 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r15|q [164, 178[164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q -1 [166, 196[166 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [168, 174[168 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [170, 178[170 MustHaveRegister 174 MustHaveRegister 178 MustHaveRegister  "NoSpillStore"
  v20|q QWORD "[rdi|q]" v20|q v14|q [172, 182[[342, 344[172 MustHaveRegister 182 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q rax|q [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdx|q]" v22|q v17|q [196, 199[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v22|q [200, 323[204 MustHaveRegister 206 MustHaveRegister 216 ShouldHaveRegister 244 MustHaveRegister 246 MustHaveRegister 256 ShouldHaveRegister 282 MustHaveRegister 284 MustHaveRegister 286 MustHaveRegister 296 ShouldHaveRegister 322 ShouldHaveRegister  "OneSpillStore"
  v24|q QWORD "[rdi|q]" v24|q -1 [202, 204[202 MustHaveRegister 204 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [206, 210[[214, 218[206 MustHaveRegister 208 ShouldHaveRegister 218 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v23|q [216, 226[[234, 236[216 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister 236 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [222, 230[222 MustHaveRegister 224 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [224, 227[224 MustHaveRegister 226 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [226, 228[226 MustHaveRegister 228 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [242, 244[242 MustHaveRegister 244 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q -1 [246, 250[[254, 258[246 MustHaveRegister 248 ShouldHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v33|q QWORD "[rax|q]" v33|q v23|q [256, 266[[274, 276[256 MustHaveRegister 262 MustHaveRegister 266 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rdi|q]" v34|q v33|q [262, 270[262 MustHaveRegister 264 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rcx|q]" v35|q -1 [264, 267[264 MustHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v33|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v36|q [268, 270[268 MustHaveRegister 270 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q v23|q [282, 284[282 MustHaveRegister 284 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rdi|q]" v39|q -1 [286, 290[[294, 298[286 MustHaveRegister 288 ShouldHaveRegister 298 ShouldHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v23|q [296, 306[[314, 316[296 MustHaveRegister 302 MustHaveRegister 306 MustHaveRegister 316 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rdi|q]" v41|q v40|q [302, 310[302 MustHaveRegister 304 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[rcx|q]" v42|q -1 [304, 307[304 MustHaveRegister 306 ShouldHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v40|q [306, 308[306 MustHaveRegister 308 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q v43|q [308, 310[308 MustHaveRegister 310 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rax|q]" v45|q rax|q [326, 339[326 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rsi|q]" v46|q -1 [332, 336[332 MustHaveRegister 336 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [100, 101[100 MustHaveRegister  "NoSpillStore"
  v48|d DWORD "[rax|d]" v48|d v10|d [106, 109[106 MustHaveRegister 108 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rsi|q]" v49|q -1 [132, 136[132 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v50|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "StoreAtDefinition"
  v51|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "StoreAtDefinition"
  v52|d DWORD "[vstack:2|d]" v2|d v2|d [14, 23[ "StoreAtDefinition"
  v53|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "StoreAtDefinition"
  v54|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "StoreAtDefinition"
  v55|d DWORD "[vstack:2|d]" v2|d v2|d [23, 52[ "StoreAtDefinition"
  v56|q QWORD "[vstack:3|q]" v5|q v5|q [23, 118[[122, 130[ "OneSpillStore"
  v57|d DWORD "[vstack:0|d]" v0|d v0|d [23, 68[30 ShouldHaveRegister  "StoreAtDefinition"
  v58|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "StoreAtDefinition"
  v59|d DWORD "[rdi|d]" v0|d v0|d [68, 72[70 MustHaveRegister  "StoreAtDefinition"
  v60|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "StoreAtDefinition"
  v61|d DWORD "[rdx|d]" v2|d v2|d [52, 56[54 MustHaveRegister  "StoreAtDefinition"
  v62|q QWORD "[rax|q]" v5|q v5|q [130, 134[134 ShouldHaveRegister  "OneSpillStore"
  v63|d DWORD "[vstack:1|d]" v1|d v1|d [44, 45[ "StoreAtDefinition"
  v64|d DWORD "[vstack:1|d]" v1|d v1|d [45, 68[ "StoreAtDefinition"
  v65|d DWORD "[vstack:1|d]" v1|d v1|d [68, 72[ "StoreAtDefinition"
  v66|d DWORD "[vstack:2|d]" v2|d v2|d [56, 57[ "StoreAtDefinition"
  v67|d DWORD "[vstack:2|d]" v2|d v2|d [57, 68[ "StoreAtDefinition"
  v68|d DWORD "[vstack:2|d]" v2|d v2|d [68, 72[ "StoreAtDefinition"
  v69|d DWORD "[vstack:0|d]" v0|d v0|d [72, 73[ "StoreAtDefinition"
  v70|d DWORD "[vstack:5|d]" v10|d v10|d [72, 73[ "StoreAtDefinition"
  v71|d DWORD "[vstack:1|d]" v1|d v1|d [72, 73[ "StoreAtDefinition"
  v72|d DWORD "[vstack:2|d]" v2|d v2|d [72, 73[ "StoreAtDefinition"
  v73|d DWORD "[vstack:1|d]" v1|d v1|d [73, 110[82 ShouldHaveRegister 109 LiveAtLoopEnd  "StoreAtDefinition"
  v74|d DWORD "[vstack:5|d]" v10|d v10|d [73, 80[ "StoreAtDefinition"
  v75|d DWORD "[vstack:2|d]" v2|d v2|d [73, 110[94 ShouldHaveRegister 109 LiveAtLoopEnd  "StoreAtDefinition"
  v76|d DWORD "[vstack:0|d]" v0|d v0|d [73, 110[109 LiveAtLoopEnd  "StoreAtDefinition"
  v77|d DWORD "[rax|d]" v10|d v10|d [80, 84[82 MustHaveRegister  "StoreAtDefinition"
  v78|d DWORD "[rsi|d]" v1|d v1|d [358, 361[ "StoreAtDefinition"
  v79|d DWORD "[rdx|d]" v2|d v2|d [358, 361[ "StoreAtDefinition"
  v80|d DWORD "[rdi|d]" v0|d v0|d [358, 361[ "StoreAtDefinition"
  v81|d DWORD "[vstack:5|d]" v10|d v10|d [84, 85[ "StoreAtDefinition"
  v82|d DWORD "[vstack:5|d]" v10|d v10|d [85, 92[ "StoreAtDefinition"
  v83|d DWORD "[rax|d]" v10|d v10|d [92, 96[94 MustHaveRegister  "StoreAtDefinition"
  v84|d DWORD "[vstack:5|d]" v10|d v10|d [96, 97[ "StoreAtDefinition"
  v85|d DWORD "[vstack:5|d]" v10|d v10|d [97, 104[ "StoreAtDefinition"
  v86|d DWORD "[rax|d]" v10|d v10|d [104, 106[106 ShouldHaveRegister  "StoreAtDefinition"
  v87|q QWORD "[vstack:6|q]" v23|q v23|q [323, 330[ "OneSpillStore"
  v88|q QWORD "[rdx|q]" v23|q v23|q [330, 339[334 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rsi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE rdx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH vstack:0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   62  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   74  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD vstack:5|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD vstack:5|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: vstack:0|DWORD vstack:1|DWORD vstack:2|DWORD vstack:5|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:5|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  102  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  106  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  134  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction  <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  160  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  168  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  170  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  174  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  176  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  178  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  180  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  182  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  184  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  196  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  204  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  206  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  244  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  246  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  248  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  250  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  284  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: vstack:6|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:6|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  334  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  338  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  340  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  128  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  224  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  226  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  230  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  298  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  304  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  308  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  310  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  312  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  264  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  266  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  270  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  318  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  356  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  362  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  334  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B41" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B41 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B42" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" "B15" "B6" "B3" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B42" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B6 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B19" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" "B9" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B27" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B23 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B23" "B26" "B25" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B32" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction JUMP ~[] destination: B28 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B28" "B31" "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction JUMP ~[] destination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B42" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B42" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B15 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B46" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B42" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B42" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr   62  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B19" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B42" "B16" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B17" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27] <|@ <|@
      nr  116  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B39" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B40" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:23) [bci: 44]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44] <|@ <|@
      nr  326  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B40 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B40" 
    successors "B13" "B42" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   84  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   90  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B12" "B14" "B5" "B2" 
    successors "B43" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:25) [bci: 59]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59] <|@ <|@
      nr  352  <|@ instruction JUMP ~[] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4605774967918220416
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction  <|@ <|@
      nr  358  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4605767368169847472
    begin_IR
      LIR
      nr  366  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  368  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B8" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  134  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  140  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  142  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  144  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  146  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" "B21" 
    successors "B27" "B24" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B22" "B26" "B25" 
    successors "B32" "B29" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  222  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  224  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  226  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  228  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B27" "B31" "B30" 
    successors "B37" "B34" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0 <|@ <|@
      nr  264  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  266  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  268  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B32" "B36" "B35" 
    successors "B38" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  300  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ st <@st|@reference-map: [8]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: stack:40|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40] <|@ <|@
      nr  308  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  316  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [-32, -16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 27]
stack: rax|QWORD[.] 
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest28.example_ftest28(ftest28.java:22) [bci: 40]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40] <|@ <|@
      nr  320  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  206  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  210  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  212  <|@ instruction JUMP ~[] destination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  274  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  276  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  284  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  292  <|@ instruction JUMP ~[] destination: B35 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  244  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  248  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  250  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  252  <|@ instruction JUMP ~[] destination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  218  <|@ instruction JUMP ~[] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B37" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  298  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  256  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  258  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:22) [bci: 36]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36] <|@ <|@
      nr  152  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors 
    xhandlers
    flags 
    probability 4560921365605466119
    begin_IR
      LIR
      nr  360  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  362  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:26) [bci: 62]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62] <|@ <|@
      nr  364  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest28.example_ftest28(ftest28.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0] <|@ <|@
      nr  374  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     54
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     27
    24: goto          54
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iload_3       
    32: iload_2       
    33: if_icmple     44
    36: new           #11         // java.lang.Exception
    39: dup           
    40: invokespecial #8          // java.lang.Exception.<init>:()void
    43: athrow        
    44: invokestatic  #7          // java.lang.System.console:()java.io.Console
    47: pop           
    48: iinc          
    51: goto          10
    54: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    57: ldc           #13         // End
    59: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    62: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec28897c2424897424208954241c498b4778488bcc483bc80f867e020000488b0500000000498d0406488b0d00000000498d0c0e488bf8488bf14889442410e80000000090837c2424010f8c7e000000e800000000908b74242085f60f8c6c000000e800000000908b54241c85d20f8c86000000e80000000090b801000000e93e00000066660f1f840000000000e800000000908b4424183b4424200f8f2c000000e800000000908b4424183b44241c0f8f44000000e800000000908b442418ffc08b7c2424894424183bf87fc0488b442410488b3500000000498d3436488bf8e800000000904183afb0000000010f8e9c0100004883c428c3488b3d00000000498d3c3e498bc6498bcf488b5118488b5910488d6a38482bf8483beb0f8760010000488969180f18823801000048893a48c742080000000048c742100000000048c742180000000048c742200000000048c742280000000048c7423000000000488b3d0000000048897a20488b3a48f7c7020000000f8556000000488b3d0000000048897a18488b3a48f7c7020000000f859f000000488bfa492bfe48897a10488b3a48f7c7020000000f8553000000488bfa4889542408e80000000090488b542408488d742430488bfae80000000090488bc248f7c7010000000f8586000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e978ffffff488bc248f7c7010000000f855d000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e97bffffff488bc248f7c7010000000f8534000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e92fffffffc640f800e90bffffffc640f800e937ffffffc640f800e914ffffffe80000000090488bd0e9d0feffffe800000000904883c428c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 12 6 stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 16 8 rax|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 20 10 rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 23 12 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B46 size: QWORD  <||@
  Comment 32 block B1 null  <||@
  Comment 32 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 32 16 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 32 {DataSection[?]}  <||@
  Comment 43 18 rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 43 {DataSection[?]}  <||@
  Comment 54 20 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 57 22 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 60 24 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 65 26 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:5]  <||@
  Comment 65 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 70 [16]at ftest28.example_ftest28(ftest28.java:15) [bci: 5, duringCall: true, rethrow: false]
              |0               |1               |2               |3 
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |-   <||@
  Comment 71 28 JUMP ~[] destination: B1 -> B2  <||@
  Comment 71 block B2 null  <||@
  Comment 71 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 32 CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B42 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 82 block B4 null  <||@
  Comment 82 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 42 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15]  <||@
  Comment 82 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 87 [16]at ftest28.example_ftest28(ftest28.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 88 44 rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 92 46 JUMP ~[] destination: B4 -> B5  <||@
  Comment 92 block B5 null  <||@
  Comment 92 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 50 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B42 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 100 block B7 null  <||@
  Comment 100 58 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 60 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27]  <||@
  Comment 100 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 105 [16]at ftest28.example_ftest28(ftest28.java:20) [bci: 27, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 106 62 rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 110 64 JUMP ~[] destination: B7 -> B8  <||@
  Comment 110 block B8 null  <||@
  Comment 110 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 68 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B19 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 118 block B10 null  <||@
  Comment 118 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 118 76 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44]  <||@
  Comment 118 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 123 [16]at ftest28.example_ftest28(ftest28.java:23) [bci: 44, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 124 78 JUMP ~[] destination: B10 -> B11  <||@
  Comment 124 block B11 null  <||@
  Comment 124 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 82 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 129 86 JUMP ~[] destination: B11 -> B12  <||@
  Comment 134 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 134 94 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 144 96 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:15]  <||@
  Comment 144 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 149 [16]at ftest28.example_ftest28(ftest28.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 150 98 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 154 100 JUMP ~[] destination: B13 -> B14  <||@
  Comment 154 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 154 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 154 104 CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B42 falseDestination: B14 -> B16 size: DWORD  <||@
  Comment 164 block B16 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 164 112 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 164 114 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27]  <||@
  Comment 164 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 169 [16]at ftest28.example_ftest28(ftest28.java:20) [bci: 27, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 170 116 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 174 118 JUMP ~[] destination: B16 -> B17  <||@
  Comment 174 block B17 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 174 120 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 122 CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B17 -> B19 falseDestination: B17 -> B39 size: DWORD  <||@
  Comment 184 block B39 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 184 322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 184 324 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:44]  <||@
  Comment 184 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 189 [16]at ftest28.example_ftest28(ftest28.java:23) [bci: 44, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 190 326 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 194 328 JUMP ~[] destination: B39 -> B40  <||@
  Comment 194 block B40 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 194 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 194 332 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 196 336 JUMP ~[] destination: B40 -> B12  <||@
  Comment 196 block B12 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 196 88 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 196 84 rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD  <||@
  Comment 200 90 stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 204 92 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B42 size: DWORD  <||@
  Comment 208 block B42 null  <||@
  Comment 208 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 208 340 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 213 346 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 213 {DataSection[?]}  <||@
  Comment 224 348 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 227 350 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:59]  <||@
  Comment 227 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 232 []at ftest28.example_ftest28(ftest28.java:25) [bci: 59, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 233 352 JUMP ~[] destination: B42 -> B43  <||@
  Comment 233 block B43 null  <||@
  Comment 233 354 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 233 356   <||@
  Comment 241 358 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 247 block B45 null  <||@
  Comment 247 366 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 247 368 RETURN -  <||@
  Comment 247 EPILOGUE_START  <||@
  Comment 251 EPILOGUE_INCD_RSP  <||@
  Comment 251 EPILOGUE_END  <||@
  Comment 252 block B19 null  <||@
  Comment 252 128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 252 130 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 252 {DataSection[?]}  <||@
  Comment 263 132 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 263 134 rax|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 266 136 rcx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 269 138 rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD  <||@
  Comment 273 140 rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD  <||@
  Comment 277 142 rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD  <||@
  Comment 281 144 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 284 146 CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 size: QWORD  <||@
  Comment 293 block B21 null  <||@
  Comment 293 156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 158 MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD  <||@
  Comment 297 160 AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0  <||@
  Comment 304 162 MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 307 164 MOV [rdx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 315 166 MOV [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 323 168 MOV [rdx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 331 170 MOV [rdx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 339 172 MOV [rdx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 347 174 MOV [rdx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 355 176 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 355 178 JUMP ~[] destination: B21 -> B22  <||@
  Comment 355 block B22 null  <||@
  Comment 355 180 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 355 182 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 355 {DataSection[?]}  <||@
  Comment 362 184 MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 366 186 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 369 188 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B22 -> B27 falseDestination: B22 -> B24 y: 2 size: QWORD  <||@
  Comment 382 block B27 null  <||@
  Comment 382 220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 382 222 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@71ca5d38 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 382 {DataSection[?]}  <||@
  Comment 389 224 MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 393 226 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 396 228 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B27 -> B32 falseDestination: B27 -> B29 y: 2 size: QWORD  <||@
  Comment 409 block B32 null  <||@
  Comment 409 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 409 262 rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@233107f4 encoding: base: 1 shift: 0  <||@
  Comment 415 264 MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 419 266 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 422 268 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B37 falseDestination: B32 -> B34 y: 2 size: QWORD  <||@
  Comment 435 block B37 null  <||@
  Comment 435 300 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 302 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 438 304 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 443 306 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:24, 1, 40]  <||@
  Comment 443 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 448 [8]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest28.example_ftest28(ftest28.java:22) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |   |   |    <||@
  Comment 449 308 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 454 310 JUMP ~[] destination: B37 -> B38  <||@
  Comment 454 block B38 null  <||@
  Comment 454 312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 454 314 rsi|QWORD = STACKLEA in:0|QWORD  <||@
  Comment 459 316 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 462 318 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:27, 1, 40]  <||@
  Comment 462 {HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>>}  <||@
  Comment 467 [-32, -16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 27, duringCall: false, rethrow: false]
              |0            
     locals:  |-            
     stack:   |rax|QWORD[.] 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest28.example_ftest28(ftest28.java:22) [bci: 40, duringCall: true, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |rdx|QWORD[.]  |   |   |    <||@
  Comment 468 320 DEAD_END  <||@
  Comment 468 block B24 null  <||@
  Comment 468 194 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 468 196 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 471 198 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 1 size: QWORD  <||@
  Comment 484 block B25 null  <||@
  Comment 484 200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 484 202 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 494 204 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 501 206 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 504 208 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 508 210 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 513 212 JUMP ~[] destination: B25 -> B27  <||@
  Comment 518 block B34 null  <||@
  Comment 518 274 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 518 276 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 521 278 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD  <||@
  Comment 534 block B35 null  <||@
  Comment 534 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 534 282 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 544 284 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 551 286 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 554 288 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 558 290 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 563 292 JUMP ~[] destination: B35 -> B37  <||@
  Comment 568 block B29 null  <||@
  Comment 568 234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 568 236 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 571 238 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 1 size: QWORD  <||@
  Comment 584 block B30 null  <||@
  Comment 584 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 584 242 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 594 244 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 601 246 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 604 248 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 608 250 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 613 252 JUMP ~[] destination: B30 -> B32  <||@
  Comment 618 block B26 null  <||@
  Comment 618 214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 618 216 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 622 218 JUMP ~[] destination: B26 -> B27  <||@
  Comment 627 block B36 null  <||@
  Comment 627 294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 627 296 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 631 298 JUMP ~[] destination: B36 -> B37  <||@
  Comment 636 block B31 null  <||@
  Comment 636 254 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 256 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 640 258 JUMP ~[] destination: B31 -> B32  <||@
  Comment 645 block B20 null  <||@
  Comment 645 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 645 150 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:36]  <||@
  Comment 645 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 650 []at ftest28.example_ftest28(ftest28.java:22) [bci: 36, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 651 152 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 654 154 JUMP ~[] destination: B20 -> B22  <||@
  Comment 659 block B44 null  <||@
  Comment 659 360 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 659 362 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:62]  <||@
  Comment 659 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 664 []at ftest28.example_ftest28(ftest28.java:26) [bci: 62, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 665 364 RETURN -  <||@
  Comment 665 EPILOGUE_START  <||@
  Comment 669 EPILOGUE_INCD_RSP  <||@
  Comment 669 EPILOGUE_END  <||@
  Comment 670 block B46 null  <||@
  Comment 670 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 670 372 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@226f60a3 state [bci:0]  <||@
  Comment 670 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 675 []at ftest28.example_ftest28(ftest28.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2          |3 
     locals:  |rdi|DWORD  |rsi|DWORD  |rdx|DWORD  |-   <||@
  Comment 676 374 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
