begin_compilation
  name " SubstrateHostedCompilation-20787[ftest42.example_ftest42(int, int, int)]"
  method "SubstrateHostedCompilation-20787[ftest42.example_ftest42(int, int, int)]"
  date 1585502777813
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j170 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j170  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j170 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@2001467f
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: j160 
=== Usages ===
v162 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: j160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j160 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
v162 
=== Predecessor ===
j170 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j170 
y: j160 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j170 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v22 ?248 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v27 ?248 i21 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i21 ?248 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
j160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v163 #falseSuccessor: v164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@3b47fc62
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 13
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
d <@d|@=== Debug Properties ===
bci: 0
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v171 
stateDuring: ?247 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v171 stateDuring: ?247 #next: v10  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:13) [bci: 0]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a139  <|@  <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@4eac6468
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 14
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v172 
stateDuring: ?248 
=== Succesors ===
next: v20 
=== Usages ===
?19 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v172 stateDuring: ?248 #next: v20  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:14) [bci: 4]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
a139 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 v235 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@39fb6a8a
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i1 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v24 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:14) [bci: 4]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 14
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 a139 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?19 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?19 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:19) [bci: 16]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 v357 v358 v386 v387 v415 v416 v444 v445 v618 v531 v532 v560 v561 v589 v590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j379 j408 j437 j524 j553 j582 j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j380 j409 j438 j525 j554 j583 j612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j353 j382 j411 j440 j527 j556 j585 j614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 v374 v403 v432 v519 v548 v577 v606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v370 v399 v428 v515 v544 v573 v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a218 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 v204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 v317 v318 v319 v320 v321 v322 v499 v500 v501 v503 v502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j282 j468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a266 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 j275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 102]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 v196 v174 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@d17f67
keySuccessors: [I@6e790b5f
keys: [I@6ad95e1e
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:19) [bci: 17]
stamp: void
=== Inputs ===
value: i2 
=== Succesors ===
successors: v28 v29 v30 v31 v32 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i2 #successors: v28 v29 v30 v31 v32  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 48]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 51]
rawvalue: 1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@477be809
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a76 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a76  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 21
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v173 
stateDuring: ?249 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v173 stateDuring: ?249 #next: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 59]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4c5a9dc6
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a65 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a65  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 24
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
bci: 64
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v174 
stateDuring: ?250 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v174 stateDuring: ?250 #next: v72  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 64]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a143  <|@  <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6a5f54e1
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v175 
stateDuring: ?251 
=== Succesors ===
next: v60 
=== Usages ===
?59 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v175 stateDuring: ?251 #next: v60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j275 
=== Usages ===
=== Predecessor ===
a143 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a266 
=== Succesors ===
next: j276 
=== Usages ===
j292 
=== Predecessor ===
v60 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a266 #next: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
j292 
=== Predecessor ===
j275 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j278 
=== Usages ===
v651 v652 
=== Predecessor ===
j276 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j278 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: j279 
=== Usages ===
j282 v643 a298 v644 v645 v646 v647 v648 v649 v650 
=== Predecessor ===
j277 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: j279  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j279 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
v283 
=== Predecessor ===
j278 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j278 
y: j281 
=== Succesors ===
=== Usages ===
v283 v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j278 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j279 
y: j282 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j279 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j275 
y: j276 
=== Succesors ===
=== Usages ===
a293 v316 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j275 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a293  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 27
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a143 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?59 
arguments: j292 
=== Succesors ===
next: v294 
=== Usages ===
a300 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?59 arguments: j292 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
value: j282 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - value: j282 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v644 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v644 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: j292 stateAfter: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: j290 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: j290 stateAfter: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v647 lastLocationAccess: - value: j290 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v648 lastLocationAccess: - value: j290 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j290 stateAfter: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: j290 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j278 
=== Succesors ===
next: v299 
=== Usages ===
a300 
=== Predecessor ===
v322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j278 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v295 
values: a293 a298 
=== Succesors ===
=== Usages ===
a396 a189 v635 a179 v636 v637 a332 a367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a293 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v294 v299 
=== Succesors ===
next: v188 
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
value: a218 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - value: a218 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j356 
=== Usages ===
v653 j346 
=== Predecessor ===
v188 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j356  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v336 v341 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j335 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v339 
=== Usages ===
v654 j348 j351 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j340 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j346 
y: j347 
=== Succesors ===
=== Usages ===
j350 v655 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j346 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j348 
y: j349 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j348 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j346 
y: j350 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j346 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j351 
y: i352 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j351 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j348 
index: j353 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: i323 stateAfter: - #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j346 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - value: i323 stateAfter: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v361 v362 v363 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v362 v363 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: a217 stateAfter: - #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j385 
=== Usages ===
v656 j378 
=== Predecessor ===
v184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j385  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v370 v374 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j335 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
j385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a367 
=== Succesors ===
next: v373 
=== Usages ===
v657 j379 j381 
=== Predecessor ===
v372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a367 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j340 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j378 
y: j347 
=== Succesors ===
=== Usages ===
j380 v658 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j378 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j379 
y: j349 
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j378 
y: j380 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j378 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j381 
y: i352 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j381 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j379 
index: j382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i323 stateAfter: - #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j378 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: i323 stateAfter: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v390 v391 v392 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 v392 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a300 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: a179 
stateAfter: - 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: a179 stateAfter: - #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j414 
=== Usages ===
v659 j407 
=== Predecessor ===
v180 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v399 v403 
=== Predecessor ===
a396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j335 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v400 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a396 
=== Succesors ===
next: v402 
=== Usages ===
v660 j408 j410 
=== Predecessor ===
v401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a396 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j340 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
j407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j407 
y: j347 
=== Succesors ===
=== Usages ===
j409 v661 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j407 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j408 
y: j349 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j407 
y: j409 
=== Succesors ===
=== Usages ===
j411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j407 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j410 
y: i352 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j410 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j408 
index: j411 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: i323 stateAfter: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: i323 stateAfter: - #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v419 v420 v421 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v420 v421 #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: a144 
=== Usages ===
v191 ?157 v638 a17 a425 a17 a17 
=== Predecessor ===
v190 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: a144  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@4a56ce1a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a189 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a189  <|@  <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@52754cf9
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?252 ?157 ?104 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a154 
=== Succesors ===
=== Usages ===
?136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a154  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Exception.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 66
stackSize: 0
=== Inputs ===
outerFrameState: ?104 
values: - - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?104 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:28) [bci: 78]
rawvalue: ex1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a154 
materializedValue: a189 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a154 materializedValue: a189  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a154 a62 
virtualObjectMappings: ?157 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a154 a62 virtualObjectMappings: ?157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?252 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
a189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?252 #next: v133  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a189 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a189 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a219 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
rawvalue: ex1
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: Throwable.detailMessage
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
value: a219 
stateAfter: - 
=== Succesors ===
next: a425 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - value: a219 stateAfter: - #next: a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a189 
=== Succesors ===
next: j443 
=== Usages ===
v662 j436 
=== Predecessor ===
v195 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a189 #next: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a425 
index: - 
=== Succesors ===
=== Usages ===
j443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a425 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
v428 v432 
=== Predecessor ===
a425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
x: j443 
y: j335 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v429 #falseSuccessor: v430  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64
trackedPointer: false
=== Inputs ===
input: a425 
=== Succesors ===
next: v431 
=== Usages ===
v663 j437 j439 
=== Predecessor ===
v430 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a425 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
x: j443 
y: j340 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j436 
y: j347 
=== Succesors ===
=== Usages ===
j438 v664 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j436 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j437 
y: j349 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64
=== Inputs ===
x: j436 
y: j438 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j436 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j439 
y: i352 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j439 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j437 
index: j440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: j440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: i323 stateAfter: - #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - value: i323 stateAfter: - #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 84]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 87]
rawvalue: 4
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4ad94fdc
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a42 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a42  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 30
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
bci: 89
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v196 
stateDuring: ?253 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v196 stateDuring: ?253 #next: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 89]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j462 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a266 
=== Succesors ===
next: j463 
=== Usages ===
j477 
=== Predecessor ===
v49 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a266 #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
j477 
=== Predecessor ===
j462 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
v673 v674 
=== Predecessor ===
j463 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
j465 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: j466 
=== Usages ===
j468 v665 a483 v666 v667 v668 v669 v670 v671 v672 
=== Predecessor ===
j464 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
v469 
=== Predecessor ===
j465 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v674 lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j465 
y: j281 
=== Succesors ===
=== Usages ===
v469 v472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j465 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j468 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j466 y: j468  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j462 
y: j463 
=== Succesors ===
=== Usages ===
a478 v497 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j462 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
j466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 89]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?48 
arguments: j477 
=== Succesors ===
next: v479 
=== Usages ===
a485 
=== Predecessor ===
v470 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?48 arguments: j477 #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
a478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
value: j468 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - value: j468 stateAfter: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v666 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v666 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
value: j477 
stateAfter: - 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - value: j477 stateAfter: - #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - value: j290 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - value: j290 stateAfter: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - value: j290 stateAfter: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - value: j290 stateAfter: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v671 lastLocationAccess: - value: j290 stateAfter: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: j290 stateAfter: - #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j465 
=== Succesors ===
next: v484 
=== Usages ===
a485 
=== Predecessor ===
v503 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j465 #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
a483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v480 
values: a478 a483 
=== Succesors ===
=== Usages ===
a570 a205 v639 a199 v640 v641 a512 a541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: a478 a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v479 v484 
=== Succesors ===
next: v204 
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v479 v484 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
value: a218 
stateAfter: - 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - value: a218 stateAfter: - #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j530 
=== Usages ===
v675 j523 
=== Predecessor ===
v204 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v515 v519 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j335 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
j530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v516 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a512 
=== Succesors ===
next: v518 
=== Usages ===
v676 j524 j526 
=== Predecessor ===
v517 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a512 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j340 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j523 
y: j347 
=== Succesors ===
=== Usages ===
j525 v677 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j523 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j524 
y: j349 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j524 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j523 
y: j525 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j523 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j526 
y: i352 
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j526 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j524 
index: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - value: i323 stateAfter: - #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - value: i323 stateAfter: - #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v535 v536 v537 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v536 v537 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: a541 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: a217 stateAfter: - #next: a541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j559 
=== Usages ===
v678 j552 
=== Predecessor ===
v202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a541 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a541 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v544 v548 
=== Predecessor ===
a541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j335 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a541 
=== Succesors ===
next: v547 
=== Usages ===
v679 j553 j555 
=== Predecessor ===
v546 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a541 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j340 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j552 
y: j347 
=== Succesors ===
=== Usages ===
j554 v680 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j552 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j553 
y: j349 
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j553 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j552 
y: j554 
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j552 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j555 
y: i352 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j555 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j553 
index: j556 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - value: i323 stateAfter: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - value: i323 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v564 v565 v566 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v565 v566 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a485 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: a199 stateAfter: - #next: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j588 
=== Usages ===
v681 j581 
=== Predecessor ===
v200 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j588  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a570 
index: - 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v572 
=== Usages ===
v573 v577 
=== Predecessor ===
a570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j588 
y: j335 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j588 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
j588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v574 #falseSuccessor: v575  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j581 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a570 
=== Succesors ===
next: v576 
=== Usages ===
v682 j582 j584 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a570 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j588 
y: j340 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j588 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
j581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v578 #falseSuccessor: v579  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j581 
y: j347 
=== Succesors ===
=== Usages ===
j583 v683 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j581 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j582 
y: j349 
=== Succesors ===
=== Usages ===
j584 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j582 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j581 
y: j583 
=== Succesors ===
=== Usages ===
j585 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j581 y: j583  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j584 
y: i352 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j584 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j582 
index: j585 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j582 index: j585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - value: i323 stateAfter: - #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j581 
index: - 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j581 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - value: i323 stateAfter: - #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v593 v594 v595 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v593 v594 v595 #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: a142 
=== Usages ===
v207 ?153 v642 a17 a599 a17 a17 
=== Predecessor ===
v206 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: a142  <|@  <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@5a31f23a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a205 
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a205  <|@  <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@266bd178
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?254 ?153 ?103 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 31
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a150 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a150  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Exception.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 66
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: - - 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:31) [bci: 96]
rawvalue: ex2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a150 
materializedValue: a205 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a150 materializedValue: a205  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?121 
values: a150 a51 
virtualObjectMappings: ?153 
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a150 a51 virtualObjectMappings: ?153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a142 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v207 
stateDuring: ?254 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
a205 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v207 stateDuring: ?254 #next: v118  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
a142 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a205 
index: - 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
rawvalue: ex2
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: Throwable.detailMessage
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
value: a220 
stateAfter: - 
=== Succesors ===
next: a599 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - value: a220 stateAfter: - #next: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a205 
=== Succesors ===
next: j617 
=== Usages ===
v684 j610 
=== Predecessor ===
v210 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: j617  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j617 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v602 v606 
=== Predecessor ===
a599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
x: j617 
y: j335 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j617 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
j617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j610 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j610 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64
trackedPointer: false
=== Inputs ===
input: a599 
=== Succesors ===
next: v605 
=== Usages ===
v685 j611 j613 
=== Predecessor ===
v604 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a599 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
x: j617 
y: j340 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j617 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
j610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j610 
y: j347 
=== Succesors ===
=== Usages ===
j612 v686 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j610 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j611 
y: j349 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j611 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64
=== Inputs ===
x: j610 
y: j612 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j610 y: j612  <|@  <|@
f <@~|@floating>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j613 
y: i352 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j613 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j611 
index: j614 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j611 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - value: i323 stateAfter: - #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j610 
index: - 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - value: i323 stateAfter: - #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a17 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v15 
values: a205 a189 a189 a189 a205 a205 
=== Succesors ===
=== Usages ===
?101 v212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: a205 a189 a189 a189 a205 a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v53 v64 v630 v631 v632 v633 
=== Succesors ===
next: j211 
=== Usages ===
a17 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v64 v630 v631 v632 v633 #next: j211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
v212 
=== Predecessor ===
v15 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v212  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a17 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?101 
arguments: a17 j211 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
j211 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?101 arguments: a17 j211 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 102]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 105]
rawvalue: default
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5e0153c8
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a34 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a34  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 33
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v214 
stateDuring: ?255 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v214 stateDuring: ?255 #next: v41  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v41 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v73 v75 v84 
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v73 v75 v84 #next: a147  <|@  <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@5ea6407b
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 110
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 36
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
d <@d|@=== Debug Properties ===
bci: 110
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v215 
stateDuring: ?256 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v215 stateDuring: ?256 #next: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a148 
=== Usages ===
=== Predecessor ===
a147 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a148  <|@  <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@b53d9b7
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 37
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
d <@d|@=== Debug Properties ===
bci: 114
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v216 
stateDuring: ?257 
=== Succesors ===
next: v99 
=== Usages ===
?98 
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v216 stateDuring: ?257 #next: v99  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:37) [bci: 114]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
a148 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v236 #falseSuccessor: v237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 117
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:37) [bci: 114]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 37
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a148 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?98 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?98 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:38) [bci: 118]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:38) [bci: 118]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 13
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j170 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j170  <|@  <|@
f <@~|@floating>@ <|@
tid j159 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v634 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j159 
index: - 
=== Succesors ===
=== Usages ===
j170 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j159 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j170 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@2001467f
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v634 
lastLocationAccess: - 
=== Succesors ===
next: j160 
=== Usages ===
v162 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v634 lastLocationAccess: - #next: j160  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j160 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v161 
=== Usages ===
v162 
=== Predecessor ===
j170 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j170 
y: j160 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j170 y: j160  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v22 ?248 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 v27 ?248 i21 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 i21 ?248 ?19 ?247 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v162 
=== Succesors ===
trueSuccessor: v163 
falseSuccessor: v164 
=== Usages ===
=== Predecessor ===
j160 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v162 #trueSuccessor: v163 #falseSuccessor: v164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a138 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a138  <|@  <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@3b47fc62
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 13
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
a138 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a138 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 0
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v171 
stateDuring: ?247 
=== Succesors ===
next: v10 
=== Usages ===
=== Predecessor ===
v163 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v171 stateDuring: ?247 #next: v10  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:13) [bci: 0]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a139 
=== Usages ===
=== Predecessor ===
a138 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a139  <|@  <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@4eac6468
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?248 <|@
d <@d|@=== Debug Properties ===
bci: 4
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 14
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
a139 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a139 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 4
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v172 
stateDuring: ?248 
=== Succesors ===
next: v20 
=== Usages ===
?19 
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v172 stateDuring: ?248 #next: v20  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:14) [bci: 4]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v25 
=== Usages ===
=== Predecessor ===
a139 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v25  <|@  <|@
f <@~|@floating>@ <|@
tid v227 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 v235 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i21 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 11]
stamp: i32
=== Inputs ===
x: i2 
y: i3 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2 y: i3  <|@  <|@
f <@~|@floating>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@39fb6a8a
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i21 
y: i1 
=== Succesors ===
=== Usages ===
v25 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i21 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v22 
=== Succesors ===
trueSuccessor: v24 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v22 #trueSuccessor: v24 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v226 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v226  <|@  <|@
f <@*|@fixed>@ <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v229 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v228 #falseSuccessor: v229  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v230 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v230  <|@  <|@
tid ?19 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:14) [bci: 4]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 14
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 a139 
=== Succesors ===
=== Usages ===
v230 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 a139  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?19 
=== Succesors ===
next: v244 
=== Usages ===
=== Predecessor ===
v228 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?19 #next: v244  <|@  <|@
f <@*|@fixed>@ <|@
tid v244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v229 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v243 
=== Usages ===
=== Predecessor ===
v226 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v243  <|@  <|@
f <@*|@fixed>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:17) [bci: 15]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v229 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:19) [bci: 16]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v25 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v27  <|@  <|@
f <@~|@floating>@ <|@
tid a217 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v184 v202 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v619 v357 v358 v386 v387 v415 v416 v444 v445 v618 v531 v532 v560 v561 v589 v590 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j379 j408 j437 j524 j553 j582 j611 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result long[4136|0x1028] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j380 j409 j438 j525 j554 j583 j612 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j353 j382 j411 j440 j527 j556 j585 j614 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 v374 v403 v432 v519 v548 v577 v606 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v370 v399 v428 v515 v544 v573 v602 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a218 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v188 v204 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v498 v317 v318 v319 v320 v321 v322 v499 v500 v501 v503 v502 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j282 j468 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a266 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j462 j275 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 102]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 v196 v174 v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@d17f67
keySuccessors: [I@6e790b5f
keys: [I@6ad95e1e
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:19) [bci: 17]
stamp: void
=== Inputs ===
value: i2 
=== Succesors ===
successors: v28 v29 v30 v31 v32 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i2 #successors: v28 v29 v30 v31 v32  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 48]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v146  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 51]
rawvalue: 1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@477be809
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a76 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a76  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 21
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v173 
stateDuring: ?249 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v173 stateDuring: ?249 #next: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:21) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
v146 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 59]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v145 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v145  <|@  <|@
f <@~|@floating>@ <|@
tid a65 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 62]
rawvalue: 2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v174 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4c5a9dc6
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a65 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a65  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 64
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 24
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v145 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v145 <|@
d <@d|@=== Debug Properties ===
bci: 64
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v174 
stateDuring: ?250 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v29 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v174 stateDuring: ?250 #next: v72  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:24) [bci: 64]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v145 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a143 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a143  <|@  <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6a5f54e1
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 27
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a143 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a143 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 70
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v175 
stateDuring: ?251 
=== Succesors ===
next: v60 
=== Usages ===
?59 
=== Predecessor ===
v30 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v175 stateDuring: ?251 #next: v60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j275 
=== Usages ===
=== Predecessor ===
a143 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a266 
=== Succesors ===
next: j276 
=== Usages ===
j292 
=== Predecessor ===
v60 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a266 #next: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
j292 
=== Predecessor ===
j275 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j278 
=== Usages ===
v651 v652 
=== Predecessor ===
j276 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v651 <|@
result [v17|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j278 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
=== Succesors ===
next: j279 
=== Usages ===
j282 v643 a298 v644 v645 v646 v647 v648 v649 v650 
=== Predecessor ===
j277 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - #next: j279  <|@  <|@
f <@~|@floating>@ <|@
tid v652 <|@
result [v17|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
j279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j279 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v652 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
v283 
=== Predecessor ===
j278 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v652 lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j278 
y: j281 
=== Succesors ===
=== Usages ===
v283 v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j278 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j279 
y: j282 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j279 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j275 
y: j276 
=== Succesors ===
=== Usages ===
a293 v316 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j275 y: j276  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j279 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a293  <|@  <|@
tid ?59 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:27) [bci: 70]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 27
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a143 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a143  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?59 
arguments: j292 
=== Succesors ===
next: v294 
=== Usages ===
a300 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?59 arguments: j292 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v651 
lastLocationAccess: - 
value: j282 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v651 lastLocationAccess: - value: j282 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v644 <|@
result [v18|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v644 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v644 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v643 <|@
result [v18|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v643 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v643 lastLocationAccess: - value: j292 stateAfter: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v645 <|@
result [v18|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v645 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v645 lastLocationAccess: - value: j290 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v646 <|@
result [v18|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v646 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v646 lastLocationAccess: - value: j290 stateAfter: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v647 <|@
result [v18|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v647 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v647 lastLocationAccess: - value: j290 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v648 <|@
result [v18|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v648 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v648 lastLocationAccess: - value: j290 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v649 <|@
result [v18|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v649 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v649 lastLocationAccess: - value: j290 stateAfter: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v650 <|@
result [v18|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j278 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j278 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v650 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v650 lastLocationAccess: - value: j290 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j278 
=== Succesors ===
next: v299 
=== Usages ===
a300 
=== Predecessor ===
v322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j278 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a300 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v295 
values: a293 a298 
=== Succesors ===
=== Usages ===
a396 a189 v635 a179 v636 v637 a332 a367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a293 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v294 v299 
=== Succesors ===
next: v188 
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 #next: v188  <|@  <|@
f <@~|@floating>@ <|@
tid v637 <|@
result [v24|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v637 
lastLocationAccess: - 
value: a218 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v637 lastLocationAccess: - value: a218 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j356 
=== Usages ===
v653 j346 
=== Predecessor ===
v188 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j356  <|@  <|@
f <@~|@floating>@ <|@
tid v653 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v653 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v336 v341 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v653 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j335 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v339 
=== Usages ===
v654 j348 j351 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j340 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j346 
y: j347 
=== Succesors ===
=== Usages ===
j350 v655 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j346 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j348 
y: j349 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j348 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j346 
y: j350 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j346 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j351 
y: i352 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j351 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v655 <|@
result [v27|QWORD + v30|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j348 
index: j353 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v655 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v655 lastLocationAccess: - value: i323 stateAfter: - #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v654 <|@
result [v26|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j346 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v654 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v654 lastLocationAccess: - value: i323 stateAfter: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v361 v362 v363 
=== Succesors ===
next: v184 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v362 v363 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v636 <|@
result [v24|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v636 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v636 lastLocationAccess: - value: a217 stateAfter: - #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j385 
=== Usages ===
v656 j378 
=== Predecessor ===
v184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j385  <|@  <|@
f <@~|@floating>@ <|@
tid v656 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v656 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v370 v374 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v656 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j335 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
j385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a367 
=== Succesors ===
next: v373 
=== Usages ===
v657 j379 j381 
=== Predecessor ===
v372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a367 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j340 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j378 
y: j347 
=== Succesors ===
=== Usages ===
j380 v658 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j378 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j379 
y: j349 
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j378 
y: j380 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j378 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j381 
y: i352 
=== Succesors ===
=== Usages ===
v658 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j381 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v658 <|@
result [v33|QWORD + v36|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j379 
index: j382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v658 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v658 lastLocationAccess: - value: i323 stateAfter: - #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
result [v32|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j378 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v657 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v657 lastLocationAccess: - value: i323 stateAfter: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v390 v391 v392 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 v392 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a300 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v635 
lastLocationAccess: - 
value: a179 
stateAfter: - 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v635 lastLocationAccess: - value: a179 stateAfter: - #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j414 
=== Usages ===
v659 j407 
=== Predecessor ===
v180 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v659 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v659 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v399 v403 
=== Predecessor ===
a396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v659 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j335 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v400 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a396 
=== Succesors ===
next: v402 
=== Usages ===
v660 j408 j410 
=== Predecessor ===
v401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a396 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j340 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
j407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j407 
y: j347 
=== Succesors ===
=== Usages ===
j409 v661 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j407 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j408 
y: j349 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j407 
y: j409 
=== Succesors ===
=== Usages ===
j411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j407 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j410 
y: i352 
=== Succesors ===
=== Usages ===
v661 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j410 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v661 <|@
result [v40|QWORD + v43|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j408 
index: j411 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v661 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v661 lastLocationAccess: - value: i323 stateAfter: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v660 <|@
result [v39|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v660 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v660 lastLocationAccess: - value: i323 stateAfter: - #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v419 v420 v421 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v420 v421 #next: v190  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a189 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a189 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: a144 
=== Usages ===
v191 ?157 v638 a17 a425 a17 a17 
=== Predecessor ===
v190 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: a144  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@4a56ce1a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a189 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a189  <|@  <|@
tid a154 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@52754cf9
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?252 ?157 ?104 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 80
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 28
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a154 
=== Succesors ===
=== Usages ===
?136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a154  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Exception.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 66
stackSize: 0
=== Inputs ===
outerFrameState: ?104 
values: - - 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?104 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a62 <|@
result Object <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:28) [bci: 78]
rawvalue: ex1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a154 
materializedValue: a189 
=== Succesors ===
=== Usages ===
?252 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a154 materializedValue: a189  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a154 a62 
virtualObjectMappings: ?157 
=== Succesors ===
=== Usages ===
a144 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a154 a62 virtualObjectMappings: ?157  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a144 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?252 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
a189 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?252 #next: v133  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v195 
=== Usages ===
=== Predecessor ===
a144 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v195  <|@  <|@
f <@~|@floating>@ <|@
tid v638 <|@
result [v24|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a189 
index: - 
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a189 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a219 <|@
result v45|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
rawvalue: ex1
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v195 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: Throwable.detailMessage
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v638 
lastLocationAccess: - 
value: a219 
stateAfter: - 
=== Succesors ===
next: a425 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v638 lastLocationAccess: - value: a219 stateAfter: - #next: a425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a425 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a189 
=== Succesors ===
next: j443 
=== Usages ===
v662 j436 
=== Predecessor ===
v195 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a189 #next: j443  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a425 
index: - 
=== Succesors ===
=== Usages ===
j443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a425 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j443 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v662 
lastLocationAccess: - 
=== Succesors ===
next: v427 
=== Usages ===
v428 v432 
=== Predecessor ===
a425 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v662 lastLocationAccess: - #next: v427  <|@  <|@
f <@~|@floating>@ <|@
tid v428 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
x: j443 
y: j335 
=== Succesors ===
=== Usages ===
v427 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v428 
=== Succesors ===
trueSuccessor: v429 
falseSuccessor: v430 
=== Usages ===
=== Predecessor ===
j443 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v428 #trueSuccessor: v429 #falseSuccessor: v430  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v429 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v64  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v429 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v430 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
=== Predecessor ===
v427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64
trackedPointer: false
=== Inputs ===
input: a425 
=== Succesors ===
next: v431 
=== Usages ===
v663 j437 j439 
=== Predecessor ===
v430 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a425 #next: v431  <|@  <|@
f <@~|@floating>@ <|@
tid v432 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
x: j443 
y: j340 
=== Succesors ===
=== Usages ===
v431 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j443 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v431 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v432 
=== Succesors ===
trueSuccessor: v433 
falseSuccessor: v434 
=== Usages ===
=== Predecessor ===
j436 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v432 #trueSuccessor: v433 #falseSuccessor: v434  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v444 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v444  <|@  <|@
f <@~|@floating>@ <|@
tid j437 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j436 
y: j347 
=== Succesors ===
=== Usages ===
j438 v664 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j436 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j438 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j437 
y: j349 
=== Succesors ===
=== Usages ===
j439 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j437 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64
=== Inputs ===
x: j436 
y: j438 
=== Succesors ===
=== Usages ===
j440 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j436 y: j438  <|@  <|@
f <@~|@floating>@ <|@
tid j440 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j439 
y: i352 
=== Succesors ===
=== Usages ===
v664 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j439 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
result [v48|QWORD + v51|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j437 
index: j440 
=== Succesors ===
=== Usages ===
v444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j437 index: j440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v444 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v664 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v664 lastLocationAccess: - value: i323 stateAfter: - #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v444 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v445 
=== Usages ===
=== Predecessor ===
v431 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v445  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result [v47|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v445 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v663 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v631 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v663 lastLocationAccess: - value: i323 stateAfter: - #next: v631  <|@  <|@
f <@*|@fixed>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v445 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 84]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v141 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v141  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 87]
rawvalue: 4
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@4ad94fdc
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a42 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a42  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 89
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 30
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v141 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
bci: 89
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v196 
stateDuring: ?253 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v31 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v196 stateDuring: ?253 #next: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 89]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j462 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: j462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j462 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a266 
=== Succesors ===
next: j463 
=== Usages ===
j477 
=== Predecessor ===
v49 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a266 #next: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j463 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j464 
=== Usages ===
j477 
=== Predecessor ===
j462 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j464  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j464 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j465 
=== Usages ===
v673 v674 
=== Predecessor ===
j463 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j465  <|@  <|@
f <@~|@floating>@ <|@
tid v673 <|@
result [v55|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
j465 v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j465 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
=== Succesors ===
next: j466 
=== Usages ===
j468 v665 a483 v666 v667 v668 v669 v670 v671 v672 
=== Predecessor ===
j464 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v674 <|@
result [v55|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j464 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j464 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v674 
lastLocationAccess: - 
=== Succesors ===
next: v467 
=== Usages ===
v469 
=== Predecessor ===
j465 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v674 lastLocationAccess: - #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j468 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j465 
y: j281 
=== Succesors ===
=== Usages ===
v469 v472 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j465 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4153af24
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j466 
y: j468 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j466 y: j468  <|@  <|@
f <@~|@floating>@ <|@
tid j477 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j462 
y: j463 
=== Succesors ===
=== Usages ===
a478 v497 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j462 y: j463  <|@  <|@
f <@*|@fixed>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v469 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v471 
=== Usages ===
=== Predecessor ===
j466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v469 #trueSuccessor: v470 #falseSuccessor: v471  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a478 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a478  <|@  <|@
tid ?48 <|@
d <@d|@=== Debug Properties ===
bci: 92
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:30) [bci: 89]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a478 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a478 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?48 
arguments: j477 
=== Succesors ===
next: v479 
=== Usages ===
a485 
=== Predecessor ===
v470 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?48 arguments: j477 #next: v479  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
a478 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v467 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v472  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v673 
lastLocationAccess: - 
value: j468 
stateAfter: - 
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v673 lastLocationAccess: - value: j468 stateAfter: - #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid v666 <|@
result [v56|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v488 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v666 
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v666 #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result [v56|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v665 
lastLocationAccess: - 
value: j477 
stateAfter: - 
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v488 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v665 lastLocationAccess: - value: j477 stateAfter: - #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid v667 <|@
result [v56|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v498 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v667 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v499 
=== Usages ===
=== Predecessor ===
v497 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v667 lastLocationAccess: - value: j290 stateAfter: - #next: v499  <|@  <|@
f <@~|@floating>@ <|@
tid v668 <|@
result [v56|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v668 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v498 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v668 lastLocationAccess: - value: j290 stateAfter: - #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid v669 <|@
result [v56|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v500 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v669 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v669 lastLocationAccess: - value: j290 stateAfter: - #next: v501  <|@  <|@
f <@~|@floating>@ <|@
tid v670 <|@
result [v56|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v670 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v500 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v670 lastLocationAccess: - value: j290 stateAfter: - #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid v671 <|@
result [v56|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v671 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v501 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v671 lastLocationAccess: - value: j290 stateAfter: - #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v672 <|@
result [v56|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j465 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j465 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v672 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v672 lastLocationAccess: - value: j290 stateAfter: - #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j465 
=== Succesors ===
next: v484 
=== Usages ===
a485 
=== Predecessor ===
v503 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j465 #next: v484  <|@  <|@
f <@*|@fixed>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v480 
=== Predecessor ===
a483 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a485 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v480 
values: a478 a483 
=== Succesors ===
=== Usages ===
a570 a205 v639 a199 v640 v641 a512 a541 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v480 values: a478 a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v479 v484 
=== Succesors ===
next: v204 
=== Usages ===
a485 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v479 v484 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v641 <|@
result [v62|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v641 
lastLocationAccess: - 
value: a218 
stateAfter: - 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v480 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v641 lastLocationAccess: - value: a218 stateAfter: - #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j530 
=== Usages ===
v675 j523 
=== Predecessor ===
v204 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v675 <|@
result [v62|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v675 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v515 v519 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v675 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j335 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
j530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v516 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a512 
=== Succesors ===
next: v518 
=== Usages ===
v676 j524 j526 
=== Predecessor ===
v517 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a512 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j340 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j523 
y: j347 
=== Succesors ===
=== Usages ===
j525 v677 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j523 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j524 
y: j349 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j524 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j523 
y: j525 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j523 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j526 
y: i352 
=== Succesors ===
=== Usages ===
v677 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j526 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v677 <|@
result [v65|QWORD + v68|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j524 
index: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v677 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v677 lastLocationAccess: - value: i323 stateAfter: - #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v676 <|@
result [v64|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v676 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v676 lastLocationAccess: - value: i323 stateAfter: - #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v535 v536 v537 
=== Succesors ===
next: v202 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v536 v537 #next: v202  <|@  <|@
f <@~|@floating>@ <|@
tid v640 <|@
result [v62|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v202 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v202 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v640 
lastLocationAccess: - 
value: a217 
stateAfter: - 
=== Succesors ===
next: a541 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v640 lastLocationAccess: - value: a217 stateAfter: - #next: a541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a541 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j559 
=== Usages ===
v678 j552 
=== Predecessor ===
v202 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
result [v62|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a541 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a541 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v678 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v544 v548 
=== Predecessor ===
a541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v678 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j335 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a541 
=== Succesors ===
next: v547 
=== Usages ===
v679 j553 j555 
=== Predecessor ===
v546 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a541 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j340 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j552 
y: j347 
=== Succesors ===
=== Usages ===
j554 v680 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j552 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j553 
y: j349 
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j553 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j552 
y: j554 
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j552 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j555 
y: i352 
=== Succesors ===
=== Usages ===
v680 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j555 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v680 <|@
result [v71|QWORD + v74|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j553 
index: j556 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v680 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v680 lastLocationAccess: - value: i323 stateAfter: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
result [v70|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v679 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v679 lastLocationAccess: - value: i323 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v564 v565 v566 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v565 v566 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v639 <|@
result [v62|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a485 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a485 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a485 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a485  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v639 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a570 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v639 lastLocationAccess: - value: a199 stateAfter: - #next: a570  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a570 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: j588 
=== Usages ===
v681 j581 
=== Predecessor ===
v200 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: j588  <|@  <|@
f <@~|@floating>@ <|@
tid v681 <|@
result [v62|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a570 
index: - 
=== Succesors ===
=== Usages ===
j588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a570 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j588 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v681 
lastLocationAccess: - 
=== Succesors ===
next: v572 
=== Usages ===
v573 v577 
=== Predecessor ===
a570 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v681 lastLocationAccess: - #next: v572  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j588 
y: j335 
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j588 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v573 
=== Succesors ===
trueSuccessor: v574 
falseSuccessor: v575 
=== Usages ===
=== Predecessor ===
j588 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v573 #trueSuccessor: v574 #falseSuccessor: v575  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v593 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v593  <|@  <|@
f <@*|@fixed>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v574 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j581 
=== Usages ===
=== Predecessor ===
v572 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j581  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j581 <|@
result v77|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a570 
=== Succesors ===
next: v576 
=== Usages ===
v682 j582 j584 
=== Predecessor ===
v575 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a570 #next: v576  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j588 
y: j340 
=== Succesors ===
=== Usages ===
v576 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j588 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v577 
=== Succesors ===
trueSuccessor: v578 
falseSuccessor: v579 
=== Usages ===
=== Predecessor ===
j581 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v577 #trueSuccessor: v578 #falseSuccessor: v579  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v589 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v589  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j581 
y: j347 
=== Succesors ===
=== Usages ===
j583 v683 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j581 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j583 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j582 
y: j349 
=== Succesors ===
=== Usages ===
j584 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j582 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j584 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j581 
y: j583 
=== Succesors ===
=== Usages ===
j585 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j581 y: j583  <|@  <|@
f <@~|@floating>@ <|@
tid j585 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j584 
y: i352 
=== Succesors ===
=== Usages ===
v683 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j584 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v683 <|@
result [v78|QWORD + v81|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j582 
index: j585 
=== Succesors ===
=== Usages ===
v589 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j582 index: j585  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v683 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v595 
=== Usages ===
=== Predecessor ===
v578 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v683 lastLocationAccess: - value: i323 stateAfter: - #next: v595  <|@  <|@
f <@*|@fixed>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v589 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v576 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid v682 <|@
result [v77|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j581 
index: - 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j581 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v682 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v579 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v682 lastLocationAccess: - value: i323 stateAfter: - #next: v594  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v592 
=== Predecessor ===
v590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v593 v594 v595 
=== Succesors ===
next: v206 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v593 v594 v595 #next: v206  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a205 
=== Usages ===
=== Predecessor ===
v592 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a205 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a485 
=== Succesors ===
next: a142 
=== Usages ===
v207 ?153 v642 a17 a599 a17 a17 
=== Predecessor ===
v206 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a485 #next: a142  <|@  <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@5a31f23a
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a205 
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a205  <|@  <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@266bd178
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?254 ?153 ?103 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 31
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a150 
=== Succesors ===
=== Usages ===
?121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a150  <|@  <|@
tid ?121 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Exception.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 66
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: - - 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: - -  <|@  <|@
f <@~|@floating>@ <|@
tid a51 <|@
result Object <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:31) [bci: 96]
rawvalue: ex2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?153 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a150 
materializedValue: a205 
=== Succesors ===
=== Usages ===
?254 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a150 materializedValue: a205  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 270
stackSize: 0
=== Inputs ===
outerFrameState: ?121 
values: a150 a51 
virtualObjectMappings: ?153 
=== Succesors ===
=== Usages ===
a142 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?121 values: a150 a51 virtualObjectMappings: ?153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a142 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v207 
stateDuring: ?254 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
a205 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v207 stateDuring: ?254 #next: v118  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
a142 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v210  <|@  <|@
f <@~|@floating>@ <|@
tid v642 <|@
result [v62|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a205 
index: - 
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a205 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a220 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
rawvalue: ex2
stableDimension: 0
stamp: n!# Ljava/lang/String;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v210 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: Throwable.detailMessage
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v642 
lastLocationAccess: - 
value: a220 
stateAfter: - 
=== Succesors ===
next: a599 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v642 lastLocationAccess: - value: a220 stateAfter: - #next: a599  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a599 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a205 
=== Succesors ===
next: j617 
=== Usages ===
v684 j610 
=== Predecessor ===
v210 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a205 #next: j617  <|@  <|@
f <@~|@floating>@ <|@
tid v684 <|@
result [v62|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a599 
index: - 
=== Succesors ===
=== Usages ===
j617 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a599 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j617 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v684 
lastLocationAccess: - 
=== Succesors ===
next: v601 
=== Usages ===
v602 v606 
=== Predecessor ===
a599 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v684 lastLocationAccess: - #next: v601  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
x: j617 
y: j335 
=== Succesors ===
=== Usages ===
v601 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j617 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v602 
=== Succesors ===
trueSuccessor: v603 
falseSuccessor: v604 
=== Usages ===
=== Predecessor ===
j617 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v602 #trueSuccessor: v603 #falseSuccessor: v604  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j610 
=== Usages ===
=== Predecessor ===
v601 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j610  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j610 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64
trackedPointer: false
=== Inputs ===
input: a599 
=== Succesors ===
next: v605 
=== Usages ===
v685 j611 j613 
=== Predecessor ===
v604 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a599 #next: v605  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
x: j617 
y: j340 
=== Succesors ===
=== Usages ===
v605 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j617 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v606 
=== Succesors ===
trueSuccessor: v607 
falseSuccessor: v608 
=== Usages ===
=== Predecessor ===
j610 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v606 #trueSuccessor: v607 #falseSuccessor: v608  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v618 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v618  <|@  <|@
f <@~|@floating>@ <|@
tid j611 <|@
result v86|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j610 
y: j347 
=== Succesors ===
=== Usages ===
j612 v686 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j610 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j612 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j611 
y: j349 
=== Succesors ===
=== Usages ===
j613 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j611 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j613 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64
=== Inputs ===
x: j610 
y: j612 
=== Succesors ===
=== Usages ===
j614 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j610 y: j612  <|@  <|@
f <@~|@floating>@ <|@
tid j614 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j613 
y: i352 
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j613 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v686 <|@
result [v86|QWORD + v89|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j611 
index: j614 
=== Succesors ===
=== Usages ===
v618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j611 index: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v686 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v607 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v686 lastLocationAccess: - value: i323 stateAfter: - #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v619 
=== Usages ===
=== Predecessor ===
v605 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v619  <|@  <|@
f <@~|@floating>@ <|@
tid v685 <|@
result [v85|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j610 
index: - 
=== Succesors ===
=== Usages ===
v619 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j610 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v619 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v685 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v633 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v685 lastLocationAccess: - value: i323 stateAfter: - #next: v633  <|@  <|@
f <@*|@fixed>@ <|@
tid v633 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:271) [bci: 30]
at java.lang.Exception.<init>(Exception.java:66) [bci: 2]
at ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v619 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a17 <|@
result v90|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v15 
values: a205 a189 a189 a189 a205 a205 
=== Succesors ===
=== Usages ===
?101 v212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: a205 a189 a189 a189 a205 a205  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(int, int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v53 v64 v630 v631 v632 v633 
=== Succesors ===
next: j211 
=== Usages ===
a17 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v64 v630 v631 v632 v633 #next: j211  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j211 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
v212 
=== Predecessor ===
v15 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v212  <|@  <|@
tid ?101 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a17 
=== Succesors ===
=== Usages ===
v212 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a17  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?101 
arguments: a17 j211 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
j211 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?101 arguments: a17 j211 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest42.example_ftest42(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v212 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 102]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v140 
=== Usages ===
=== Predecessor ===
v27 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v140  <|@  <|@
f <@~|@floating>@ <|@
tid a34 <|@
result v92|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 105]
rawvalue: default
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v214 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5e0153c8
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a33 a34 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a33 a34  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 33
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v140 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v214 
stateDuring: ?255 
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v32 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v214 stateDuring: ?255 #next: v41  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:33) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v73 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v73  <|@  <|@
f <@*|@fixed>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
v41 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v73 v75 v84 
=== Succesors ===
next: a147 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v73 v75 v84 #next: a147  <|@  <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@5ea6407b
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 110
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 36
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a147 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a147 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 110
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v215 
stateDuring: ?256 
=== Succesors ===
next: v92 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v215 stateDuring: ?256 #next: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:36) [bci: 110]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a148 
=== Usages ===
=== Predecessor ===
a147 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a148  <|@  <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@b53d9b7
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 37
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
a148 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a148 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 114
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v216 
stateDuring: ?257 
=== Succesors ===
next: v99 
=== Usages ===
?98 
=== Predecessor ===
v92 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v216 stateDuring: ?257 #next: v99  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:37) [bci: 114]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
=== Predecessor ===
a148 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v235  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v227 
=== Succesors ===
trueSuccessor: v236 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v227 #trueSuccessor: v236 #falseSuccessor: v237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v236 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v238  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 117
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:37) [bci: 114]
rethrowException: false
sourceFile: ftest42.java
sourceLine: 37
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - a148 
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - a148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?98 
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v236 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?98 #next: v246  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:38) [bci: 118]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v245 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v245  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest42.example_ftest42(ftest42.java:38) [bci: 118]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v165  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest42.example_ftest42(int, int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest42.java
sourceLine: 13
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7037e683
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v167 
=== Usages ===
=== Predecessor ===
v164 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v167  <|@  <|@
f <@*|@fixed>@ <|@
tid v167 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v165 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v97|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v97|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v97|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = ADD (x: v1|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v7|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v1|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v92|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr   -1  <|@ instruction v94|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v52|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v99|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOVE v99|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v55|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOV [v55|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v56|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v53|QWORD, ~y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v58|QWORD, y: v57|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v55|QWORD + 24], y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v56|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v56|QWORD], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v56|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE v56|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v61|QWORD[.]] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v62|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 32], y: v97|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 24], y: v95|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = COMPRESSPOINTER (input: v62|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v75|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v62|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: v62|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 8], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = MOV [v62|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr   -1  <|@ instruction [v90|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v90|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v91|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: v90|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v100|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v98|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v96|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: v24|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: v24|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 8], y: v45|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v76|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = AND v77|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD = LEA [v78|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = SUB (x: v77|QWORD, ~y: v79|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = SHR v80|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v78|QWORD + v81|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v46|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = AND v47|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = SUB (x: v47|QWORD, ~y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SHR v50|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v48|QWORD + v51|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v84|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|QWORD = AND v85|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v86|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD = SUB (x: v85|QWORD, ~y: v87|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = SHR v88|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v86|QWORD + v89|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v69|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = AND v70|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v71|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SUB (x: v70|QWORD, ~y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = SHR v73|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v71|QWORD + v74|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v77|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v47|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v85|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v62|QWORD[.]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: v14|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: v6|QWORD[.] 
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: v94|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[16, 18[[24, 26[[50, 51[[76, 77[[92, 93[[162, 163[[172, 174[[180, 182[[198, 200[[472, 474[[522, 524[[590, 592[[600, 602[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v92|q [0, 4[[16, 17[[24, 25[[48, 51[[74, 77[[90, 93[[160, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[580, 582[[590, 591[[600, 601[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|q [0, 2[[16, 17[[24, 25[[46, 51[[72, 77[[88, 93[[158, 163[[172, 173[[180, 181[[198, 199[[470, 473[[520, 523[[578, 582[[588, 591[[598, 601[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 36[[58, 64[[606, 609[[618, 621[2 MustHaveRegister 34 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rsi|- [4, 41[[58, 64[[606, 609[[618, 621[4 MustHaveRegister 32 ShouldHaveRegister 40 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rdx|- [6, 36[[58, 64[[606, 609[[618, 621[6 MustHaveRegister 32 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [18, 19[18 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q rax|q [26, 36[[58, 64[[606, 609[26 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d v1|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [38, 46[[68, 72[[84, 88[[154, 158[38 MustHaveRegister 46 ShouldHaveRegister 72 ShouldHaveRegister 88 ShouldHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [70, 74[70 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [156, 160[156 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q rax|q [200, 224[[586, 591[200 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v100|q [208, 220[208 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q r14|q [210, 221[210 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q r15|q [212, 226[212 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [214, 244[214 MustHaveRegister 218 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [216, 222[216 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [218, 226[218 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v15|q [220, 230[[586, 588[220 MustHaveRegister 230 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q rax|q [592, 595[592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v18|q [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [248, 262[[282, 302[[342, 382[[422, 462[[512, 541[[542, 561[[568, 573[252 MustHaveRegister 254 MustHaveRegister 284 ShouldHaveRegister 352 MustHaveRegister 354 MustHaveRegister 364 ShouldHaveRegister 430 MustHaveRegister 432 MustHaveRegister 434 MustHaveRegister 444 ShouldHaveRegister 520 ShouldHaveRegister 532 MustHaveRegister 534 MustHaveRegister 540 ShouldHaveRegister 544 ShouldHaveRegister 560 ShouldHaveRegister 572 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [254, 258[[282, 286[254 MustHaveRegister 256 ShouldHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v24|q [284, 294[[342, 344[284 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [290, 298[290 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v26|q [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [354, 358[[362, 366[354 MustHaveRegister 356 ShouldHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v24|q [364, 374[[422, 424[364 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [370, 378[370 MustHaveRegister 372 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v32|q [374, 376[374 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v24|q [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [434, 438[[442, 446[434 MustHaveRegister 436 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v24|q [444, 454[[512, 514[444 MustHaveRegister 450 MustHaveRegister 454 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|q [450, 458[450 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v39|q [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [524, 525[524 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [534, 538[[542, 546[534 MustHaveRegister 536 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v24|q [544, 554[[568, 570[544 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v47|q [550, 558[550 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [552, 555[552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v47|q [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v50|q [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [86, 90[86 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v99|q [100, 112[100 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q r14|q [102, 113[102 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q r15|q [104, 118[104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [106, 136[106 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q -1 [108, 114[108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [110, 118[110 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v53|q [112, 122[[596, 598[112 MustHaveRegister 122 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q rax|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v56|q [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v61|q [140, 154[[262, 282[[302, 342[[382, 422[[462, 491[[492, 511[[562, 567[144 MustHaveRegister 146 MustHaveRegister 264 ShouldHaveRegister 312 MustHaveRegister 314 MustHaveRegister 324 ShouldHaveRegister 390 MustHaveRegister 392 MustHaveRegister 394 MustHaveRegister 404 ShouldHaveRegister 470 ShouldHaveRegister 482 MustHaveRegister 484 MustHaveRegister 490 ShouldHaveRegister 494 ShouldHaveRegister 510 ShouldHaveRegister 566 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [146, 150[[262, 266[146 MustHaveRegister 148 ShouldHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v62|q [264, 274[[302, 304[264 MustHaveRegister 270 MustHaveRegister 274 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|q [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v64|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v67|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q -1 [314, 318[[322, 326[314 MustHaveRegister 316 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v62|q [324, 334[[382, 384[324 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q v70|q [330, 338[330 MustHaveRegister 332 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [332, 335[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v70|q [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q v73|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v62|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [394, 398[[402, 406[394 MustHaveRegister 396 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q v62|q [404, 414[[462, 464[404 MustHaveRegister 410 MustHaveRegister 414 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q v77|q [410, 418[410 MustHaveRegister 412 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [412, 415[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q v77|q [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q v80|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q rax|q [474, 475[474 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [484, 488[[492, 496[484 MustHaveRegister 486 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q v62|q [494, 504[[562, 564[494 MustHaveRegister 500 MustHaveRegister 504 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[v86|q]" v86|q v85|q [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[v87|q]" v87|q -1 [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[v88|q]" v88|q v85|q [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[v89|q]" v89|q v88|q [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[v90|q]" v90|q v62|q [574, 583[578 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[v91|q]" v91|q -1 [576, 580[576 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[v92|q]" v92|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[v93|q]" v93|q rax|q [174, 175[174 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[v94|q]" v94|q rax|q [182, 192[[612, 615[182 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[v95|q]" v95|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[v96|q]" v96|q -1 [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[v97|q]" v97|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[v98|q]" v98|q -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[v99|q]" v99|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[v100|q]" v100|q -1 [206, 208[206 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[16, 18[[24, 26[[50, 51[[76, 77[[92, 93[[162, 163[[172, 174[[180, 182[[198, 200[[472, 474[[522, 524[[590, 592[[600, 602[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v92|q [0, 4[[16, 17[[24, 25[[48, 51[[74, 77[[90, 93[[160, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[580, 582[[590, 591[[600, 601[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|q [0, 2[[16, 17[[24, 25[[46, 51[[72, 77[[88, 93[[158, 163[[172, 173[[180, 181[[198, 199[[470, 473[[520, 523[[578, 582[[588, 591[[598, 601[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [18, 19[18 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [26, 36[[58, 64[[606, 609[26 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d v1|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [38, 46[[68, 72[[84, 88[[154, 158[38 MustHaveRegister 46 ShouldHaveRegister 72 ShouldHaveRegister 88 ShouldHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [70, 74[70 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [156, 160[156 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [200, 224[200 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v100|q [208, 220[208 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r14|q [210, 221[210 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q r15|q [212, 226[212 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [214, 244[214 MustHaveRegister 218 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [216, 222[216 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [218, 226[218 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [220, 230[[586, 588[220 MustHaveRegister 230 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [592, 595[592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v18|q [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [248, 262[[282, 302[[342, 382[[422, 462[[512, 521[252 MustHaveRegister 254 MustHaveRegister 284 ShouldHaveRegister 352 MustHaveRegister 354 MustHaveRegister 364 ShouldHaveRegister 430 MustHaveRegister 432 MustHaveRegister 434 MustHaveRegister 444 ShouldHaveRegister 520 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [254, 258[[282, 286[254 MustHaveRegister 256 ShouldHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [284, 294[[342, 344[284 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [290, 298[290 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [354, 358[[362, 366[354 MustHaveRegister 356 ShouldHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [364, 374[[422, 424[364 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [370, 378[370 MustHaveRegister 372 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [374, 376[374 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [434, 438[[442, 446[434 MustHaveRegister 436 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [444, 454[[512, 514[444 MustHaveRegister 450 MustHaveRegister 454 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [450, 458[450 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [524, 525[524 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdi|q]" v46|q -1 [534, 538[[542, 546[534 MustHaveRegister 536 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v24|q [544, 554[[568, 570[544 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdi|q]" v48|q v47|q [550, 558[550 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rax|q]" v49|q -1 [552, 555[552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v47|q [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|q [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [86, 90[86 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q v99|q [100, 112[100 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q r14|q [102, 113[102 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q r15|q [104, 118[104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q -1 [106, 136[106 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [108, 114[108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rbx|q]" v58|q -1 [110, 118[110 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v53|q [112, 122[[596, 598[112 MustHaveRegister 122 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q rax|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rcx|q]" v61|q v56|q [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rcx|q]" v62|q v61|q [140, 154[[262, 282[[302, 342[[382, 422[[462, 471[144 MustHaveRegister 146 MustHaveRegister 264 ShouldHaveRegister 312 MustHaveRegister 314 MustHaveRegister 324 ShouldHaveRegister 390 MustHaveRegister 392 MustHaveRegister 394 MustHaveRegister 404 ShouldHaveRegister 470 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[rax|q]" v63|q -1 [146, 150[[262, 266[146 MustHaveRegister 148 ShouldHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdi|q]" v64|q v62|q [264, 274[[302, 304[264 MustHaveRegister 270 MustHaveRegister 274 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v64|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q v67|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [314, 318[[322, 326[314 MustHaveRegister 316 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q v62|q [324, 334[[382, 384[324 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q v70|q [330, 338[330 MustHaveRegister 332 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q -1 [332, 335[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v70|q [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q v73|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdi|q]" v75|q v62|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rdi|q]" v76|q -1 [394, 398[[402, 406[394 MustHaveRegister 396 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v62|q [404, 414[[462, 464[404 MustHaveRegister 410 MustHaveRegister 414 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v77|q [410, 418[410 MustHaveRegister 412 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q -1 [412, 415[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v77|q [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [474, 475[474 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [484, 488[[492, 496[484 MustHaveRegister 486 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q v62|q [494, 504[[562, 564[494 MustHaveRegister 500 MustHaveRegister 504 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rdi|q]" v86|q v85|q [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q -1 [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v85|q [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q v88|q [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v62|q [574, 583[578 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [576, 580[576 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [174, 175[174 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q rax|q [182, 192[[612, 615[182 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rdi|q]" v96|q -1 [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rdi|q]" v97|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rdi|q]" v98|q -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rdi|q]" v99|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rdi|q]" v100|q -1 [206, 208[206 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[vstack:2|d]" v0|d v0|d [14, 15[ "OneSpillStore"
  v102|d DWORD "[vstack:0|d]" v1|d v1|d [14, 15[ "OneSpillStore"
  v103|d DWORD "[vstack:1|d]" v2|d v2|d [14, 15[ "OneSpillStore"
  v104|d DWORD "[vstack:1|d]" v2|d v2|d [15, 36[[58, 64[[606, 609[32 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:0|d]" v1|d v1|d [15, 36[32 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:2|d]" v0|d v0|d [15, 30[ "OneSpillStore"
  v107|d DWORD "[rsi|d]" v1|d v1|d [36, 41[[58, 64[[606, 609[[618, 621[40 MustHaveRegister  "OneSpillStore"
  v108|d DWORD "[rdx|d]" v2|d v2|d [618, 621[ "OneSpillStore"
  v109|d DWORD "[rdi|d]" v0|d v0|d [30, 36[[58, 64[[606, 609[[618, 621[34 MustHaveRegister  "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v62|q v62|q [471, 478[ "OneSpillStore"
  v111|q QWORD "[vstack:6|q]" v14|q v14|q [586, 589[ "OneSpillStore"
  v112|q QWORD "[vstack:5|q]" v24|q v24|q [521, 528[ "OneSpillStore"
  v113|q QWORD "[rcx|q]" v62|q v62|q [478, 491[[492, 511[[562, 567[482 MustHaveRegister 484 MustHaveRegister 490 ShouldHaveRegister 494 ShouldHaveRegister 510 ShouldHaveRegister 566 ShouldHaveRegister  "OneSpillStore"
  v114|q QWORD "[rbx|q]" v24|q v24|q [528, 541[[542, 561[[568, 573[532 MustHaveRegister 534 MustHaveRegister 540 ShouldHaveRegister 544 ShouldHaveRegister 560 ShouldHaveRegister 572 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[vstack:6|q]" v14|q v14|q [589, 591[ "OneSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[16, 18[[24, 26[[50, 51[[76, 77[[92, 93[[162, 163[[172, 174[[180, 182[[198, 200[[472, 474[[522, 524[[590, 592[[600, 602[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v92|q [0, 4[[16, 17[[24, 25[[48, 51[[74, 77[[90, 93[[160, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[580, 582[[590, 591[[600, 601[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|q [0, 2[[16, 17[[24, 25[[46, 51[[72, 77[[88, 93[[158, 163[[172, 173[[180, 181[[198, 199[[470, 473[[520, 523[[578, 582[[588, 591[[598, 601[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [18, 19[18 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [26, 36[[58, 64[[606, 609[26 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d v1|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [38, 46[[68, 72[[84, 88[[154, 158[38 MustHaveRegister 46 ShouldHaveRegister 72 ShouldHaveRegister 88 ShouldHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [70, 74[70 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [156, 160[156 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [200, 224[200 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v100|q [208, 220[208 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r14|q [210, 221[210 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q r15|q [212, 226[212 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [214, 244[214 MustHaveRegister 218 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [216, 222[216 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [218, 226[218 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [220, 230[[586, 588[220 MustHaveRegister 230 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [592, 595[592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v18|q [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [248, 262[[282, 302[[342, 382[[422, 462[[512, 521[252 MustHaveRegister 254 MustHaveRegister 284 ShouldHaveRegister 352 MustHaveRegister 354 MustHaveRegister 364 ShouldHaveRegister 430 MustHaveRegister 432 MustHaveRegister 434 MustHaveRegister 444 ShouldHaveRegister 520 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [254, 258[[282, 286[254 MustHaveRegister 256 ShouldHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [284, 294[[342, 344[284 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [290, 298[290 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [354, 358[[362, 366[354 MustHaveRegister 356 ShouldHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [364, 374[[422, 424[364 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [370, 378[370 MustHaveRegister 372 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [374, 376[374 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [434, 438[[442, 446[434 MustHaveRegister 436 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [444, 454[[512, 514[444 MustHaveRegister 450 MustHaveRegister 454 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [450, 458[450 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [524, 525[524 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdi|q]" v46|q -1 [534, 538[[542, 546[534 MustHaveRegister 536 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v24|q [544, 554[[568, 570[544 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdi|q]" v48|q v47|q [550, 558[550 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rax|q]" v49|q -1 [552, 555[552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v47|q [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|q [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [86, 90[86 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q v99|q [100, 112[100 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q r14|q [102, 113[102 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q r15|q [104, 118[104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q -1 [106, 136[106 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [108, 114[108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rbx|q]" v58|q -1 [110, 118[110 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v53|q [112, 122[[596, 598[112 MustHaveRegister 122 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q rax|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rcx|q]" v61|q v56|q [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rcx|q]" v62|q v61|q [140, 154[[262, 282[[302, 342[[382, 422[[462, 471[144 MustHaveRegister 146 MustHaveRegister 264 ShouldHaveRegister 312 MustHaveRegister 314 MustHaveRegister 324 ShouldHaveRegister 390 MustHaveRegister 392 MustHaveRegister 394 MustHaveRegister 404 ShouldHaveRegister 470 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[rax|q]" v63|q -1 [146, 150[[262, 266[146 MustHaveRegister 148 ShouldHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdi|q]" v64|q v62|q [264, 274[[302, 304[264 MustHaveRegister 270 MustHaveRegister 274 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v64|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q v67|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [314, 318[[322, 326[314 MustHaveRegister 316 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q v62|q [324, 334[[382, 384[324 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q v70|q [330, 338[330 MustHaveRegister 332 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q -1 [332, 335[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v70|q [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q v73|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdi|q]" v75|q v62|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rdi|q]" v76|q -1 [394, 398[[402, 406[394 MustHaveRegister 396 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v62|q [404, 414[[462, 464[404 MustHaveRegister 410 MustHaveRegister 414 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v77|q [410, 418[410 MustHaveRegister 412 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q -1 [412, 415[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v77|q [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [474, 475[474 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [484, 488[[492, 496[484 MustHaveRegister 486 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q v62|q [494, 504[[562, 564[494 MustHaveRegister 500 MustHaveRegister 504 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rdi|q]" v86|q v85|q [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q -1 [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v85|q [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q v88|q [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v62|q [574, 583[578 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [576, 580[576 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [174, 175[174 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q rax|q [182, 192[[612, 615[182 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rdi|q]" v96|q -1 [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rdi|q]" v97|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rdi|q]" v98|q -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rdi|q]" v99|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rdi|q]" v100|q -1 [206, 208[206 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[vstack:2|d]" v0|d v0|d [14, 15[ "OneSpillStore"
  v102|d DWORD "[vstack:0|d]" v1|d v1|d [14, 15[ "OneSpillStore"
  v103|d DWORD "[vstack:1|d]" v2|d v2|d [14, 15[ "OneSpillStore"
  v104|d DWORD "[vstack:1|d]" v2|d v2|d [15, 36[[58, 64[[606, 609[32 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:0|d]" v1|d v1|d [15, 36[32 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:2|d]" v0|d v0|d [15, 30[ "OneSpillStore"
  v107|d DWORD "[rsi|d]" v1|d v1|d [36, 41[[58, 64[[606, 609[[618, 621[40 MustHaveRegister  "OneSpillStore"
  v108|d DWORD "[rdx|d]" v2|d v2|d [618, 621[ "OneSpillStore"
  v109|d DWORD "[rdi|d]" v0|d v0|d [30, 36[[58, 64[[606, 609[[618, 621[34 MustHaveRegister  "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v62|q v62|q [471, 478[ "OneSpillStore"
  v111|q QWORD "[vstack:6|q]" v14|q v14|q [586, 589[ "OneSpillStore"
  v112|q QWORD "[vstack:5|q]" v24|q v24|q [521, 528[ "OneSpillStore"
  v113|q QWORD "[rcx|q]" v62|q v62|q [478, 491[[492, 511[[562, 567[482 MustHaveRegister 484 MustHaveRegister 490 ShouldHaveRegister 494 ShouldHaveRegister 510 ShouldHaveRegister 566 ShouldHaveRegister  "OneSpillStore"
  v114|q QWORD "[rbx|q]" v24|q v24|q [528, 541[[542, 561[[568, 573[532 MustHaveRegister 534 MustHaveRegister 540 ShouldHaveRegister 544 ShouldHaveRegister 560 ShouldHaveRegister 572 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[vstack:6|q]" v14|q v14|q [589, 591[ "OneSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[16, 18[[24, 26[[50, 51[[76, 77[[92, 93[[162, 163[[172, 174[[180, 182[[198, 200[[472, 474[[522, 524[[590, 592[[600, 602[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v92|q [0, 4[[16, 17[[24, 25[[48, 51[[74, 77[[90, 93[[160, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[580, 582[[590, 591[[600, 601[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v11|q [0, 2[[16, 17[[24, 25[[46, 51[[72, 77[[88, 93[[158, 163[[172, 173[[180, 181[[198, 199[[470, 473[[520, 523[[578, 582[[588, 591[[598, 601[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[16, 17[[24, 25[[50, 51[[76, 77[[92, 93[[162, 163[[172, 173[[180, 181[[198, 199[[472, 473[[522, 523[[590, 591[[600, 601[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "OneSpillStore"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "OneSpillStore"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [18, 19[18 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|q [26, 36[[58, 64[[606, 609[26 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[rsi|d]" v7|d v1|d [32, 34[32 MustHaveRegister 34 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [38, 46[[68, 72[[84, 88[[154, 158[38 MustHaveRegister 46 ShouldHaveRegister 72 ShouldHaveRegister 88 ShouldHaveRegister 158 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [70, 74[70 MustHaveRegister 74 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rsi|q]" v13|q -1 [156, 160[156 MustHaveRegister 160 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q rax|q [200, 224[200 MustHaveRegister  "OneSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v100|q [208, 220[208 MustHaveRegister 220 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rcx|q]" v16|q r14|q [210, 221[210 MustHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rdx|q]" v17|q r15|q [212, 226[212 MustHaveRegister 214 MustHaveRegister 216 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q -1 [214, 244[214 MustHaveRegister 218 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 MustHaveRegister 236 MustHaveRegister 238 MustHaveRegister 240 MustHaveRegister 242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbp|q]" v19|q -1 [216, 222[216 MustHaveRegister 222 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rsi|q]" v20|q -1 [218, 226[218 MustHaveRegister 222 MustHaveRegister 226 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [220, 230[[586, 588[220 MustHaveRegister 230 MustHaveRegister 588 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [592, 595[592 MustHaveRegister 594 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rbx|q]" v23|q v18|q [244, 247[244 MustHaveRegister 246 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rbx|q]" v24|q v23|q [248, 262[[282, 302[[342, 382[[422, 462[[512, 521[252 MustHaveRegister 254 MustHaveRegister 284 ShouldHaveRegister 352 MustHaveRegister 354 MustHaveRegister 364 ShouldHaveRegister 430 MustHaveRegister 432 MustHaveRegister 434 MustHaveRegister 444 ShouldHaveRegister 520 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [254, 258[[282, 286[254 MustHaveRegister 256 ShouldHaveRegister 286 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [284, 294[[342, 344[284 MustHaveRegister 290 MustHaveRegister 294 MustHaveRegister 344 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [290, 298[290 MustHaveRegister 292 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [292, 295[292 MustHaveRegister 294 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [294, 296[294 MustHaveRegister 296 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [296, 298[296 MustHaveRegister 298 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [354, 358[[362, 366[354 MustHaveRegister 356 ShouldHaveRegister 366 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [364, 374[[422, 424[364 MustHaveRegister 370 MustHaveRegister 374 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [370, 378[370 MustHaveRegister 372 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [372, 375[372 MustHaveRegister 374 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [374, 376[374 MustHaveRegister 376 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [376, 378[376 MustHaveRegister 378 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [430, 432[430 MustHaveRegister 432 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [434, 438[[442, 446[434 MustHaveRegister 436 ShouldHaveRegister 446 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [444, 454[[512, 514[444 MustHaveRegister 450 MustHaveRegister 454 MustHaveRegister 514 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [450, 458[450 MustHaveRegister 452 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [452, 455[452 MustHaveRegister 454 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [454, 456[454 MustHaveRegister 456 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [456, 458[456 MustHaveRegister 458 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [524, 525[524 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q -1 [530, 532[530 MustHaveRegister 532 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rdi|q]" v46|q -1 [534, 538[[542, 546[534 MustHaveRegister 536 ShouldHaveRegister 546 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rsi|q]" v47|q v24|q [544, 554[[568, 570[544 MustHaveRegister 550 MustHaveRegister 554 MustHaveRegister 570 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdi|q]" v48|q v47|q [550, 558[550 MustHaveRegister 552 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v49|q QWORD "[rax|q]" v49|q -1 [552, 555[552 MustHaveRegister 554 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rsi|q]" v50|q v47|q [554, 556[554 MustHaveRegister 556 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q v50|q [556, 558[556 MustHaveRegister 558 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rsi|q]" v52|q -1 [86, 90[86 MustHaveRegister 90 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdi|q]" v53|q v99|q [100, 112[100 MustHaveRegister 112 MustHaveRegister  "NoSpillStore"
  v54|q QWORD "[rsi|q]" v54|q r14|q [102, 113[102 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q r15|q [104, 118[104 MustHaveRegister 106 MustHaveRegister 108 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rcx|q]" v56|q -1 [106, 136[106 MustHaveRegister 110 MustHaveRegister 120 MustHaveRegister 122 MustHaveRegister 124 MustHaveRegister 126 MustHaveRegister 128 MustHaveRegister 130 MustHaveRegister 132 MustHaveRegister 134 MustHaveRegister 136 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdx|q]" v57|q -1 [108, 114[108 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v58|q QWORD "[rbx|q]" v58|q -1 [110, 118[110 MustHaveRegister 114 MustHaveRegister 118 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdi|q]" v59|q v53|q [112, 122[[596, 598[112 MustHaveRegister 122 MustHaveRegister 598 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q rax|q [602, 605[602 MustHaveRegister 604 ShouldHaveRegister  "NoSpillStore"
  v61|q QWORD "[rcx|q]" v61|q v56|q [136, 139[136 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rcx|q]" v62|q v61|q [140, 154[[262, 282[[302, 342[[382, 422[[462, 471[144 MustHaveRegister 146 MustHaveRegister 264 ShouldHaveRegister 312 MustHaveRegister 314 MustHaveRegister 324 ShouldHaveRegister 390 MustHaveRegister 392 MustHaveRegister 394 MustHaveRegister 404 ShouldHaveRegister 470 ShouldHaveRegister  "OneSpillStore"
  v63|q QWORD "[rax|q]" v63|q -1 [146, 150[[262, 266[146 MustHaveRegister 148 ShouldHaveRegister 266 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdi|q]" v64|q v62|q [264, 274[[302, 304[264 MustHaveRegister 270 MustHaveRegister 274 MustHaveRegister 304 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v64|q [270, 278[270 MustHaveRegister 272 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rdx|q]" v66|q -1 [272, 275[272 MustHaveRegister 274 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v64|q [274, 276[274 MustHaveRegister 276 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q v67|q [276, 278[276 MustHaveRegister 278 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rdi|q]" v69|q -1 [314, 318[[322, 326[314 MustHaveRegister 316 ShouldHaveRegister 326 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[rax|q]" v70|q v62|q [324, 334[[382, 384[324 MustHaveRegister 330 MustHaveRegister 334 MustHaveRegister 384 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rdi|q]" v71|q v70|q [330, 338[330 MustHaveRegister 332 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v72|q QWORD "[rdx|q]" v72|q -1 [332, 335[332 MustHaveRegister 334 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v70|q [334, 336[334 MustHaveRegister 336 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q v73|q [336, 338[336 MustHaveRegister 338 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdi|q]" v75|q v62|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rdi|q]" v76|q -1 [394, 398[[402, 406[394 MustHaveRegister 396 ShouldHaveRegister 406 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q v62|q [404, 414[[462, 464[404 MustHaveRegister 410 MustHaveRegister 414 MustHaveRegister 464 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q v77|q [410, 418[410 MustHaveRegister 412 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdx|q]" v79|q -1 [412, 415[412 MustHaveRegister 414 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rax|q]" v80|q v77|q [414, 416[414 MustHaveRegister 416 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q v80|q [416, 418[416 MustHaveRegister 418 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q rax|q [474, 475[474 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [480, 482[480 MustHaveRegister 482 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [484, 488[[492, 496[484 MustHaveRegister 486 ShouldHaveRegister 496 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rax|q]" v85|q v62|q [494, 504[[562, 564[494 MustHaveRegister 500 MustHaveRegister 504 MustHaveRegister 564 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[rdi|q]" v86|q v85|q [500, 508[500 MustHaveRegister 502 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v87|q QWORD "[rdx|q]" v87|q -1 [502, 505[502 MustHaveRegister 504 ShouldHaveRegister  "NoSpillStore"
  v88|q QWORD "[rax|q]" v88|q v85|q [504, 506[504 MustHaveRegister 506 MustHaveRegister  "NoSpillStore"
  v89|q QWORD "[rax|q]" v89|q v88|q [506, 508[506 MustHaveRegister 508 MustHaveRegister  "NoSpillStore"
  v90|q QWORD "[rcx|q]" v90|q v62|q [574, 583[578 ShouldHaveRegister  "NoSpillStore"
  v91|q QWORD "[rsi|q]" v91|q -1 [576, 580[576 MustHaveRegister 580 ShouldHaveRegister  "NoSpillStore"
  v92|q QWORD "[rsi|q]" v92|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
  v93|q QWORD "[rax|q]" v93|q rax|q [174, 175[174 MustHaveRegister  "NoSpillStore"
  v94|q QWORD "[rax|q]" v94|q rax|q [182, 192[[612, 615[182 MustHaveRegister  "NoSpillStore"
  v95|q QWORD "[rdi|q]" v95|q -1 [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v96|q QWORD "[rdi|q]" v96|q -1 [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v97|q QWORD "[rdi|q]" v97|q -1 [142, 144[142 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v98|q QWORD "[rdi|q]" v98|q -1 [250, 252[250 MustHaveRegister 252 MustHaveRegister  "NoSpillStore"
  v99|q QWORD "[rdi|q]" v99|q -1 [98, 100[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v100|q QWORD "[rdi|q]" v100|q -1 [206, 208[206 MustHaveRegister 208 ShouldHaveRegister  "NoSpillStore"
  v101|d DWORD "[vstack:2|d]" v0|d v0|d [14, 15[ "OneSpillStore"
  v102|d DWORD "[vstack:0|d]" v1|d v1|d [14, 15[ "OneSpillStore"
  v103|d DWORD "[vstack:1|d]" v2|d v2|d [14, 15[ "OneSpillStore"
  v104|d DWORD "[vstack:1|d]" v2|d v2|d [15, 36[[58, 64[[606, 609[32 ShouldHaveRegister  "OneSpillStore"
  v105|d DWORD "[vstack:0|d]" v1|d v1|d [15, 36[32 ShouldHaveRegister  "OneSpillStore"
  v106|d DWORD "[vstack:2|d]" v0|d v0|d [15, 30[ "OneSpillStore"
  v107|d DWORD "[rsi|d]" v1|d v1|d [36, 41[[58, 64[[606, 609[[618, 621[40 MustHaveRegister  "OneSpillStore"
  v108|d DWORD "[rdx|d]" v2|d v2|d [618, 621[ "OneSpillStore"
  v109|d DWORD "[rdi|d]" v0|d v0|d [30, 36[[58, 64[[606, 609[[618, 621[34 MustHaveRegister  "OneSpillStore"
  v110|q QWORD "[vstack:3|q]" v62|q v62|q [471, 478[ "OneSpillStore"
  v111|q QWORD "[vstack:6|q]" v14|q v14|q [586, 589[ "OneSpillStore"
  v112|q QWORD "[vstack:5|q]" v24|q v24|q [521, 528[ "OneSpillStore"
  v113|q QWORD "[rcx|q]" v62|q v62|q [478, 491[[492, 511[[562, 567[482 MustHaveRegister 484 MustHaveRegister 490 ShouldHaveRegister 494 ShouldHaveRegister 510 ShouldHaveRegister 566 ShouldHaveRegister  "OneSpillStore"
  v114|q QWORD "[rbx|q]" v24|q v24|q [528, 541[[542, 561[[568, 573[532 MustHaveRegister 534 MustHaveRegister 540 ShouldHaveRegister 544 ShouldHaveRegister 560 ShouldHaveRegister 572 ShouldHaveRegister  "OneSpillStore"
  v115|q QWORD "[vstack:6|q]" v14|q v14|q [589, 591[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rdx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: vstack:2|DWORD vstack:0|DWORD vstack:1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   20  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   22  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: vstack:2|DWORD vstack:0|DWORD vstack:1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|DWORD = ADD (x: vstack:0|DWORD, y: vstack:1|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  184  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction  <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction  <|@ <|@
      nr   62  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   64  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   66  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   72  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   76  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   88  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   98  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  100  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  106  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  108  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  110  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  112  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  120  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  122  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  124  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  128  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  140  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  142  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  144  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  146  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  148  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  312  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  314  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: vstack:3|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: vstack:3|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE vstack:3|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  482  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  484  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  576  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  578  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  582  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  584  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  158  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  162  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr  164  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  198  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  208  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  214  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  216  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  218  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  220  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  228  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  230  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  234  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  236  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  240  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  242  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  244  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  252  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  352  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  354  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  356  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  432  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: vstack:5|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: vstack:5|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  526  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  532  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  534  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  536  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  540  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  552  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  554  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  556  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  558  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  560  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  502  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  504  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  506  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  508  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  292  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  294  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  296  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  366  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  368  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  370  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  372  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  374  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  376  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  380  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  324  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  332  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  334  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  336  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  338  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  340  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  384  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  342  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  344  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  346  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  514  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  572  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  562  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  564  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  600  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  590  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: vstack:6|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD vstack:1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  616  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  620  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  622  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B64" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  582  <|@ instruction JUMP ~[] destination: B64 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" "B11" "B9" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B9 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" "B44" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B47 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B51" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B47 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B47" "B50" "B49" 
    successors "B52" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B56" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction JUMP ~[] destination: B52 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B52" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction JUMP ~[] destination: B58 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B58" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B11" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B11 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B17 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B21" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction JUMP ~[] destination: B17 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B17" "B20" "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B22" "B25" "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B31" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B27" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B70" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   14  <|@ instruction stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr   18  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 4]
locals: stack:20|DWORD stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4] <|@ <|@
      nr   24  <|@ instruction rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B7" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD <|@ <|@
      nr   32  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B8" "B10" "B12" "B37" "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   56  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   58  <|@ instruction STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  574  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  576  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:33) [bci: 107]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107] <|@ <|@
      nr  578  <|@ instruction JUMP ~[] destination: B63 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B63" "B10" "B8" 
    successors "B66" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  586  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:36) [bci: 110]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B65 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B65" 
    successors "B67" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  592  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 114]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114] <|@ <|@
      nr  594  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  598  <|@ instruction  <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4599070481162045338
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   38  <|@ instruction  <|@ <|@
      nr   40  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4602669721991471617
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   64  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:21) [bci: 53]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53] <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B38" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  328  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  330  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  332  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:30) [bci: 89]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89] <|@ <|@
      nr  334  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  338  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction rsi|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction rax|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD <|@ <|@
      nr  350  <|@ instruction rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD <|@ <|@
      nr  352  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr  354  <|@ instruction CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD <|@ <|@
      nr  368  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0 <|@ <|@
      nr  370  <|@ instruction MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction MOV [rcx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOV [rcx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  376  <|@ instruction MOV [rcx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  378  <|@ instruction MOV [rcx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  380  <|@ instruction MOV [rcx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  382  <|@ instruction MOV [rcx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  384  <|@ instruction rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" "B40" 
    successors "B46" "B43" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  392  <|@ instruction MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B45" "B44" 
    successors "B51" "B48" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  432  <|@ instruction MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  434  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B46" "B50" "B49" 
    successors "B56" "B53" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  472  <|@ instruction MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  474  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  476  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B51" "B55" "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  512  <|@ instruction stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  514  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:31) [bci: 98]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98] <|@ <|@
      nr  516  <|@ instruction rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B62" "B59" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  524  <|@ instruction MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  526  <|@ instruction rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD <|@ <|@
      nr  528  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B57" "B33" "B35" "B36" "B60" "B61" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734181
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  564  <|@ instruction rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ st <@st|@reference-map: [-24]
live-base-pointers: []
ftest42.example_ftest42(int, int, int) [bci: -4]
stack: rcx|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4] <|@ <|@
      nr  568  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B65" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   78  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:24) [bci: 64]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64] <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B13" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 70]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  102  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  106  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  108  <|@ instruction rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  110  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  112  <|@ instruction CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  128  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  130  <|@ instruction MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  132  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  134  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  136  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  138  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  142  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  144  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B15" 
    successors "B21" "B18" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  150  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  152  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  154  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  156  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B16" "B20" "B19" 
    successors "B26" "B23" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  192  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  194  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  196  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B21" "B25" "B24" 
    successors "B31" "B28" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0 <|@ <|@
      nr  232  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  234  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  236  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B26" "B30" "B29" 
    successors "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  272  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:270) [bci: 24]
locals: stack:32|QWORD[.] Object 
java.lang.Exception.<init>(Exception.java:66) [bci: 2]
locals: - - 
ftest42.example_ftest42(ftest42.java:28) [bci: 80]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  284  <|@ instruction MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  286  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  288  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B62" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  292  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ instruction JUMP ~[] destination: B33 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  404  <|@ instruction rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  408  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  410  <|@ instruction rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  412  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD <|@ <|@
      nr  414  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  416  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD <|@ <|@
      nr  418  <|@ instruction MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  482  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  484  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  492  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  494  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  496  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  498  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  500  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  254  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  256  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  298  <|@ instruction rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  306  <|@ instruction rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  310  <|@ instruction rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD <|@ <|@
      nr  312  <|@ instruction MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  314  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B35 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  536  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  538  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  544  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  546  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  548  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  550  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B60 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  172  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  174  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  178  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  206  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  212  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  214  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  218  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B24 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  444  <|@ instruction rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  452  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  456  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  458  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  460  <|@ instruction JUMP ~[] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOVB [rdi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  426  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  504  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  506  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  462  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B21" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  186  <|@ instruction JUMP ~[] destination: B20 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  266  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rsi|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  324  <|@ instruction JUMP ~[] destination: B36 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  558  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:31) [bci: 92]
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92] <|@ <|@
      nr  360  <|@ instruction rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  116  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:27) [bci: 73]
stack: stack:32|QWORD[.] 
locals: - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73] <|@ <|@
      nr  120  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B14 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors 
    xhandlers
    flags 
    probability 4557750863173138664
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:14) [bci: 7]
stack: rax|QWORD[.] 
locals: rdi|DWORD rsi|DWORD stack:12|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7] <|@ <|@
      nr   46  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors 
    xhandlers
    flags 
    probability 4554169591526081610
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:37) [bci: 117]
stack: rax|QWORD[.] 
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117] <|@ <|@
      nr  606  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest42.example_ftest42(ftest42.java:13) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0] <|@ <|@
      nr  616  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: invokestatic  #5          // java.lang.System.console:()java.io.Console
     3: pop           
     4: invokestatic  #5          // java.lang.System.console:()java.io.Console
     7: pop           
     8: iload_0       
     9: iload_1       
    10: iload_2       
    11: iadd          
    12: if_icmple     16
    15: return        
    16: iload_1       
    17: tableswitch   [4] {1: 48, 2: 59, 3: 70, 4: 84} default: 102
    48: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    51: ldc           #9          // 1
    53: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    56: goto          110
    59: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    62: ldc           #11         // 2
    64: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    67: goto          110
    70: invokestatic  #5          // java.lang.System.console:()java.io.Console
    73: pop           
    74: new           #12         // java.lang.Exception
    77: dup           
    78: ldc           #13         // ex1
    80: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
    83: athrow        
    84: getstatic     #6          // java.lang.System.out:java.io.PrintStream
    87: ldc           #15         // 4
    89: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    92: new           #12         // java.lang.Exception
    95: dup           
    96: ldc           #16         // ex2
    98: invokespecial #8          // java.lang.Exception.<init>:(java.lang.String)void
   101: athrow        
   102: getstatic     #6          // java.lang.System.out:java.io.PrintStream
   105: ldc           #17         // default
   107: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
   110: invokestatic  #5          // java.lang.System.console:()java.io.Console
   113: pop           
   114: invokestatic  #5          // java.lang.System.console:()java.io.Console
   117: pop           
   118: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec28498b4778488bcc483bc80f86f50400008954242489742420897c241ce80000000090e800000000908b7c241c8b742420037424243bfe0f8f740000008b742420488b0500000000498d040683fe030f8d1700000083fe010f846a00000083fe020f847e010000e91200000083fe030f848901000083fe040f8460000000488b3500000000498d3436488bf8e80000000090e80000000090e800000000904183afb0000000010f8e4f0400004883c428c38b7424204183afb0000000010f8e2d0400004883c428c3488b3500000000498d3436488bf8e80000000090ebb4488b3500000000498d3436488bf8e80000000090488b3d00000000498d3c3e498bf6498bc7488b4818488b5010488d5938482bfe483bda0f87b4030000488958180f18813801000048893948c741080000000048c741100000000048c741180000000048c741200000000048c741280000000048c7413000000000488b3d0000000048897920488b0148f7c0020000000f857d010000488b3d0000000048897918488b3948f7c7020000000f85c3020000488bf9492bfe48897910488b3948f7c7020000000f857a010000488bf948894c2410e80000000090488b4c2410488b3d0000000048897908488b3948f7c7020000000f85e5010000488d742430488bf9e80000000090488b3500000000498d3436488bf8e80000000090e994feffffe80000000090488b3d00000000498d3c3e498bce498bd7488b5a18488b6a10488d7338482bf9483bf50f87b0020000488972180f18833801000048893b48c743080000000048c743100000000048c743180000000048c743200000000048c743280000000048c7433000000000488b3d0000000048897b20488b3b48f7c7020000000f8568010000488b3d0000000048897b18488b3b48f7c7020000000f857f010000488bfb492bfe48897b10488b3b48f7c7020000000f859a000000488bfb48895c2410e80000000090488b5c2410488b3d0000000048897b08488b3b48f7c7020000000f859e000000488bcbe9e6feffff488bf948f7c0010000000f8583010000488bc74881e00000f0ff488d9028100000482bfa48c1ef09c644382800e951feffff488bc148f7c7010000000f855a010000488bf84881e70000f0ff488d9728100000482bc248c1e809c644072800e954feffff488bc348f7c7010000000f854c010000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e934ffffff488bf348f7c7010000000f8523010000488bfe4881e70000f0ff488d8728100000482bf048c1ee09c644372800488bcbe91bfeffff488bc148f7c7010000000f85fa000000488bf84881e70000f0ff488d9728100000482bc248c1e809c644072800e9e9fdffff488bc348f7c7010000000f85aa000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e966feffff488bc348f7c7010000000f8566000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e94ffeffff488bc148f7c7010000000f853d000000488bf84881e70000f0ff488d9728100000482bc248c1e809c644072800e90bfdffffc647f800e9e7fcffffc640f800e913fdffffc640f800e902feffffc640f800e9e7fcffffc640f800e9d5fdffffc640f800e901feffffc646f800488bcbe911fdffffc640f800e908fdffffe80000000090488bc8e97cfcffff4889442410e80000000090488bd8e97bfdffffe800000000904883c428c3e800000000904883c428c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 rax|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 11 6 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B70 size: QWORD  <||@
  Comment 20 block B1 null  <||@
  Comment 20 8 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 20 10 stack:12|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 24 12 stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 28 14 stack:20|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 32 16 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0]  <||@
  Comment 32 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 37 []at ftest42.example_ftest42(ftest42.java:13) [bci: 0, duringCall: true, rethrow: false]
              |0               |1               |2              
     locals:  |stack:20|DWORD  |stack:16|DWORD  |stack:12|DWORD   <||@
  Comment 38 18 JUMP ~[] destination: B1 -> B2  <||@
  Comment 38 block B2 null  <||@
  Comment 38 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 38 22 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:4]  <||@
  Comment 38 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 43 []at ftest42.example_ftest42(ftest42.java:14) [bci: 4, duringCall: true, rethrow: false]
              |0               |1               |2              
     locals:  |stack:20|DWORD  |stack:16|DWORD  |stack:12|DWORD   <||@
  Comment 44 24 rdi|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 48 26 JUMP ~[] destination: B2 -> B3  <||@
  Comment 48 block B3 null  <||@
  Comment 48 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 48 30 rsi|DWORD = ADD (x: stack:16|DWORD, y: stack:12|DWORD) size: DWORD  <||@
  Comment 56 32 CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B3 -> B4 falseDestination: B3 -> B7 size: DWORD  <||@
  Comment 64 block B7 null  <||@
  Comment 64 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 54 rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 68 56 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 68 {DataSection[?]}  <||@
  Comment 79 58 STRATEGYSWITCH ~rsi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B7 -> B8, B7 -> B10, B7 -> B12, B7 -> B37] defaultTarget: B7 -> B63 strategy: BinaryStrategy[avgEffort=2.6]  <||@
  Comment 129 block B63 null  <||@
  Comment 129 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 129 572 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 129 {DataSection[?]}  <||@
  Comment 140 574 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 143 576 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:107]  <||@
  Comment 143 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 148 []at ftest42.example_ftest42(ftest42.java:33) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 149 578 JUMP ~[] destination: B63 -> B65  <||@
  Comment 149 block B65 null  <||@
  Comment 149 584 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 149 586 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:110]  <||@
  Comment 149 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 154 []at ftest42.example_ftest42(ftest42.java:36) [bci: 110, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 155 588 JUMP ~[] destination: B65 -> B66  <||@
  Comment 155 block B66 null  <||@
  Comment 155 590 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 155 592 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:114]  <||@
  Comment 155 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 160 []at ftest42.example_ftest42(ftest42.java:37) [bci: 114, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 161 594 JUMP ~[] destination: B66 -> B67  <||@
  Comment 161 block B67 null  <||@
  Comment 161 596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 598   <||@
  Comment 169 600 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B67 -> B68 falseDestination: B67 -> B69  <||@
  Comment 175 block B69 null  <||@
  Comment 175 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 175 610 RETURN -  <||@
  Comment 175 EPILOGUE_START  <||@
  Comment 179 EPILOGUE_INCD_RSP  <||@
  Comment 179 EPILOGUE_END  <||@
  Comment 180 block B4 null  <||@
  Comment 180 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 36 rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 184 38   <||@
  Comment 192 40 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 198 block B6 null  <||@
  Comment 198 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 198 50 RETURN -  <||@
  Comment 198 EPILOGUE_START  <||@
  Comment 202 EPILOGUE_INCD_RSP  <||@
  Comment 202 EPILOGUE_END  <||@
  Comment 203 block B8 null  <||@
  Comment 203 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 203 62 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 203 {DataSection[?]}  <||@
  Comment 214 64 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 217 66 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:53]  <||@
  Comment 217 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 222 []at ftest42.example_ftest42(ftest42.java:21) [bci: 53, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 223 68 JUMP ~[] destination: B8 -> B65  <||@
  Comment 225 block B37 null  <||@
  Comment 225 326 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 225 328 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 225 {DataSection[?]}  <||@
  Comment 236 330 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 239 332 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:89]  <||@
  Comment 239 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 244 []at ftest42.example_ftest42(ftest42.java:30) [bci: 89, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 245 334 JUMP ~[] destination: B37 -> B38  <||@
  Comment 245 block B38 null  <||@
  Comment 245 336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 245 338 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 245 {DataSection[?]}  <||@
  Comment 256 340 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 256 342 rsi|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 259 344 rax|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 262 346 rcx|QWORD = MOV [rax|QWORD + 24] size: QWORD  <||@
  Comment 266 348 rdx|QWORD = MOV [rax|QWORD + 16] size: QWORD  <||@
  Comment 270 350 rbx|QWORD = LEA [rcx|QWORD + 56] size: QWORD  <||@
  Comment 274 352 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 277 354 CMPBRANCH (x: rbx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B38 -> B39 falseDestination: B38 -> B40 size: QWORD  <||@
  Comment 286 block B40 null  <||@
  Comment 286 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 286 366 MOV (x: [rax|QWORD + 24], y: rbx|QWORD) size: QWORD  <||@
  Comment 290 368 AMD64PREFETCH ~[rcx|QWORD + 312] instr: 0  <||@
  Comment 297 370 MOV (x: [rcx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 300 372 MOV [rcx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 308 374 MOV [rcx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 316 376 MOV [rcx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 324 378 MOV [rcx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 332 380 MOV [rcx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 340 382 MOV [rcx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 348 384 rcx|QWORD[.] = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 348 386 JUMP ~[] destination: B40 -> B41  <||@
  Comment 348 block B41 null  <||@
  Comment 348 388 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 348 390 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 348 {DataSection[?]}  <||@
  Comment 355 392 MOV (x: [rcx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 359 394 rax|QWORD = MOV [rcx|QWORD[.]] size: QWORD  <||@
  Comment 362 396 TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B41 -> B46 falseDestination: B41 -> B43 y: 2 size: QWORD  <||@
  Comment 375 block B46 null  <||@
  Comment 375 428 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 430 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 375 {DataSection[?]}  <||@
  Comment 382 432 MOV (x: [rcx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 386 434 rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD  <||@
  Comment 389 436 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B46 -> B51 falseDestination: B46 -> B48 y: 2 size: QWORD  <||@
  Comment 402 block B51 null  <||@
  Comment 402 468 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 402 470 rdi|QWORD[.] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0  <||@
  Comment 408 472 MOV (x: [rcx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 412 474 rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD  <||@
  Comment 415 476 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B51 -> B56 falseDestination: B51 -> B53 y: 2 size: QWORD  <||@
  Comment 428 block B56 null  <||@
  Comment 428 508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 428 510 rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 431 512 stack:32|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 436 514 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 98]  <||@
  Comment 436 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 441 [16]at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1      
     locals:  |stack:32|QWORD[.]  |Object 
  at java.lang.Exception.<init>(Exception.java:66) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at ftest42.example_ftest42(ftest42.java:31) [bci: 98, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 442 516 rcx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 447 518 JUMP ~[] destination: B56 -> B57  <||@
  Comment 447 block B57 null  <||@
  Comment 447 520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 447 522 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 447 {DataSection[?]}  <||@
  Comment 454 524 MOV (x: [rcx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 458 526 rdi|QWORD = MOV [rcx|QWORD[.]] size: QWORD  <||@
  Comment 461 528 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B57 -> B62 falseDestination: B57 -> B59 y: 2 size: QWORD  <||@
  Comment 474 block B62 null  <||@
  Comment 474 560 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 474 562 rsi|QWORD = STACKLEA in:0|QWORD  <||@
  Comment 479 564 rdi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 482 566 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:-4]  <||@
  Comment 482 {HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>>}  <||@
  Comment 487 [-24]at ftest42.example_ftest42(int, int, int) [bci: -4, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rcx|QWORD[.]  |   |    <||@
  Comment 488 568 DEAD_END  <||@
  Comment 488 block B10 null  <||@
  Comment 488 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 488 76 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 488 {DataSection[?]}  <||@
  Comment 499 78 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 502 80 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:64]  <||@
  Comment 502 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 507 []at ftest42.example_ftest42(ftest42.java:24) [bci: 64, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 508 82 JUMP ~[] destination: B10 -> B65  <||@
  Comment 513 block B12 null  <||@
  Comment 513 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 90 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:70]  <||@
  Comment 513 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 518 []at ftest42.example_ftest42(ftest42.java:27) [bci: 70, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 519 92 JUMP ~[] destination: B12 -> B13  <||@
  Comment 519 block B13 null  <||@
  Comment 519 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 519 96 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 519 {DataSection[?]}  <||@
  Comment 530 98 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 530 100 rcx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 533 102 rdx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 536 104 rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD  <||@
  Comment 540 106 rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD  <||@
  Comment 544 108 rsi|QWORD = LEA [rbx|QWORD + 56] size: QWORD  <||@
  Comment 548 110 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 551 112 CMPBRANCH (x: rsi|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B15 size: QWORD  <||@
  Comment 560 block B15 null  <||@
  Comment 560 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 560 126 MOV (x: [rdx|QWORD + 24], y: rsi|QWORD) size: QWORD  <||@
  Comment 564 128 AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0  <||@
  Comment 571 130 MOV (x: [rbx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 574 132 MOV [rbx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 582 134 MOV [rbx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 590 136 MOV [rbx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 598 138 MOV [rbx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 606 140 MOV [rbx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 614 142 MOV [rbx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 622 144 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 622 146 JUMP ~[] destination: B15 -> B16  <||@
  Comment 622 block B16 null  <||@
  Comment 622 148 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 622 150 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 622 {DataSection[?]}  <||@
  Comment 629 152 MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 633 154 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 636 156 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B16 -> B21 falseDestination: B16 -> B18 y: 2 size: QWORD  <||@
  Comment 649 block B21 null  <||@
  Comment 649 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 649 190 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 649 {DataSection[?]}  <||@
  Comment 656 192 MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 660 194 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 663 196 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B21 -> B26 falseDestination: B21 -> B23 y: 2 size: QWORD  <||@
  Comment 676 block B26 null  <||@
  Comment 676 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 676 230 rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5ec264ba encoding: base: 1 shift: 0  <||@
  Comment 682 232 MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 686 234 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 689 236 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B26 -> B31 falseDestination: B26 -> B28 y: 2 size: QWORD  <||@
  Comment 702 block B31 null  <||@
  Comment 702 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 702 270 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 705 272 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 710 274 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:24, 2, 80]  <||@
  Comment 710 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 715 [16]at java.lang.Throwable.<init>(Throwable.java:270) [bci: 24, duringCall: true, rethrow: false]
              |0                  |1      
     locals:  |stack:32|QWORD[.]  |Object 
  at java.lang.Exception.<init>(Exception.java:66) [bci: 2, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at ftest42.example_ftest42(ftest42.java:28) [bci: 80, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 716 276 rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 721 278 JUMP ~[] destination: B31 -> B32  <||@
  Comment 721 block B32 null  <||@
  Comment 721 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 282 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@4b499205 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 721 {DataSection[?]}  <||@
  Comment 728 284 MOV (x: [rbx|QWORD[.] + 8], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 732 286 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 735 288 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 2 size: QWORD  <||@
  Comment 748 block B33 null  <||@
  Comment 748 290 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 292 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 751 294 JUMP ~[] destination: B33 -> B62  <||@
  Comment 756 block B43 null  <||@
  Comment 756 402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 756 404 rdi|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 759 406 TESTCONSTBRANCH rax|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B45 y: 1 size: QWORD  <||@
  Comment 772 block B44 null  <||@
  Comment 772 408 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 772 410 rax|QWORD = AND rdi|QWORD y: -1048576 size: QWORD  <||@
  Comment 782 412 rdx|QWORD = LEA [rax|QWORD + 4136] size: QWORD  <||@
  Comment 789 414 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 792 416 rdi|QWORD = SHR rdi|QWORD y: 9 size: QWORD  <||@
  Comment 796 418 MOVB [rax|QWORD + rdi|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 801 420 JUMP ~[] destination: B44 -> B46  <||@
  Comment 806 block B53 null  <||@
  Comment 806 482 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 806 484 rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 809 486 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B53 -> B54 falseDestination: B53 -> B55 y: 1 size: QWORD  <||@
  Comment 822 block B54 null  <||@
  Comment 822 488 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 822 490 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 832 492 rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 839 494 rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 842 496 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 846 498 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 851 500 JUMP ~[] destination: B54 -> B56  <||@
  Comment 856 block B28 null  <||@
  Comment 856 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 856 244 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 859 246 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B30 y: 1 size: QWORD  <||@
  Comment 872 block B29 null  <||@
  Comment 872 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 872 250 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 882 252 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 889 254 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 892 256 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 896 258 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 901 260 JUMP ~[] destination: B29 -> B31  <||@
  Comment 906 block B34 null  <||@
  Comment 906 296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 906 298 rsi|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 909 300 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B34 -> B35 falseDestination: B34 -> B36 y: 1 size: QWORD  <||@
  Comment 922 block B35 null  <||@
  Comment 922 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 922 304 rdi|QWORD = AND rsi|QWORD y: -1048576 size: QWORD  <||@
  Comment 932 306 rax|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 939 308 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 942 310 rsi|QWORD = SHR rsi|QWORD y: 9 size: QWORD  <||@
  Comment 946 312 MOVB [rdi|QWORD + rsi|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 951 314 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 954 316 JUMP ~[] destination: B35 -> B62  <||@
  Comment 959 block B59 null  <||@
  Comment 959 534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 959 536 rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 962 538 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B59 -> B60 falseDestination: B59 -> B61 y: 1 size: QWORD  <||@
  Comment 975 block B60 null  <||@
  Comment 975 540 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 975 542 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 985 544 rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 992 546 rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 995 548 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 999 550 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 1004 552 JUMP ~[] destination: B60 -> B62  <||@
  Comment 1009 block B18 null  <||@
  Comment 1009 162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 164 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1012 166 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B18 -> B19 falseDestination: B18 -> B20 y: 1 size: QWORD  <||@
  Comment 1025 block B19 null  <||@
  Comment 1025 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1025 170 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 1035 172 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 1042 174 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1045 176 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 1049 178 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 1054 180 JUMP ~[] destination: B19 -> B21  <||@
  Comment 1059 block B23 null  <||@
  Comment 1059 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1059 204 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1062 206 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B23 -> B24 falseDestination: B23 -> B25 y: 1 size: QWORD  <||@
  Comment 1075 block B24 null  <||@
  Comment 1075 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1075 210 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 1085 212 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 1092 214 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 1095 216 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 1099 218 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 1104 220 JUMP ~[] destination: B24 -> B26  <||@
  Comment 1109 block B48 null  <||@
  Comment 1109 442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1109 444 rax|QWORD = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 1112 446 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B48 -> B49 falseDestination: B48 -> B50 y: 1 size: QWORD  <||@
  Comment 1125 block B49 null  <||@
  Comment 1125 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1125 450 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 1135 452 rdx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 1142 454 rax|QWORD = SUB (x: rax|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 1145 456 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 1149 458 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 1154 460 JUMP ~[] destination: B49 -> B51  <||@
  Comment 1159 block B45 null  <||@
  Comment 1159 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1159 424 MOVB [rdi|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1163 426 JUMP ~[] destination: B45 -> B46  <||@
  Comment 1168 block B55 null  <||@
  Comment 1168 502 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1168 504 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1172 506 JUMP ~[] destination: B55 -> B56  <||@
  Comment 1177 block B25 null  <||@
  Comment 1177 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1177 224 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1181 226 JUMP ~[] destination: B25 -> B26  <||@
  Comment 1186 block B50 null  <||@
  Comment 1186 462 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 464 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1190 466 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1195 block B20 null  <||@
  Comment 1195 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1195 184 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1199 186 JUMP ~[] destination: B20 -> B21  <||@
  Comment 1204 block B30 null  <||@
  Comment 1204 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1204 264 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1208 266 JUMP ~[] destination: B30 -> B31  <||@
  Comment 1213 block B36 null  <||@
  Comment 1213 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1213 320 MOVB [rsi|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1217 322 rcx|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 1220 324 JUMP ~[] destination: B36 -> B62  <||@
  Comment 1225 block B61 null  <||@
  Comment 1225 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1225 556 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1229 558 JUMP ~[] destination: B61 -> B62  <||@
  Comment 1234 block B39 null  <||@
  Comment 1234 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1234 358 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:92]  <||@
  Comment 1234 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1239 []at ftest42.example_ftest42(ftest42.java:31) [bci: 92, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 1240 360 rcx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1243 362 JUMP ~[] destination: B39 -> B41  <||@
  Comment 1248 block B14 null  <||@
  Comment 1248 114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1248 116 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1253 118 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:73]  <||@
  Comment 1253 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1258 [16]at ftest42.example_ftest42(ftest42.java:27) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1  |2 
     locals:  |-                  |-  |- 
     stack:   |stack:32|QWORD[.]  |   |    <||@
  Comment 1259 120 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1262 122 JUMP ~[] destination: B14 -> B16  <||@
  Comment 1267 block B5 null  <||@
  Comment 1267 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1267 44 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:7]  <||@
  Comment 1267 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 1272 [-16]at ftest42.example_ftest42(ftest42.java:14) [bci: 7, duringCall: false, rethrow: false]
              |0             |1          |2              
     locals:  |rdi|DWORD     |rsi|DWORD  |stack:12|DWORD 
     stack:   |rax|QWORD[.]  |           |                 <||@
  Comment 1273 46 RETURN -  <||@
  Comment 1273 EPILOGUE_START  <||@
  Comment 1277 EPILOGUE_INCD_RSP  <||@
  Comment 1277 EPILOGUE_END  <||@
  Comment 1278 block B68 null  <||@
  Comment 1278 602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1278 604 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:117]  <||@
  Comment 1278 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 1283 [-16]at ftest42.example_ftest42(ftest42.java:37) [bci: 117, duringCall: false, rethrow: false]
              |0             |1  |2 
     locals:  |-             |-  |- 
     stack:   |rax|QWORD[.]  |   |    <||@
  Comment 1284 606 RETURN -  <||@
  Comment 1284 EPILOGUE_START  <||@
  Comment 1288 EPILOGUE_INCD_RSP  <||@
  Comment 1288 EPILOGUE_END  <||@
  Comment 1289 block B70 null  <||@
  Comment 1289 612 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1289 614 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@2700bb06 state [bci:0]  <||@
  Comment 1289 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 1294 []at ftest42.example_ftest42(ftest42.java:13) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2         
     locals:  |rdi|DWORD  |rsi|DWORD  |rdx|DWORD   <||@
  Comment 1295 616 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
