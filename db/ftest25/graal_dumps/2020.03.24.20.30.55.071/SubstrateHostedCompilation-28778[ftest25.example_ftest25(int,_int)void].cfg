begin_compilation
  name " SubstrateHostedCompilation-28778[ftest25.example_ftest25(int, int)]"
  method "SubstrateHostedCompilation-28778[ftest25.example_ftest25(int, int)]"
  date 1585078255128
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j117  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j106 
index: - 
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@70228310
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v146 
lastLocationAccess: - 
=== Succesors ===
next: j107 
=== Usages ===
v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v146 lastLocationAccess: - #next: j107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j107 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
v109 
=== Predecessor ===
j117 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69730b05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j117 
y: j107 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j117 y: j107  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?141 ?144 ?143 v17 ?142 v102 ?140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?141 ?144 ?143 v35 ?142 ?140 v81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
j107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3c8a4513
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a5 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a5  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v118 
stateDuring: ?140 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v118 stateDuring: ?140 #next: v11  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 31]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i101 v102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i50 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a90  <|@  <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@65e37074
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 ?141 ?142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i12 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v119 
stateDuring: ?141 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v119 stateDuring: ?141 #next: v80  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
a90 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v83 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a91 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a91  <|@  <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@563be835
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i12 
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v120 
stateDuring: ?142 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v120 stateDuring: ?142 #next: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a91 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i101 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v14 
values: i50 i51 
=== Succesors ===
=== Usages ===
?144 v17 i51 ?143 v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v14 values: i50 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v13 
=== Succesors ===
next: v21 
=== Usages ===
i101 v18 v52 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v13 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i1 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v20 #falseSuccessor: v18  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6021ecf0
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i101 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v121 
stateDuring: ?143 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v121 stateDuring: ?143 #next: v34  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a70 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i101 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i101  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v37 #falseSuccessor: v36  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a71 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a71  <|@  <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@e6d9f3a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i101 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v122 
stateDuring: ?144 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v122 stateDuring: ?144 #next: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
a71 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 31]
stamp: i32
=== Inputs ===
x: i101 
y: i50 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v53 v55 v104 v105 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v55 v104 v105 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 40]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@70733e53
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a57 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a57  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
bci: 42
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v123 
stateDuring: ?145 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v123 stateDuring: ?145 #next: v64  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 42]
rethrowException: false
sourceFile: ftest25.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@6ad53bce
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?63 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?63 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:23) [bci: 45]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:23) [bci: 45]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@6ad53bce
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j117 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j117  <|@  <|@
f <@~|@floating>@ <|@
tid j106 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j106 
index: - 
=== Succesors ===
=== Usages ===
j117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j106 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j117 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@70228310
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v146 
lastLocationAccess: - 
=== Succesors ===
next: j107 
=== Usages ===
v109 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v146 lastLocationAccess: - #next: j107  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j107 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v108 
=== Usages ===
v109 
=== Predecessor ===
j117 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v108  <|@  <|@
f <@~|@floating>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@69730b05
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j117 
y: j107 
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j117 y: j107  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?141 ?144 ?143 v17 ?142 v102 ?140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?141 ?144 ?143 v35 ?142 ?140 v81 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v109 
=== Succesors ===
trueSuccessor: v110 
falseSuccessor: v111 
=== Usages ===
=== Predecessor ===
j107 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v109 #trueSuccessor: v110 #falseSuccessor: v111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@3c8a4513
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a5 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a5  <|@  <|@
tid ?140 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v118 
stateDuring: ?140 
=== Succesors ===
next: v11 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v118 stateDuring: ?140 #next: v11  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i50 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 31]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i51 i101 v102 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i50 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v102 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v11 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v102 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v105 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v105  <|@  <|@
f <@*|@fixed>@ <|@
tid v105 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v75 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a90 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a90  <|@  <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@65e37074
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v81 ?141 ?142 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?141 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i12 
=== Succesors ===
=== Usages ===
a90 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a90 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v119 
stateDuring: ?141 
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v76 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v119 stateDuring: ?141 #next: v80  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
a90 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v84  <|@  <|@
f <@~|@floating>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i12 
=== Succesors ===
=== Usages ===
v84 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v81 
=== Succesors ===
trueSuccessor: v83 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v80 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v81 #trueSuccessor: v83 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v104 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v104  <|@  <|@
f <@*|@fixed>@ <|@
tid v104 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v83 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a91 
=== Usages ===
=== Predecessor ===
v84 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a91  <|@  <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@563be835
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i12 
=== Succesors ===
=== Usages ===
a91 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a91 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v120 
stateDuring: ?142 
=== Succesors ===
next: v87 
=== Usages ===
=== Predecessor ===
v82 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v120 stateDuring: ?142 #next: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v13 
=== Usages ===
=== Predecessor ===
a91 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v13  <|@  <|@
f <@*|@fixed>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v14 
=== Predecessor ===
v87 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i101 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v14 
values: i50 i51 
=== Succesors ===
=== Usages ===
?144 v17 i51 ?143 v35 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v14 values: i50 i51  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v13 
=== Succesors ===
next: v21 
=== Usages ===
i101 v18 v52 v37 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v13 #next: v21  <|@  <|@
f <@~|@floating>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i101 
y: i1 
=== Succesors ===
=== Usages ===
v21 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i101 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v17 
=== Succesors ===
trueSuccessor: v20 
falseSuccessor: v18 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v17 #trueSuccessor: v20 #falseSuccessor: v18  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a70 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a70  <|@  <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@6021ecf0
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?143 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i101 
=== Succesors ===
=== Usages ===
a70 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a70 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v121 
stateDuring: ?143 
=== Succesors ===
next: v34 
=== Usages ===
=== Predecessor ===
v20 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v121 stateDuring: ?143 #next: v34  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
a70 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@~|@floating>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@51e35579
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i101 
=== Succesors ===
=== Usages ===
v39 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i101  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v35 
=== Succesors ===
trueSuccessor: v37 
falseSuccessor: v36 
=== Usages ===
=== Predecessor ===
v34 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v35 #trueSuccessor: v37 #falseSuccessor: v36  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v55 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v55  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v37 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a71 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a71  <|@  <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@e6d9f3a
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?144 <|@
d <@d|@=== Debug Properties ===
bci: 27
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i101 
=== Succesors ===
=== Usages ===
a71 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a71 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 27
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v122 
stateDuring: ?144 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v36 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v122 stateDuring: ?144 #next: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:20) [bci: 27]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v52 
=== Usages ===
=== Predecessor ===
a71 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v52  <|@  <|@
f <@~|@floating>@ <|@
tid i51 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 31]
stamp: i32
=== Inputs ===
x: i101 
y: i50 
=== Succesors ===
=== Usages ===
i101 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i101 y: i50  <|@  <|@
f <@*|@fixed>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v14 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v14 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v14 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v54 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v53 v55 v104 v105 
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v53 v55 v104 v105 #next: v72  <|@  <|@
f <@~|@floating>@ <|@
tid a57 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 40]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v123 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@70733e53
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a4 a57 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a4 a57  <|@  <|@
tid ?145 <|@
d <@d|@=== Debug Properties ===
bci: 42
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
bci: 42
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v123 
stateDuring: ?145 
=== Succesors ===
next: v64 
=== Usages ===
=== Predecessor ===
v54 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v123 stateDuring: ?145 #next: v64  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid v130 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v130 
=== Succesors ===
trueSuccessor: v131 
falseSuccessor: v132 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v130 #trueSuccessor: v131 #falseSuccessor: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v133  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:22) [bci: 42]
rethrowException: false
sourceFile: ftest25.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@6ad53bce
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?63 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?63 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:23) [bci: 45]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v138 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v138  <|@  <|@
f <@*|@fixed>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest25.example_ftest25(ftest25.java:23) [bci: 45]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v108 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v112  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest25.example_ftest25(int, int)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ftest25.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 - 
=== Succesors ===
=== Usages ===
v112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@6ad53bce
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v114 
=== Usages ===
=== Predecessor ===
v111 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v114  <|@  <|@
f <@*|@fixed>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v112 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v8|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: v0|DWORD v1|DWORD v8|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = INC v8|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v11|DWORD] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [v8|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v8|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v12|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[108, 109[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 4[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[106, 109[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 109[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 84[[128, 131[2 MustHaveRegister 28 ShouldHaveRegister 56 MustHaveRegister 83 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rsi|- [4, 84[[128, 131[4 MustHaveRegister 40 MustHaveRegister 68 ShouldHaveRegister 83 LiveAtLoopEnd  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [14, 104[14 MustHaveRegister 18 ShouldHaveRegister 104 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q rax|- [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|- [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[v8|d]" v8|d v11|d [54, 80[56 ShouldHaveRegister 68 MustHaveRegister 80 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q rax|- [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q rax|- [74, 75[74 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[108, 109[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 4[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[106, 109[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 109[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 12[4 MustHaveRegister  "SpillInDominator"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|- [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|- [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v11|d [54, 58[56 ShouldHaveRegister  "SpillInDominator"
  v9|q QWORD "[rax|q]" v9|q rax|- [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [74, 75[74 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "SpillInDominator"
  v14|d DWORD "[vstack:1|d]" v1|d v1|d [12, 19[ "SpillInDominator"
  v15|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "SpillInDominator"
  v16|d DWORD "[vstack:1|d]" v1|d v1|d [19, 21[ "SpillInDominator"
  v17|q QWORD "[vstack:2|q]" v4|q v4|q [21, 100[ "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "SpillInDominator"
  v19|d DWORD "[vstack:1|d]" v1|d v1|d [21, 38[ "SpillInDominator"
  v20|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "SpillInDominator"
  v21|d DWORD "[rsi|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "SpillInDominator"
  v22|q QWORD "[rax|q]" v4|q v4|q [100, 104[104 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[vstack:1|d]" v1|d v1|d [42, 43[ "SpillInDominator"
  v24|d DWORD "[vstack:1|d]" v1|d v1|d [43, 54[ "SpillInDominator"
  v25|d DWORD "[vstack:1|d]" v1|d v1|d [54, 58[ "SpillInDominator"
  v26|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "SpillInDominator"
  v27|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "SpillInDominator"
  v28|d DWORD "[vstack:1|d]" v1|d v1|d [58, 59[ "SpillInDominator"
  v29|d DWORD "[vstack:1|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "SpillInDominator"
  v30|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "SpillInDominator"
  v31|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "SpillInDominator"
  v32|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "SpillInDominator"
  v33|d DWORD "[rsi|d]" v1|d v1|d [128, 131[ "SpillInDominator"
  v34|d DWORD "[rdi|d]" v0|d v0|d [128, 131[ "SpillInDominator"
  v35|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "SpillInDominator"
  v36|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "SpillInDominator"
  v37|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "SpillInDominator"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[108, 109[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 4[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[106, 109[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 109[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 12[4 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|- [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|- [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v11|d [54, 58[56 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[rax|q]" v9|q rax|- [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [74, 75[74 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "StoreAtDefinition"
  v14|d DWORD "[vstack:1|d]" v1|d v1|d [12, 19[ "StoreAtDefinition"
  v15|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "StoreAtDefinition"
  v16|d DWORD "[vstack:1|d]" v1|d v1|d [19, 21[ "StoreAtDefinition"
  v17|q QWORD "[vstack:2|q]" v4|q v4|q [21, 100[ "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "StoreAtDefinition"
  v19|d DWORD "[vstack:1|d]" v1|d v1|d [21, 38[ "StoreAtDefinition"
  v20|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "StoreAtDefinition"
  v21|d DWORD "[rsi|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "StoreAtDefinition"
  v22|q QWORD "[rax|q]" v4|q v4|q [100, 104[104 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[vstack:1|d]" v1|d v1|d [42, 43[ "StoreAtDefinition"
  v24|d DWORD "[vstack:1|d]" v1|d v1|d [43, 54[ "StoreAtDefinition"
  v25|d DWORD "[vstack:1|d]" v1|d v1|d [54, 58[ "StoreAtDefinition"
  v26|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "StoreAtDefinition"
  v27|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "StoreAtDefinition"
  v28|d DWORD "[vstack:1|d]" v1|d v1|d [58, 59[ "StoreAtDefinition"
  v29|d DWORD "[vstack:1|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "StoreAtDefinition"
  v30|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "StoreAtDefinition"
  v31|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "StoreAtDefinition"
  v32|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v1|d v1|d [128, 131[ "StoreAtDefinition"
  v34|d DWORD "[rdi|d]" v0|d v0|d [128, 131[ "StoreAtDefinition"
  v35|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "StoreAtDefinition"
  v37|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|- fixed "[rax|-]" rax|- -1 [0, 1[[22, 23[[32, 34[[44, 46[[60, 62[[72, 74[[108, 109[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v5|q [0, 4[[20, 23[[32, 33[[44, 45[[60, 61[[72, 73[[106, 109[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[18, 23[[32, 33[[44, 45[[60, 61[[72, 73[[104, 109[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[22, 23[[32, 33[[44, 45[[60, 61[[72, 73[[108, 109[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 12[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 12[4 MustHaveRegister  "StoreAtDefinition"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 21[14 MustHaveRegister 18 ShouldHaveRegister  "OneSpillStore"
  v5|q QWORD "[rcx|q]" v5|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q rax|- [34, 35[34 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|- [46, 47[46 MustHaveRegister  "NoSpillStore"
  v8|d DWORD "[rax|d]" v8|d v11|d [54, 58[56 ShouldHaveRegister  "StoreAtDefinition"
  v9|q QWORD "[rax|q]" v9|q rax|- [62, 63[62 MustHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q rax|- [74, 75[74 MustHaveRegister  "NoSpillStore"
  v11|d DWORD "[rax|d]" v11|d v8|d [80, 83[80 MustHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rsi|q]" v12|q -1 [102, 106[102 MustHaveRegister 106 ShouldHaveRegister  "NoSpillStore"
  v13|d DWORD "[vstack:0|d]" v0|d v0|d [12, 17[ "StoreAtDefinition"
  v14|d DWORD "[vstack:1|d]" v1|d v1|d [12, 19[ "StoreAtDefinition"
  v15|d DWORD "[vstack:0|d]" v0|d v0|d [17, 21[ "StoreAtDefinition"
  v16|d DWORD "[vstack:1|d]" v1|d v1|d [19, 21[ "StoreAtDefinition"
  v17|q QWORD "[vstack:2|q]" v4|q v4|q [21, 100[ "OneSpillStore"
  v18|d DWORD "[vstack:0|d]" v0|d v0|d [21, 54[28 ShouldHaveRegister  "StoreAtDefinition"
  v19|d DWORD "[vstack:1|d]" v1|d v1|d [21, 38[ "StoreAtDefinition"
  v20|d DWORD "[rdi|d]" v0|d v0|d [54, 58[56 MustHaveRegister  "StoreAtDefinition"
  v21|d DWORD "[rsi|d]" v1|d v1|d [38, 42[40 MustHaveRegister  "StoreAtDefinition"
  v22|q QWORD "[rax|q]" v4|q v4|q [100, 104[104 ShouldHaveRegister  "OneSpillStore"
  v23|d DWORD "[vstack:1|d]" v1|d v1|d [42, 43[ "StoreAtDefinition"
  v24|d DWORD "[vstack:1|d]" v1|d v1|d [43, 54[ "StoreAtDefinition"
  v25|d DWORD "[vstack:1|d]" v1|d v1|d [54, 58[ "StoreAtDefinition"
  v26|d DWORD "[vstack:0|d]" v0|d v0|d [58, 59[ "StoreAtDefinition"
  v27|d DWORD "[vstack:4|d]" v8|d v8|d [58, 59[ "StoreAtDefinition"
  v28|d DWORD "[vstack:1|d]" v1|d v1|d [58, 59[ "StoreAtDefinition"
  v29|d DWORD "[vstack:1|d]" v1|d v1|d [59, 84[68 ShouldHaveRegister 83 LiveAtLoopEnd  "StoreAtDefinition"
  v30|d DWORD "[vstack:4|d]" v8|d v8|d [59, 66[ "StoreAtDefinition"
  v31|d DWORD "[vstack:0|d]" v0|d v0|d [59, 84[83 LiveAtLoopEnd  "StoreAtDefinition"
  v32|d DWORD "[rax|d]" v8|d v8|d [66, 70[68 MustHaveRegister  "StoreAtDefinition"
  v33|d DWORD "[rsi|d]" v1|d v1|d [128, 131[ "StoreAtDefinition"
  v34|d DWORD "[rdi|d]" v0|d v0|d [128, 131[ "StoreAtDefinition"
  v35|d DWORD "[vstack:4|d]" v8|d v8|d [70, 71[ "StoreAtDefinition"
  v36|d DWORD "[vstack:4|d]" v8|d v8|d [71, 78[ "StoreAtDefinition"
  v37|d DWORD "[rax|d]" v8|d v8|d [78, 80[80 ShouldHaveRegister  "StoreAtDefinition"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rsi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   22  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: vstack:0|DWORD vstack:1|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction CMPCONSTBRANCH vstack:0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: vstack:0|DWORD vstack:1|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   48  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   52  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   60  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD vstack:4|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   64  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: vstack:0|DWORD vstack:1|DWORD vstack:4|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:4|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:4|DWORD = MOVE rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   56  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  102  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  104  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  108  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  110  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction  <|@ <|@
      nr  116  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   90  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   94  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   96  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  124  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  126  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  132  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  106  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   52  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B12 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B15" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B15 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B16" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B3 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B12" "B6" "B3" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B16" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B16" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B12 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B20" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B16" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   42  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   68  <|@ instruction JUMP ~[] destination: B8 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15] <|@ <|@
      nr   80  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B16" "B13" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:20) [bci: 27]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27] <|@ <|@
      nr   98  <|@ instruction rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B9" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B14 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" "B14" 
    successors "B10" "B16" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4598175129473283869
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   66  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   72  <|@ instruction stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B9" "B11" "B5" "B2" 
    successors "B17" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:22) [bci: 42]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B16 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4606619384404103084
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4606610940239244257
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 4561786048087009972
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:23) [bci: 45]
locals: - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45] <|@ <|@
      nr  136  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest25.example_ftest25(ftest25.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0] <|@ <|@
      nr  146  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_2      
    10: iload_2       
    11: iload_0       
    12: if_icmpge     37
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_2       
    20: iload_1       
    21: if_icmple     27
    24: goto          37
    27: invokestatic  #7          // java.lang.System.console:()java.io.Console
    30: pop           
    31: iinc          
    34: goto          10
    37: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    40: ldc           #11         // End
    42: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    45: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec28897c242489742420498b4778488bcc483bc80f86b7000000488b0500000000498d0406488b0d00000000498d0c0e488bf8488bf14889442410e80000000090837c2424010f8c4e000000e800000000908b74242085f60f8c3c000000e80000000090b801000000e920000000e800000000908b44241c3b4424200f8f18000000e800000000908b44241cffc08b7c24248944241c3bf87fd4488b442410488b3500000000498d3436488bf8e800000000904183afb0000000010f8e050000004883c428c3e800000000904883c428c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 12 6 rax|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 16 8 rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 19 10 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B20 size: QWORD  <||@
  Comment 28 block B1 null  <||@
  Comment 28 12 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 28 14 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 28 {DataSection[?]}  <||@
  Comment 39 16 rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 39 {DataSection[?]}  <||@
  Comment 50 18 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 53 20 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 56 22 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 61 24 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:5]  <||@
  Comment 61 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 66 [16]at ftest25.example_ftest25(ftest25.java:15) [bci: 5, duringCall: true, rethrow: false]
              |0               |1               |2 
     locals:  |stack:12|DWORD  |stack:16|DWORD  |-   <||@
  Comment 67 26 JUMP ~[] destination: B1 -> B2  <||@
  Comment 67 block B2 null  <||@
  Comment 67 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 67 30 CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B16 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 78 block B4 null  <||@
  Comment 78 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 78 40 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15]  <||@
  Comment 78 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 83 [16]at ftest25.example_ftest25(ftest25.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |int[0|0x0]   <||@
  Comment 84 42 rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 88 44 JUMP ~[] destination: B4 -> B5  <||@
  Comment 88 block B5 null  <||@
  Comment 88 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 88 48 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 96 block B7 null  <||@
  Comment 96 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 96 58 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27]  <||@
  Comment 96 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 101 [16]at ftest25.example_ftest25(ftest25.java:20) [bci: 27, duringCall: true, rethrow: false]
              |0               |1               |2          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |int[0|0x0]   <||@
  Comment 102 60 JUMP ~[] destination: B7 -> B8  <||@
  Comment 102 block B8 null  <||@
  Comment 102 62 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 102 64 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 107 68 JUMP ~[] destination: B8 -> B9  <||@
  Comment 112 block B10 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 112 76 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 112 78 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:15]  <||@
  Comment 112 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 117 [16]at ftest25.example_ftest25(ftest25.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD   <||@
  Comment 118 80 rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 122 82 JUMP ~[] destination: B10 -> B11  <||@
  Comment 122 block B11 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 122 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 122 86 CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B11 -> B16 falseDestination: B11 -> B13 size: DWORD  <||@
  Comment 132 block B13 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 132 94 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 132 96 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:27]  <||@
  Comment 132 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 137 [16]at ftest25.example_ftest25(ftest25.java:20) [bci: 27, duringCall: true, rethrow: false]
              |0               |1               |2              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD   <||@
  Comment 138 98 rax|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 142 100 JUMP ~[] destination: B13 -> B14  <||@
  Comment 142 block B14 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 142 102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 104 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 144 108 JUMP ~[] destination: B14 -> B9  <||@
  Comment 144 block B9 loop 0 depth 1 header:14|LoopBegin  <||@
  Comment 144 70 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 144 66 rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD  <||@
  Comment 148 72 stack:20|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 152 74 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B9 -> B10 falseDestination: B9 -> B16 size: DWORD  <||@
  Comment 156 block B16 null  <||@
  Comment 156 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 112 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 161 118 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@16a93f84 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 161 {DataSection[?]}  <||@
  Comment 172 120 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 175 122 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:42]  <||@
  Comment 175 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 180 []at ftest25.example_ftest25(ftest25.java:22) [bci: 42, duringCall: true, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 181 124 JUMP ~[] destination: B16 -> B17  <||@
  Comment 181 block B17 null  <||@
  Comment 181 126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 181 128   <||@
  Comment 189 130 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 195 block B19 null  <||@
  Comment 195 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 195 140 RETURN -  <||@
  Comment 195 EPILOGUE_START  <||@
  Comment 199 EPILOGUE_INCD_RSP  <||@
  Comment 199 EPILOGUE_END  <||@
  Comment 200 block B18 null  <||@
  Comment 200 132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 134 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:45]  <||@
  Comment 200 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 205 []at ftest25.example_ftest25(ftest25.java:23) [bci: 45, duringCall: false, rethrow: false]
              |0  |1  |2 
     locals:  |-  |-  |-   <||@
  Comment 206 136 RETURN -  <||@
  Comment 206 EPILOGUE_START  <||@
  Comment 210 EPILOGUE_INCD_RSP  <||@
  Comment 210 EPILOGUE_END  <||@
  Comment 211 block B20 null  <||@
  Comment 211 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 211 144 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@74dfe624 state [bci:0]  <||@
  Comment 211 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 216 []at ftest25.example_ftest25(ftest25.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2 
     locals:  |rdi|DWORD  |rsi|DWORD  |-   <||@
  Comment 217 146 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
