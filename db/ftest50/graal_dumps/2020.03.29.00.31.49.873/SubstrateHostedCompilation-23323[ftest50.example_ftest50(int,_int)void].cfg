begin_compilation
  name " SubstrateHostedCompilation-23323[ftest50.example_ftest50(int, int)]"
  method "SubstrateHostedCompilation-23323[ftest50.example_ftest50(int, int)]"
  date 1585438309889
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j158  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j147 
index: - 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j147 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j158 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@36d2ef0e
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: j148 
=== Usages ===
v150 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
v150 
=== Predecessor ===
j158 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j148 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j158 y: j148  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v153 a414 a258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
j148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v151 #falseSuccessor: v152  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a14 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 74]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 v160 v159 v192 v193 v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:15) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:15) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v5 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v6 #falseSuccessor: v5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:16) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a197 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 v322 v323 v351 v352 v380 v381 v525 v467 v468 v496 v497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 j344 j373 j460 j489 j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j315 j345 j374 j461 j490 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 j347 j376 j463 j492 j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 v339 v368 v455 v484 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v335 v364 v451 v480 v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a198 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 v282 v283 v284 v285 v286 v287 v436 v437 v439 v438 v434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 j404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a230 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j398 j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1b434daf
keySuccessors: [I@7b6f5b97
keys: [I@4f054d26
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:16) [bci: 6]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v9 v10 v11 v12 v13 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v9 v10 v11 v12 v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 39]
rawvalue: 1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50164977
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a42 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a42  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 18
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
bci: 41
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v159 
stateDuring: ?214 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v159 stateDuring: ?214 #next: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 41]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 50]
rawvalue: 2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@513948ef
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a31 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a31  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 21
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v160 
stateDuring: ?217 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v160 stateDuring: ?217 #next: v38  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 52]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:24) [bci: 58]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a230 
=== Succesors ===
next: j240 
=== Usages ===
j257 
=== Predecessor ===
v11 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a230 #next: j240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j241 
=== Usages ===
j257 
=== Predecessor ===
j239 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
v552 v553 
=== Predecessor ===
j240 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j242  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j241 
index: - 
=== Succesors ===
=== Usages ===
j242 v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
=== Succesors ===
next: j243 
=== Usages ===
j247 v544 a263 v545 v546 v547 v548 v549 v550 v551 
=== Predecessor ===
j241 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j241 
index: - 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
v248 
=== Predecessor ===
j242 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j242 
y: j246 
=== Succesors ===
=== Usages ===
v248 v251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j242 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j243 
y: j247 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j243 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j239 
y: j240 
=== Succesors ===
=== Usages ===
a258 v281 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j239 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
j243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: j257 
=== Succesors ===
next: v259 
=== Usages ===
a265 
=== Predecessor ===
v249 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: j257 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
a258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j247 
stateAfter: - 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j247 stateAfter: - #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v545 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v545 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
value: j257 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - value: j257 stateAfter: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - value: j255 stateAfter: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - value: j255 stateAfter: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: j255 stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: j255 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - value: j255 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: a263 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - value: j255 stateAfter: - #next: a263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a263 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j242 
=== Succesors ===
next: v264 
=== Usages ===
a265 
=== Predecessor ===
v287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j242 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
a263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v260 
values: a258 a263 
=== Succesors ===
=== Usages ===
a361 a174 v538 a164 v539 v540 a297 a332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v260 values: a258 a263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v259 v264 
=== Succesors ===
next: v173 
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v259 v264 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
lastLocationAccess: - 
value: a198 
stateAfter: - 
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v540 lastLocationAccess: - value: a198 stateAfter: - #next: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j321 
=== Usages ===
v554 j311 
=== Predecessor ===
v173 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j321  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a297 
index: - 
=== Succesors ===
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
v301 v306 
=== Predecessor ===
a297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j321 
y: j300 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j321 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v302 #falseSuccessor: v303  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a297 
=== Succesors ===
next: v304 
=== Usages ===
v555 j313 j316 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a297 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j321 
y: j305 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j321 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
j311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v307 #falseSuccessor: v308  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j311 
y: j312 
=== Succesors ===
=== Usages ===
j315 v556 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j311 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j313 
y: j314 
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j313 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j311 
y: j315 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j311 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j316 
y: i317 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j316 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j313 
index: j318 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - value: i288 stateAfter: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: i288 stateAfter: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v326 v327 v328 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v326 v327 v328 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
value: a197 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - value: a197 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j350 
=== Usages ===
v557 j343 
=== Predecessor ===
v169 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v335 v339 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j350 
y: j300 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j350 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
j350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v338 
=== Usages ===
v558 j344 j346 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j350 
y: j305 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j350 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j343 
y: j312 
=== Succesors ===
=== Usages ===
j345 v559 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j343 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j344 
y: j314 
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j344 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j343 
y: j345 
=== Succesors ===
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j343 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j346 
y: i317 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j346 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j344 
index: j347 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j344 index: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i288 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i288 stateAfter: - #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v355 v356 v357 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v356 v357 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
value: a164 
stateAfter: - 
=== Succesors ===
next: a361 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - value: a164 stateAfter: - #next: a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j379 
=== Usages ===
v560 j372 
=== Predecessor ===
v165 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
v364 v368 
=== Predecessor ===
a361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j379 
y: j300 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j379 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j372 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a361 
=== Succesors ===
next: v367 
=== Usages ===
v561 j373 j375 
=== Predecessor ===
v366 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a361 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j379 
y: j305 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j379 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
j372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j372 
y: j312 
=== Succesors ===
=== Usages ===
j374 v562 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j372 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j373 
y: j314 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j373 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j372 
y: j374 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j372 y: j374  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j375 
y: i317 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j375 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j373 
index: j376 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - value: i288 stateAfter: - #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j372 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - value: i288 stateAfter: - #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v384 v385 v386 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v385 v386 #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a174 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: a130 
=== Usages ===
v176 ?146 a26 
=== Predecessor ===
v175 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: a130  <|@  <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@508b02bc
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a174 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a174  <|@  <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@358209f6
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?146 ?91 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 24
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a143 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a143  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?91 
values: - 
=== Succesors ===
=== Usages ===
?218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?91 values: -  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a143 
materializedValue: a174 
=== Succesors ===
=== Usages ===
?218 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a143 materializedValue: a174  <|@  <|@
tid ?218 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - 
virtualObjectMappings: ?146 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - virtualObjectMappings: ?146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v176 
stateDuring: ?218 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v176 stateDuring: ?218 #next: v125  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:26) [bci: 66]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a230 
=== Succesors ===
next: j399 
=== Usages ===
j413 
=== Predecessor ===
v12 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a230 #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j400 
=== Usages ===
j413 
=== Predecessor ===
j398 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j401 
=== Usages ===
v571 v572 
=== Predecessor ===
j399 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j401 v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j401 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: j402 
=== Usages ===
j404 v563 a419 v564 v565 v566 v567 v568 v569 v570 
=== Predecessor ===
j400 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v405 
=== Predecessor ===
j401 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j401 
y: j246 
=== Succesors ===
=== Usages ===
v405 v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j401 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j404 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j402 y: j404  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j398 
y: j399 
=== Succesors ===
=== Usages ===
a414 v433 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j398 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v406 #falseSuccessor: v407  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: j413 
=== Succesors ===
next: v415 
=== Usages ===
a421 
=== Predecessor ===
v406 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: j413 #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
a414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: j404 
stateAfter: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: j404 stateAfter: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v564 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v564 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
value: j413 
stateAfter: - 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - value: j413 stateAfter: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: j255 stateAfter: - #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - value: j255 stateAfter: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: j255 stateAfter: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: j255 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - value: j255 stateAfter: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: a419 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - value: j255 stateAfter: - #next: a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j401 
=== Succesors ===
next: v420 
=== Usages ===
a421 
=== Predecessor ===
v439 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j401 #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
a419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v416 
values: a414 a419 
=== Succesors ===
=== Usages ===
a506 a185 v541 a179 v542 v543 a448 a477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v416 values: a414 a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v415 v420 
=== Succesors ===
next: v184 
=== Usages ===
a421 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v420 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: a198 
stateAfter: - 
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: a198 stateAfter: - #next: a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j466 
=== Usages ===
v573 j459 
=== Predecessor ===
v184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a448 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
v451 v455 
=== Predecessor ===
a448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j466 
y: j300 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j466 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
j466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j459 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a448 
=== Succesors ===
next: v454 
=== Usages ===
v574 j460 j462 
=== Predecessor ===
v453 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a448 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j466 
y: j305 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j466 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
j459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v456 #falseSuccessor: v457  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j459 
y: j312 
=== Succesors ===
=== Usages ===
j461 v575 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j459 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j460 
y: j314 
=== Succesors ===
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j460 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j459 
y: j461 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j459 y: j461  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j462 
y: i317 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j462 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j460 
index: j463 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: i288 stateAfter: - #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: i288 stateAfter: - #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v471 v472 v473 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v472 v473 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
value: a197 
stateAfter: - 
=== Succesors ===
next: a477 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - value: a197 stateAfter: - #next: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j495 
=== Usages ===
v576 j488 
=== Predecessor ===
v182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a477 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
v480 v484 
=== Predecessor ===
a477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j495 
y: j300 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j495 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j488 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a477 
=== Succesors ===
next: v483 
=== Usages ===
v577 j489 j491 
=== Predecessor ===
v482 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a477 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j495 
y: j305 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j495 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
j488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j488 
y: j312 
=== Succesors ===
=== Usages ===
j490 v578 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j488 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j489 
y: j314 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j489 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j488 
y: j490 
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j488 y: j490  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j491 
y: i317 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j491 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j489 
index: j492 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j489 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: i288 stateAfter: - #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: i288 stateAfter: - #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v500 v501 v502 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v501 v502 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a421 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
value: a179 
stateAfter: - 
=== Succesors ===
next: a506 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - value: a179 stateAfter: - #next: a506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j524 
=== Usages ===
v579 j517 
=== Predecessor ===
v180 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a506 
index: - 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v509 v513 
=== Predecessor ===
a506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j524 
y: j300 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j524 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v510 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j517 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a506 
=== Succesors ===
next: v512 
=== Usages ===
v580 j518 j520 
=== Predecessor ===
v511 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a506 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j524 
y: j305 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j524 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
j517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j517 
y: j312 
=== Succesors ===
=== Usages ===
j519 v581 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j517 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j518 
y: j314 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j518 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j517 
y: j519 
=== Succesors ===
=== Usages ===
j521 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j517 y: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j520 
y: i317 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j520 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j518 
index: j521 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: i288 stateAfter: - #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - value: i288 stateAfter: - #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v529 v530 v531 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v530 v531 #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: a129 
=== Usages ===
v187 ?142 a26 
=== Predecessor ===
v186 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: a129  <|@  <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@57bdb3c0
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a185 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a185  <|@  <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@4cd8e7e8
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?142 ?90 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 26
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a139 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a139  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: -  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a139 
materializedValue: a185 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a139 materializedValue: a185  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?113 
values: - 
virtualObjectMappings: ?142 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?113 values: - virtualObjectMappings: ?142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v187 
stateDuring: ?219 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
a185 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v187 stateDuring: ?219 #next: v112  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
a129 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v24 
values: a185 a174 
=== Succesors ===
=== Usages ===
?88 v189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v24 values: a185 a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v27 v30 
=== Succesors ===
next: j188 
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v30 #next: j188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
v189 
=== Predecessor ===
v24 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v189  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a26 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?88 
arguments: a26 j188 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
j188 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?88 arguments: a26 j188 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 74]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 77]
rawvalue: def
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@44ce822d
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a15 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a15  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 28
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
bci: 79
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?220 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?220 #next: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 79]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v39 v41 v50 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v41 v50 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 85]
rawvalue: Epilog
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@61a6fefb
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a14 a52 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a52  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 87
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v192 
stateDuring: ?221 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v192 stateDuring: ?221 #next: v59  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 87]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 93]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 96]
rawvalue: else brabch
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5bbf72bc
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a14 a60 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a60  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 33
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 98
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v193 
stateDuring: ?215 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v193 stateDuring: ?215 #next: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v135  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50532984
stamp: void
targetMethod: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>>
=== Inputs ===
arguments: a14 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 34
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<PrintStream.println()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 772
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: - 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
bci: 1
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.newLine
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?216 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?216 #next: v97  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
at ftest50.example_ftest50(ftest50.java:34) [bci: 104]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v69 v71 
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 #next: a136  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@60bc0649
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 37
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?222 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?222 #next: v79  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a137  <|@  <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@363b6d83
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
d <@d|@=== Debug Properties ===
bci: 111
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v196 
stateDuring: ?223 
=== Succesors ===
next: v86 
=== Usages ===
?85 
=== Predecessor ===
v79 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v196 stateDuring: ?223 #next: v86  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:38) [bci: 111]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v205 #falseSuccessor: v206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:38) [bci: 111]
rethrowException: false
sourceFile: ftest50.java
sourceLine: 38
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a137 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:39) [bci: 115]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:39) [bci: 115]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j158 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j158  <|@  <|@
f <@~|@floating>@ <|@
tid j147 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v537 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v537 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j147 
index: - 
=== Succesors ===
=== Usages ===
j158 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j147 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j158 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@36d2ef0e
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v537 
lastLocationAccess: - 
=== Succesors ===
next: j148 
=== Usages ===
v150 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v537 lastLocationAccess: - #next: j148  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j148 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v149 
=== Usages ===
v150 
=== Predecessor ===
j158 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v149  <|@  <|@
f <@~|@floating>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j158 
y: j148 
=== Succesors ===
=== Usages ===
v149 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j158 y: j148  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 v8 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v4 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 
=== Succesors ===
=== Usages ===
v153 a414 a258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v149 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v150 
=== Succesors ===
trueSuccessor: v151 
falseSuccessor: v152 
=== Usages ===
=== Predecessor ===
j148 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v150 #trueSuccessor: v151 #falseSuccessor: v152  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v7 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v7  <|@  <|@
f <@~|@floating>@ <|@
tid a14 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 74]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 v160 v159 v192 v193 v194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:15) [bci: 2]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@499f0c64
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i1 
=== Succesors ===
=== Usages ===
v7 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v7 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:15) [bci: 2]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v4 
=== Succesors ===
trueSuccessor: v6 
falseSuccessor: v5 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v4 #trueSuccessor: v6 #falseSuccessor: v5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:16) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v8 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v8  <|@  <|@
f <@~|@floating>@ <|@
tid a197 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v169 v182 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i288 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v526 v322 v323 v351 v352 v380 v381 v525 v467 v468 v496 v497 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j312 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j313 j344 j373 j460 j489 j518 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j314 <|@
result long[4136|0x1028] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j315 j345 j374 j461 j490 j519 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i317 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j318 j347 j376 j463 j492 j521 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j305 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v306 v339 v368 v455 v484 v513 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j300 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v301 v335 v364 v451 v480 v509 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a198 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v173 v184 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j255 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v435 v282 v283 v284 v285 v286 v287 v436 v437 v439 v438 v434 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j246 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j247 j404 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a230 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j398 j239 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v8 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@1b434daf
keySuccessors: [I@7b6f5b97
keys: [I@4f054d26
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:16) [bci: 6]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v9 v10 v11 v12 v13 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v9 v10 v11 v12 v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v9 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid a42 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 39]
rawvalue: 1
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50164977
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a42 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a42  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 41
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 18
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v132 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
bci: 41
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v159 
stateDuring: ?214 
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v9 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v159 stateDuring: ?214 #next: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:18) [bci: 41]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v50  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v49 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v10 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v131 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v131  <|@  <|@
f <@~|@floating>@ <|@
tid a31 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 50]
rawvalue: 2
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@513948ef
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a31 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a31  <|@  <|@
tid ?217 <|@
d <@d|@=== Debug Properties ===
bci: 52
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 21
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v131 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v131 <|@
d <@d|@=== Debug Properties ===
bci: 52
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v160 
stateDuring: ?217 
=== Succesors ===
next: v38 
=== Usages ===
=== Predecessor ===
v10 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v160 stateDuring: ?217 #next: v38  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:21) [bci: 52]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v41 
=== Usages ===
=== Predecessor ===
v131 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v41  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v11 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:24) [bci: 58]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j239 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j239 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a230 
=== Succesors ===
next: j240 
=== Usages ===
j257 
=== Predecessor ===
v11 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a230 #next: j240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j240 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j241 
=== Usages ===
j257 
=== Predecessor ===
j239 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j241  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j241 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j242 
=== Usages ===
v552 v553 
=== Predecessor ===
j240 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j242  <|@  <|@
f <@~|@floating>@ <|@
tid v552 <|@
result [v12|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j241 
index: - 
=== Succesors ===
=== Usages ===
j242 v251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j242 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
=== Succesors ===
next: j243 
=== Usages ===
j247 v544 a263 v545 v546 v547 v548 v549 v550 v551 
=== Predecessor ===
j241 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - #next: j243  <|@  <|@
f <@~|@floating>@ <|@
tid v553 <|@
result [v12|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j241 
index: - 
=== Succesors ===
=== Usages ===
j243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j241 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j243 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v553 
lastLocationAccess: - 
=== Succesors ===
next: v245 
=== Usages ===
v248 
=== Predecessor ===
j242 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v553 lastLocationAccess: - #next: v245  <|@  <|@
f <@~|@floating>@ <|@
tid j247 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j242 
y: j246 
=== Succesors ===
=== Usages ===
v248 v251 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j242 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j243 
y: j247 
=== Succesors ===
=== Usages ===
v245 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j243 y: j247  <|@  <|@
f <@~|@floating>@ <|@
tid j257 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j239 
y: j240 
=== Succesors ===
=== Usages ===
a258 v281 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j239 y: j240  <|@  <|@
f <@*|@fixed>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v249 
falseSuccessor: v250 
=== Usages ===
=== Predecessor ===
j243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v249 #falseSuccessor: v250  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a258 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a258 <|@
result v17|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: j257 
=== Succesors ===
next: v259 
=== Usages ===
a265 
=== Predecessor ===
v249 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: j257 #next: v259  <|@  <|@
f <@*|@fixed>@ <|@
tid v259 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
a258 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v251 
=== Usages ===
=== Predecessor ===
v245 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v552 
lastLocationAccess: - 
value: j247 
stateAfter: - 
=== Succesors ===
next: v268 
=== Usages ===
=== Predecessor ===
v250 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v552 lastLocationAccess: - value: j247 stateAfter: - #next: v268  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result [v13|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v545 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v251 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v545 #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
result [v13|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v544 
lastLocationAccess: - 
value: j257 
stateAfter: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v268 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v544 lastLocationAccess: - value: j257 stateAfter: - #next: v282  <|@  <|@
f <@~|@floating>@ <|@
tid v546 <|@
result [v13|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v282 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v546 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v283 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v546 lastLocationAccess: - value: j255 stateAfter: - #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
result [v13|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v547 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v284 
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v547 lastLocationAccess: - value: j255 stateAfter: - #next: v284  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
result [v13|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v548 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v285 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v548 lastLocationAccess: - value: j255 stateAfter: - #next: v285  <|@  <|@
f <@~|@floating>@ <|@
tid v549 <|@
result [v13|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v549 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v284 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v549 lastLocationAccess: - value: j255 stateAfter: - #next: v286  <|@  <|@
f <@~|@floating>@ <|@
tid v550 <|@
result [v13|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v550 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v550 lastLocationAccess: - value: j255 stateAfter: - #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid v551 <|@
result [v13|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j242 
index: - 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j242 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v551 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: a263 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v551 lastLocationAccess: - value: j255 stateAfter: - #next: a263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a263 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j242 
=== Succesors ===
next: v264 
=== Usages ===
a265 
=== Predecessor ===
v287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j242 #next: v264  <|@  <|@
f <@*|@fixed>@ <|@
tid v264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v260 
=== Predecessor ===
a263 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a265 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v260 
values: a258 a263 
=== Succesors ===
=== Usages ===
a361 a174 v538 a164 v539 v540 a297 a332 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v260 values: a258 a263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v260 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v259 v264 
=== Succesors ===
next: v173 
=== Usages ===
a265 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v259 v264 #next: v173  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
result [v19|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v173 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v540 
lastLocationAccess: - 
value: a198 
stateAfter: - 
=== Succesors ===
next: a297 
=== Usages ===
=== Predecessor ===
v260 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v540 lastLocationAccess: - value: a198 stateAfter: - #next: a297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a297 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j321 
=== Usages ===
v554 j311 
=== Predecessor ===
v173 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j321  <|@  <|@
f <@~|@floating>@ <|@
tid v554 <|@
result [v19|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a297 
index: - 
=== Succesors ===
=== Usages ===
j321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a297 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j321 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v554 
lastLocationAccess: - 
=== Succesors ===
next: v299 
=== Usages ===
v301 v306 
=== Predecessor ===
a297 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v554 lastLocationAccess: - #next: v299  <|@  <|@
f <@~|@floating>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j321 
y: j300 
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j321 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v301 
=== Succesors ===
trueSuccessor: v302 
falseSuccessor: v303 
=== Usages ===
=== Predecessor ===
j321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v301 #trueSuccessor: v302 #falseSuccessor: v303  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v326 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v326  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v302 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j311 
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j311  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j311 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a297 
=== Succesors ===
next: v304 
=== Usages ===
v555 j313 j316 
=== Predecessor ===
v303 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a297 #next: v304  <|@  <|@
f <@~|@floating>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j321 
y: j305 
=== Succesors ===
=== Usages ===
v304 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j321 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v306 
=== Succesors ===
trueSuccessor: v307 
falseSuccessor: v308 
=== Usages ===
=== Predecessor ===
j311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v306 #trueSuccessor: v307 #falseSuccessor: v308  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid j313 <|@
result v22|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j311 
y: j312 
=== Succesors ===
=== Usages ===
j315 v556 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j311 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j315 <|@
result v23|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j313 
y: j314 
=== Succesors ===
=== Usages ===
j316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j313 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j316 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j311 
y: j315 
=== Succesors ===
=== Usages ===
j318 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j311 y: j315  <|@  <|@
f <@~|@floating>@ <|@
tid j318 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j316 
y: i317 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j316 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v556 <|@
result [v22|QWORD + v25|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j313 
index: j318 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j313 index: j318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v556 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v328 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v556 lastLocationAccess: - value: i288 stateAfter: - #next: v328  <|@  <|@
f <@*|@fixed>@ <|@
tid v328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v308 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v323 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v323  <|@  <|@
f <@~|@floating>@ <|@
tid v555 <|@
result [v21|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j311 
index: - 
=== Succesors ===
=== Usages ===
v323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j311 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v555 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v327 
=== Usages ===
=== Predecessor ===
v308 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v555 lastLocationAccess: - value: i288 stateAfter: - #next: v327  <|@  <|@
f <@*|@fixed>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v325 
=== Predecessor ===
v323 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v326 v327 v328 
=== Succesors ===
next: v169 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v326 v327 v328 #next: v169  <|@  <|@
f <@~|@floating>@ <|@
tid v539 <|@
result [v19|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v169 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v539 
lastLocationAccess: - 
value: a197 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v325 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v539 lastLocationAccess: - value: a197 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j350 
=== Usages ===
v557 j343 
=== Predecessor ===
v169 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j350  <|@  <|@
f <@~|@floating>@ <|@
tid v557 <|@
result [v19|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j350 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v557 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v335 v339 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v557 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j350 
y: j300 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j350 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v335 
=== Succesors ===
trueSuccessor: v336 
falseSuccessor: v337 
=== Usages ===
=== Predecessor ===
j350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v335 #trueSuccessor: v336 #falseSuccessor: v337  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v355 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v355  <|@  <|@
f <@*|@fixed>@ <|@
tid v355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j343 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j343 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v338 
=== Usages ===
v558 j344 j346 
=== Predecessor ===
v337 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v338  <|@  <|@
f <@~|@floating>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j350 
y: j305 
=== Succesors ===
=== Usages ===
v338 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j350 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v339 
=== Succesors ===
trueSuccessor: v340 
falseSuccessor: v341 
=== Usages ===
=== Predecessor ===
j343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v339 #trueSuccessor: v340 #falseSuccessor: v341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v351 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v351  <|@  <|@
f <@~|@floating>@ <|@
tid j344 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j343 
y: j312 
=== Succesors ===
=== Usages ===
j345 v559 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j343 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j345 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j344 
y: j314 
=== Succesors ===
=== Usages ===
j346 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j344 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j346 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j343 
y: j345 
=== Succesors ===
=== Usages ===
j347 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j343 y: j345  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j346 
y: i317 
=== Succesors ===
=== Usages ===
v559 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j346 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v559 <|@
result [v28|QWORD + v31|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j344 
index: j347 
=== Succesors ===
=== Usages ===
v351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j344 index: j347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v559 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v559 lastLocationAccess: - value: i288 stateAfter: - #next: v357  <|@  <|@
f <@*|@fixed>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v352 
=== Usages ===
=== Predecessor ===
v338 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v352  <|@  <|@
f <@~|@floating>@ <|@
tid v558 <|@
result [v27|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j343 
index: - 
=== Succesors ===
=== Usages ===
v352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j343 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v558 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v356 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v558 lastLocationAccess: - value: i288 stateAfter: - #next: v356  <|@  <|@
f <@*|@fixed>@ <|@
tid v356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v354 
=== Predecessor ===
v352 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v355 v356 v357 
=== Succesors ===
next: v165 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v355 v356 v357 #next: v165  <|@  <|@
f <@~|@floating>@ <|@
tid v538 <|@
result [v19|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a265 
index: - 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a265 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a164 <|@
result v32|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a265 
=== Succesors ===
=== Usages ===
v165 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v165 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v538 
lastLocationAccess: - 
value: a164 
stateAfter: - 
=== Succesors ===
next: a361 
=== Usages ===
=== Predecessor ===
v354 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v538 lastLocationAccess: - value: a164 stateAfter: - #next: a361  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a361 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: j379 
=== Usages ===
v560 j372 
=== Predecessor ===
v165 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: j379  <|@  <|@
f <@~|@floating>@ <|@
tid v560 <|@
result [v19|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a361 
index: - 
=== Succesors ===
=== Usages ===
j379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a361 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j379 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v560 
lastLocationAccess: - 
=== Succesors ===
next: v363 
=== Usages ===
v364 v368 
=== Predecessor ===
a361 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v560 lastLocationAccess: - #next: v363  <|@  <|@
f <@~|@floating>@ <|@
tid v364 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j379 
y: j300 
=== Succesors ===
=== Usages ===
v363 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j379 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v364 
=== Succesors ===
trueSuccessor: v365 
falseSuccessor: v366 
=== Usages ===
=== Predecessor ===
j379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v364 #trueSuccessor: v365 #falseSuccessor: v366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v384 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v384  <|@  <|@
f <@*|@fixed>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v365 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j372 
=== Usages ===
=== Predecessor ===
v363 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j372 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a361 
=== Succesors ===
next: v367 
=== Usages ===
v561 j373 j375 
=== Predecessor ===
v366 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a361 #next: v367  <|@  <|@
f <@~|@floating>@ <|@
tid v368 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j379 
y: j305 
=== Succesors ===
=== Usages ===
v367 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j379 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v368 
=== Succesors ===
trueSuccessor: v369 
falseSuccessor: v370 
=== Usages ===
=== Predecessor ===
j372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v368 #trueSuccessor: v369 #falseSuccessor: v370  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v380 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v380  <|@  <|@
f <@~|@floating>@ <|@
tid j373 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j372 
y: j312 
=== Succesors ===
=== Usages ===
j374 v562 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j372 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j374 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j373 
y: j314 
=== Succesors ===
=== Usages ===
j375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j373 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j375 <|@
result v37|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j372 
y: j374 
=== Succesors ===
=== Usages ===
j376 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j372 y: j374  <|@  <|@
f <@~|@floating>@ <|@
tid j376 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j375 
y: i317 
=== Succesors ===
=== Usages ===
v562 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j375 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
result [v35|QWORD + v38|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j373 
index: j376 
=== Succesors ===
=== Usages ===
v380 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j373 index: j376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v562 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v562 lastLocationAccess: - value: i288 stateAfter: - #next: v386  <|@  <|@
f <@*|@fixed>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v380 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v381 
=== Usages ===
=== Predecessor ===
v367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v381  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result [v34|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j372 
index: - 
=== Succesors ===
=== Usages ===
v381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j372 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v561 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v385 
=== Usages ===
=== Predecessor ===
v370 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v561 lastLocationAccess: - value: i288 stateAfter: - #next: v385  <|@  <|@
f <@*|@fixed>@ <|@
tid v385 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
v381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v384 v385 v386 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v384 v385 v386 #next: v175  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a174 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a174 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a265 
=== Succesors ===
next: a130 
=== Usages ===
v176 ?146 a26 
=== Predecessor ===
v175 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a265 #next: a130  <|@  <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@508b02bc
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a174 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a174  <|@  <|@
tid a143 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@358209f6
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?146 ?91 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?91 <|@
d <@d|@=== Debug Properties ===
bci: 62
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 24
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a143 
=== Succesors ===
=== Usages ===
?126 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a143  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?91 
values: - 
=== Succesors ===
=== Usages ===
?218 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?91 values: -  <|@  <|@
tid ?146 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a143 
materializedValue: a174 
=== Succesors ===
=== Usages ===
?218 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a143 materializedValue: a174  <|@  <|@
tid ?218 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?126 
values: - 
virtualObjectMappings: ?146 
=== Succesors ===
=== Usages ===
a130 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?126 values: - virtualObjectMappings: ?146  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a130 <|@
result v39|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v176 
stateDuring: ?218 
=== Succesors ===
next: v125 
=== Usages ===
=== Predecessor ===
a174 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v176 stateDuring: ?218 #next: v125  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v125 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
a130 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v125 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:26) [bci: 66]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j398 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j398 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a230 
=== Succesors ===
next: j399 
=== Usages ===
j413 
=== Predecessor ===
v12 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a230 #next: j399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j399 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j400 
=== Usages ===
j413 
=== Predecessor ===
j398 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j400  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j400 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j401 
=== Usages ===
v571 v572 
=== Predecessor ===
j399 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j401  <|@  <|@
f <@~|@floating>@ <|@
tid v571 <|@
result [v42|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j401 v408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j401 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
=== Succesors ===
next: j402 
=== Usages ===
j404 v563 a419 v564 v565 v566 v567 v568 v569 v570 
=== Predecessor ===
j400 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - #next: j402  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [v42|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j400 
index: - 
=== Succesors ===
=== Usages ===
j402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j400 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j402 <|@
result v44|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: v403 
=== Usages ===
v405 
=== Predecessor ===
j401 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid j404 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j401 
y: j246 
=== Succesors ===
=== Usages ===
v405 v408 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j401 y: j246  <|@  <|@
f <@~|@floating>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@4ed6d1cc
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j402 
y: j404 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j402 y: j404  <|@  <|@
f <@~|@floating>@ <|@
tid j413 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j398 
y: j399 
=== Succesors ===
=== Usages ===
a414 v433 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j398 y: j399  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v405 
=== Succesors ===
trueSuccessor: v406 
falseSuccessor: v407 
=== Usages ===
=== Predecessor ===
j402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v405 #trueSuccessor: v406 #falseSuccessor: v407  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a414 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a414 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
arguments: j413 
=== Succesors ===
next: v415 
=== Usages ===
a421 
=== Predecessor ===
v406 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 arguments: j413 #next: v415  <|@  <|@
f <@*|@fixed>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
a414 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v408 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v571 
lastLocationAccess: - 
value: j404 
stateAfter: - 
=== Succesors ===
next: v424 
=== Usages ===
=== Predecessor ===
v407 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v571 lastLocationAccess: - value: j404 stateAfter: - #next: v424  <|@  <|@
f <@~|@floating>@ <|@
tid v564 <|@
result [v43|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v564 
=== Succesors ===
next: v433 
=== Usages ===
=== Predecessor ===
v408 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v564 #next: v433  <|@  <|@
f <@~|@floating>@ <|@
tid v563 <|@
result [v43|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v563 
lastLocationAccess: - 
value: j413 
stateAfter: - 
=== Succesors ===
next: v434 
=== Usages ===
=== Predecessor ===
v424 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v563 lastLocationAccess: - value: j413 stateAfter: - #next: v434  <|@  <|@
f <@~|@floating>@ <|@
tid v565 <|@
result [v43|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v565 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v435 
=== Usages ===
=== Predecessor ===
v433 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v565 lastLocationAccess: - value: j255 stateAfter: - #next: v435  <|@  <|@
f <@~|@floating>@ <|@
tid v566 <|@
result [v43|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v566 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v436 
=== Usages ===
=== Predecessor ===
v434 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v566 lastLocationAccess: - value: j255 stateAfter: - #next: v436  <|@  <|@
f <@~|@floating>@ <|@
tid v567 <|@
result [v43|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v567 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v437 
=== Usages ===
=== Predecessor ===
v435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v567 lastLocationAccess: - value: j255 stateAfter: - #next: v437  <|@  <|@
f <@~|@floating>@ <|@
tid v568 <|@
result [v43|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v568 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v438 
=== Usages ===
=== Predecessor ===
v436 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v568 lastLocationAccess: - value: j255 stateAfter: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid v569 <|@
result [v43|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v569 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: v439 
=== Usages ===
=== Predecessor ===
v437 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v569 lastLocationAccess: - value: j255 stateAfter: - #next: v439  <|@  <|@
f <@~|@floating>@ <|@
tid v570 <|@
result [v43|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j401 
index: - 
=== Succesors ===
=== Usages ===
v439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j401 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v570 
lastLocationAccess: - 
value: j255 
stateAfter: - 
=== Succesors ===
next: a419 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v570 lastLocationAccess: - value: j255 stateAfter: - #next: a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a419 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j401 
=== Succesors ===
next: v420 
=== Usages ===
a421 
=== Predecessor ===
v439 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j401 #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
a419 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a421 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v416 
values: a414 a419 
=== Succesors ===
=== Usages ===
a506 a185 v541 a179 v542 v543 a448 a477 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v416 values: a414 a419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v415 v420 
=== Succesors ===
next: v184 
=== Usages ===
a421 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v415 v420 #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid v543 <|@
result [v49|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v543 
lastLocationAccess: - 
value: a198 
stateAfter: - 
=== Succesors ===
next: a448 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v543 lastLocationAccess: - value: a198 stateAfter: - #next: a448  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a448 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j466 
=== Usages ===
v573 j459 
=== Predecessor ===
v184 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j466  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v49|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a448 
index: - 
=== Succesors ===
=== Usages ===
j466 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a448 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j466 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
=== Succesors ===
next: v450 
=== Usages ===
v451 v455 
=== Predecessor ===
a448 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - #next: v450  <|@  <|@
f <@~|@floating>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j466 
y: j300 
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j466 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v451 
=== Succesors ===
trueSuccessor: v452 
falseSuccessor: v453 
=== Usages ===
=== Predecessor ===
j466 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v451 #trueSuccessor: v452 #falseSuccessor: v453  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v6|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v471  <|@  <|@
f <@*|@fixed>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v452 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v453 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j459 
=== Usages ===
=== Predecessor ===
v450 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j459  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j459 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a448 
=== Succesors ===
next: v454 
=== Usages ===
v574 j460 j462 
=== Predecessor ===
v453 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a448 #next: v454  <|@  <|@
f <@~|@floating>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j466 
y: j305 
=== Succesors ===
=== Usages ===
v454 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j466 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v455 
=== Succesors ===
trueSuccessor: v456 
falseSuccessor: v457 
=== Usages ===
=== Predecessor ===
j459 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v455 #trueSuccessor: v456 #falseSuccessor: v457  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v467 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v467  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j459 
y: j312 
=== Succesors ===
=== Usages ===
j461 v575 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j459 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j461 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j460 
y: j314 
=== Succesors ===
=== Usages ===
j462 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j460 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j462 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j459 
y: j461 
=== Succesors ===
=== Usages ===
j463 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j459 y: j461  <|@  <|@
f <@~|@floating>@ <|@
tid j463 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j462 
y: i317 
=== Succesors ===
=== Usages ===
v575 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j462 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v52|QWORD + v55|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j460 
index: j463 
=== Succesors ===
=== Usages ===
v467 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: j463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v467 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v456 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: i288 stateAfter: - #next: v473  <|@  <|@
f <@*|@fixed>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v467 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v454 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v51|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j459 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j459 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v457 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: i288 stateAfter: - #next: v472  <|@  <|@
f <@*|@fixed>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
v468 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v471 v472 v473 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v471 v472 v473 #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid v542 <|@
result [v49|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v542 
lastLocationAccess: - 
value: a197 
stateAfter: - 
=== Succesors ===
next: a477 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v542 lastLocationAccess: - value: a197 stateAfter: - #next: a477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a477 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j495 
=== Usages ===
v576 j488 
=== Predecessor ===
v182 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j495  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v49|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a477 
index: - 
=== Succesors ===
=== Usages ===
j495 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a477 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j495 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
=== Succesors ===
next: v479 
=== Usages ===
v480 v484 
=== Predecessor ===
a477 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - #next: v479  <|@  <|@
f <@~|@floating>@ <|@
tid v480 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j495 
y: j300 
=== Succesors ===
=== Usages ===
v479 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j495 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v479 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v480 
=== Succesors ===
trueSuccessor: v481 
falseSuccessor: v482 
=== Usages ===
=== Predecessor ===
j495 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v480 #trueSuccessor: v481 #falseSuccessor: v482  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v5|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j488 
=== Usages ===
=== Predecessor ===
v479 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j488  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j488 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a477 
=== Succesors ===
next: v483 
=== Usages ===
v577 j489 j491 
=== Predecessor ===
v482 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a477 #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid v484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j495 
y: j305 
=== Succesors ===
=== Usages ===
v483 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j495 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v484 
=== Succesors ===
trueSuccessor: v485 
falseSuccessor: v486 
=== Usages ===
=== Predecessor ===
j488 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v484 #trueSuccessor: v485 #falseSuccessor: v486  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid j489 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j488 
y: j312 
=== Succesors ===
=== Usages ===
j490 v578 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j488 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j490 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j489 
y: j314 
=== Succesors ===
=== Usages ===
j491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j489 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j491 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j488 
y: j490 
=== Succesors ===
=== Usages ===
j492 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j488 y: j490  <|@  <|@
f <@~|@floating>@ <|@
tid j492 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j491 
y: i317 
=== Succesors ===
=== Usages ===
v578 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j491 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v58|QWORD + v61|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j489 
index: j492 
=== Succesors ===
=== Usages ===
v496 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j489 index: j492  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: i288 stateAfter: - #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v496 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v497 
=== Usages ===
=== Predecessor ===
v483 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v497  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v57|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j488 
index: - 
=== Succesors ===
=== Usages ===
v497 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j488 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v497 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v501 
=== Usages ===
=== Predecessor ===
v486 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: i288 stateAfter: - #next: v501  <|@  <|@
f <@*|@fixed>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v499 
=== Predecessor ===
v497 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v499 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v500 v501 v502 
=== Succesors ===
next: v180 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v500 v501 v502 #next: v180  <|@  <|@
f <@~|@floating>@ <|@
tid v541 <|@
result [v49|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a421 
index: - 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a421 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a179 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a421 
=== Succesors ===
=== Usages ===
v180 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v541 
lastLocationAccess: - 
value: a179 
stateAfter: - 
=== Succesors ===
next: a506 
=== Usages ===
=== Predecessor ===
v499 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v541 lastLocationAccess: - value: a179 stateAfter: - #next: a506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a506 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: j524 
=== Usages ===
v579 j517 
=== Predecessor ===
v180 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: j524  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v49|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a506 
index: - 
=== Succesors ===
=== Usages ===
j524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a506 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j524 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
=== Succesors ===
next: v508 
=== Usages ===
v509 v513 
=== Predecessor ===
a506 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - #next: v508  <|@  <|@
f <@~|@floating>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j524 
y: j300 
=== Succesors ===
=== Usages ===
v508 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j524 y: j300  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v509 
=== Succesors ===
trueSuccessor: v510 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
j524 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v509 #trueSuccessor: v510 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v510 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v510 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j517 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j517  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j517 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a506 
=== Succesors ===
next: v512 
=== Usages ===
v580 j518 j520 
=== Predecessor ===
v511 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a506 #next: v512  <|@  <|@
f <@~|@floating>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j524 
y: j305 
=== Succesors ===
=== Usages ===
v512 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j524 y: j305  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v513 
=== Succesors ===
trueSuccessor: v514 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
j517 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v513 #trueSuccessor: v514 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v525 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v525  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j517 
y: j312 
=== Succesors ===
=== Usages ===
j519 v581 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j517 y: j312  <|@  <|@
f <@~|@floating>@ <|@
tid j519 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j518 
y: j314 
=== Succesors ===
=== Usages ===
j520 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j518 y: j314  <|@  <|@
f <@~|@floating>@ <|@
tid j520 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j517 
y: j519 
=== Succesors ===
=== Usages ===
j521 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j517 y: j519  <|@  <|@
f <@~|@floating>@ <|@
tid j521 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j520 
y: i317 
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j520 y: i317  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v65|QWORD + v68|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j518 
index: j521 
=== Succesors ===
=== Usages ===
v525 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j518 index: j521  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: i288 stateAfter: - #next: v531  <|@  <|@
f <@*|@fixed>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v525 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v526 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v526  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v64|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j517 
index: - 
=== Succesors ===
=== Usages ===
v526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v580 
lastLocationAccess: - 
value: i288 
stateAfter: - 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
v515 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v580 lastLocationAccess: - value: i288 stateAfter: - #next: v530  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
v526 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v529 v530 v531 
=== Succesors ===
next: v186 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v529 v530 v531 #next: v186  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a185 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a185 <|@
result v49|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a421 
=== Succesors ===
next: a129 
=== Usages ===
v187 ?142 a26 
=== Predecessor ===
v186 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a421 #next: a129  <|@  <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@57bdb3c0
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a185 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a185  <|@  <|@
tid a139 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@4cd8e7e8
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?142 ?90 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?90 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 26
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a139 
=== Succesors ===
=== Usages ===
?113 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a139  <|@  <|@
tid ?113 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?90 
values: - 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?90 values: -  <|@  <|@
tid ?142 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a139 
materializedValue: a185 
=== Succesors ===
=== Usages ===
?219 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a139 materializedValue: a185  <|@  <|@
tid ?219 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?113 
values: - 
virtualObjectMappings: ?142 
=== Succesors ===
=== Usages ===
a129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?113 values: - virtualObjectMappings: ?142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a129 <|@
result v69|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v187 
stateDuring: ?219 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
a185 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v187 stateDuring: ?219 #next: v112  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
a129 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
v112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a26 <|@
result v70|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v24 
values: a185 a174 
=== Succesors ===
=== Usages ===
?88 v189 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v24 values: a185 a174  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v27 v30 
=== Succesors ===
next: j188 
=== Usages ===
a26 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v30 #next: j188  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v189 
=== Usages ===
v189 
=== Predecessor ===
v24 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v189  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a26 
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a26  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?88 
arguments: a26 j188 
=== Succesors ===
next: v190 
=== Usages ===
=== Predecessor ===
j188 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?88 arguments: a26 j188 #next: v190  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest50.example_ftest50(int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 74]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v128 
=== Usages ===
=== Predecessor ===
v8 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v128  <|@  <|@
f <@~|@floating>@ <|@
tid a15 <|@
result v72|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 77]
rawvalue: def
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@44ce822d
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a14 a15 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a15  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 79
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 28
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
bci: 79
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?220 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?220 #next: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:28) [bci: 79]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v39 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v39  <|@  <|@
f <@*|@fixed>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
v21 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 82]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v39 v41 v50 
=== Succesors ===
next: v133 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v39 v41 v50 #next: v133  <|@  <|@
f <@~|@floating>@ <|@
tid a52 <|@
result v73|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 85]
rawvalue: Epilog
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@61a6fefb
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a14 a52 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a52  <|@  <|@
tid ?221 <|@
d <@d|@=== Debug Properties ===
bci: 87
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 31
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v133 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
bci: 87
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v192 
stateDuring: ?221 
=== Succesors ===
next: v59 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v192 stateDuring: ?221 #next: v59  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:31) [bci: 87]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v133 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v59 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 93]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v134 
=== Usages ===
=== Predecessor ===
v7 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v134  <|@  <|@
f <@~|@floating>@ <|@
tid a60 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 96]
rawvalue: else brabch
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v193 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@5bbf72bc
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a14 a60 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14 a60  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 98
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 33
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v134 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
bci: 98
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v193 
stateDuring: ?215 
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v193 stateDuring: ?215 #next: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:33) [bci: 98]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v135 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v135  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@50532984
stamp: void
targetMethod: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>>
=== Inputs ===
arguments: a14 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a14  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 104
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 34
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
?216 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
tid ?216 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<PrintStream.println()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: PrintStream.java
sourceLine: 772
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: - 
=== Succesors ===
=== Usages ===
v135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
bci: 1
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.newLine
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?216 
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?216 #next: v97  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
at ftest50.example_ftest50(ftest50.java:34) [bci: 104]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v135 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v97 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v69 v71 
=== Succesors ===
next: a136 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 #next: a136  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@60bc0649
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?222 <|@
d <@d|@=== Debug Properties ===
bci: 107
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 37
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a136 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a136 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?222 
=== Succesors ===
next: v79 
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?222 #next: v79  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v79 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:37) [bci: 107]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a137 
=== Usages ===
=== Predecessor ===
a136 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: a137  <|@  <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@363b6d83
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?223 <|@
d <@d|@=== Debug Properties ===
bci: 111
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest50.java
sourceLine: 38
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a137 <|@
result v76|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 111
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v196 
stateDuring: ?223 
=== Succesors ===
next: v86 
=== Usages ===
?85 
=== Predecessor ===
v79 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v196 stateDuring: ?223 #next: v86  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:38) [bci: 111]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v203 
=== Usages ===
=== Predecessor ===
a137 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v203  <|@  <|@
f <@~|@floating>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v203 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v203 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v204 
=== Succesors ===
trueSuccessor: v205 
falseSuccessor: v206 
=== Usages ===
=== Predecessor ===
v86 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v204 #trueSuccessor: v205 #falseSuccessor: v206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v205 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v207 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v207  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 114
code: ResolvedJavaMethodBytecode<ftest50.example_ftest50(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:38) [bci: 111]
rethrowException: false
sourceFile: ftest50.java
sourceLine: 38
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a137 
=== Succesors ===
=== Usages ===
v207 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v207 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
=== Succesors ===
next: v213 
=== Usages ===
=== Predecessor ===
v205 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 #next: v213  <|@  <|@
f <@*|@fixed>@ <|@
tid v213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:39) [bci: 115]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v207 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v206 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v212 
=== Usages ===
=== Predecessor ===
v203 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v212  <|@  <|@
f <@*|@fixed>@ <|@
tid v212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest50.example_ftest50(ftest50.java:39) [bci: 115]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v206 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v153 
=== Usages ===
=== Predecessor ===
v149 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v153  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@66289159
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?3 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v152 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?3 #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v153 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v79|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v79|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v79|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|QWORD, y: v2|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v74|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr   -1  <|@ instruction v75|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr   -1  <|@ instruction v76|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v72|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v73|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = MOVE v81|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = MOV [v42|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v44|QWORD = MOV [v42|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = LEA [v43|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = SUB (x: v40|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v45|QWORD, y: v44|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD + 24], y: v45|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v43|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v43|QWORD], y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v43|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = MOVE v43|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD[.]] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v49|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 32], y: v79|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 24], y: v77|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = COMPRESSPOINTER (input: v49|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v49|QWORD[.] + 16], y: v62|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = MOV [v49|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: v49|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr   -1  <|@ instruction v69|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|QWORD[.]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr   -1  <|@ instruction [v70|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v70|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v71|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: v70|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = MOVE v82|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV [v12|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV [v12|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = LEA [v13|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = SUB (x: v10|QWORD, ~y: v11|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v15|QWORD, y: v14|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v12|QWORD + 24], y: v15|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v13|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v13|QWORD], y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v13|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = MOVE v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v18|QWORD[.]] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [v19|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 32], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 24], y: v78|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD[.] = COMPRESSPOINTER (input: v19|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + 16], y: v32|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = MOV [v19|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: v19|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr   -1  <|@ instruction v39|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD[.]] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v50|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = AND v51|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = LEA [v52|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = SUB (x: v51|QWORD, ~y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = SHR v54|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v52|QWORD + v55|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v56|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = AND v57|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SUB (x: v57|QWORD, ~y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = SHR v60|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v58|QWORD + v61|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVE v49|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v63|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = AND v64|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = LEA [v65|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = SUB (x: v64|QWORD, ~y: v66|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = SHR v67|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v65|QWORD + v68|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v33|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = AND v34|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = LEA [v35|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v37|QWORD = SUB (x: v34|QWORD, ~y: v36|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = SHR v37|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v35|QWORD + v38|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v20|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|QWORD = AND v21|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD = LEA [v22|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = SUB (x: v21|QWORD, ~y: v23|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = SHR v24|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v22|QWORD + v25|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = MOVE v19|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v26|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = AND v27|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = LEA [v28|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SUB (x: v27|QWORD, ~y: v29|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = SHR v30|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v28|QWORD + v31|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v51|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v34|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v21|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v64|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v16|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v17|QWORD[.]] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v46|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v47|QWORD[.]] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: v76|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 114[[120, 122[[462, 464[[482, 484[[508, 510[[518, 520[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v74|q [0, 4[[24, 27[[34, 35[[52, 55[[68, 71[[84, 87[[100, 103[[112, 113[[120, 121[[462, 463[[482, 483[[498, 500[[508, 509[[518, 519[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[22, 27[[32, 35[[50, 55[[66, 71[[82, 87[[98, 103[[112, 113[[120, 121[[460, 463[[480, 483[[496, 500[[506, 509[[516, 519[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 18[[42, 46[[136, 156[[194, 214[[504, 509[[514, 519[[530, 533[2 MustHaveRegister 16 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rsi|- [4, 18[[42, 46[[136, 156[[194, 214[[504, 509[[514, 519[[530, 533[4 MustHaveRegister 16 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [14, 32[[42, 98[14 MustHaveRegister 22 ShouldHaveRegister 32 ShouldHaveRegister 50 ShouldHaveRegister 66 ShouldHaveRegister 82 ShouldHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q -1 [80, 84[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v82|q [198, 210[198 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q r14|q [200, 211[200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q r15|q [202, 216[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [204, 234[204 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [206, 212[206 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q -1 [208, 216[208 MustHaveRegister 212 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v10|q [210, 220[[514, 516[210 MustHaveRegister 220 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q rax|q [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q v13|q [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q v18|q [238, 252[[272, 292[[332, 372[[412, 452[[472, 491[242 MustHaveRegister 244 MustHaveRegister 274 ShouldHaveRegister 342 MustHaveRegister 344 MustHaveRegister 354 ShouldHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister 480 ShouldHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [244, 248[[272, 276[244 MustHaveRegister 246 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v19|q [274, 284[[332, 334[274 MustHaveRegister 280 MustHaveRegister 284 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q v21|q [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q -1 [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v21|q [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q v24|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q -1 [344, 348[[352, 356[344 MustHaveRegister 346 ShouldHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v19|q [354, 364[[412, 414[354 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q v27|q [360, 368[360 MustHaveRegister 362 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q -1 [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v27|q [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q v30|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v19|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q -1 [424, 428[[432, 436[424 MustHaveRegister 426 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q v19|q [434, 444[[472, 474[434 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v34|q [440, 448[440 MustHaveRegister 442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q -1 [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v34|q [444, 446[444 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q v37|q [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q rax|q [484, 485[484 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v81|q [140, 152[140 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q r14|q [142, 153[142 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q r15|q [144, 158[144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q -1 [146, 176[146 MustHaveRegister 150 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q -1 [148, 154[148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q -1 [150, 158[150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q v40|q [152, 162[[504, 506[152 MustHaveRegister 162 MustHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q rax|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q v43|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q v48|q [180, 194[[252, 272[[292, 332[[372, 412[[452, 471[184 MustHaveRegister 186 MustHaveRegister 254 ShouldHaveRegister 302 MustHaveRegister 304 MustHaveRegister 314 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 394 ShouldHaveRegister 460 ShouldHaveRegister 470 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [186, 190[[252, 256[186 MustHaveRegister 188 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v49|q [254, 264[[292, 294[254 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q v51|q [260, 268[260 MustHaveRegister 262 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q -1 [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v51|q [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v54|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q -1 [304, 308[[312, 316[304 MustHaveRegister 306 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v49|q [314, 324[[372, 374[314 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v57|q [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [322, 325[322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v57|q [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q v60|q [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v49|q [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q -1 [384, 388[[392, 396[384 MustHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v49|q [394, 404[[452, 454[394 MustHaveRegister 400 MustHaveRegister 404 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v64|q [400, 408[400 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q -1 [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v64|q [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q v67|q [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q rax|q [464, 465[464 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v49|q [492, 501[496 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [494, 498[494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q -1 [48, 52[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [96, 100[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [20, 24[20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q rax|q [114, 115[114 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q rax|q [122, 132[[524, 527[122 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[v78|q]" v78|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 114[[120, 122[[462, 464[[482, 484[[508, 510[[518, 520[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v74|q [0, 4[[24, 27[[34, 35[[52, 55[[68, 71[[84, 87[[100, 103[[112, 113[[120, 121[[462, 463[[482, 483[[498, 500[[508, 509[[518, 519[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[22, 27[[32, 35[[50, 55[[66, 71[[82, 87[[98, 103[[112, 113[[120, 121[[460, 463[[480, 483[[496, 500[[506, 509[[516, 519[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 18[[42, 46[[136, 156[[194, 214[2 MustHaveRegister 16 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 18[[42, 46[[136, 156[[194, 214[4 MustHaveRegister 16 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 25[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [80, 84[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v82|q [198, 210[198 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q r14|q [200, 211[200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q r15|q [202, 216[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [204, 234[204 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q -1 [206, 212[206 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r8|q]" v15|q -1 [208, 216[208 MustHaveRegister 212 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v10|q [210, 220[[514, 516[210 MustHaveRegister 220 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v13|q [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [238, 252[[272, 292[[332, 372[[412, 452[[472, 481[242 MustHaveRegister 244 MustHaveRegister 274 ShouldHaveRegister 342 MustHaveRegister 344 MustHaveRegister 354 ShouldHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister 480 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [244, 248[[272, 276[244 MustHaveRegister 246 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v19|q [274, 284[[332, 334[274 MustHaveRegister 280 MustHaveRegister 284 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v21|q [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v21|q [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [344, 348[[352, 356[344 MustHaveRegister 346 ShouldHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v19|q [354, 364[[412, 414[354 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q v27|q [360, 368[360 MustHaveRegister 362 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v27|q [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q v30|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q v19|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q -1 [424, 428[[432, 436[424 MustHaveRegister 426 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v19|q [434, 444[[472, 474[434 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v34|q [440, 448[440 MustHaveRegister 442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v34|q [444, 446[444 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v37|q [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [484, 485[484 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v81|q [140, 152[140 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q r14|q [142, 153[142 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q r15|q [144, 158[144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [146, 176[146 MustHaveRegister 150 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbp|q]" v44|q -1 [148, 154[148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [150, 158[150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|q [152, 162[[504, 506[152 MustHaveRegister 162 MustHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v48|q [180, 194[[252, 272[[292, 332[[372, 412[[452, 461[184 MustHaveRegister 186 MustHaveRegister 254 ShouldHaveRegister 302 MustHaveRegister 304 MustHaveRegister 314 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 394 ShouldHaveRegister 460 ShouldHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q -1 [186, 190[[252, 256[186 MustHaveRegister 188 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v49|q [254, 264[[292, 294[254 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v51|q [260, 268[260 MustHaveRegister 262 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rcx|q]" v53|q -1 [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v51|q [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q v54|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [304, 308[[312, 316[304 MustHaveRegister 306 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v49|q [314, 324[[372, 374[314 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q v57|q [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [322, 325[322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v57|q [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q v60|q [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdi|q]" v62|q v49|q [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q -1 [384, 388[[392, 396[384 MustHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v49|q [394, 404[[452, 454[394 MustHaveRegister 400 MustHaveRegister 404 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q v64|q [400, 408[400 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v64|q [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v67|q [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [464, 465[464 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rbx|q]" v70|q v49|q [492, 501[496 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q -1 [494, 498[494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [48, 52[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [96, 100[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [20, 24[20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[rax|q]" v75|q rax|q [114, 115[114 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q rax|q [122, 132[[524, 527[122 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdi|q]" v79|q -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q -1 [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[vstack:3|d]" v0|d v0|d [504, 505[ "OneSpillStore"
  v84|d DWORD "[vstack:5|d]" v1|d v1|d [504, 507[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v4|q v4|q [25, 32[[42, 94[32 ShouldHaveRegister 50 ShouldHaveRegister 66 ShouldHaveRegister 82 ShouldHaveRegister  "OneSpillStore"
  v86|q QWORD "[rax|q]" v4|q v4|q [94, 98[98 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:1|q]" v49|q v49|q [461, 468[ "OneSpillStore"
  v88|q QWORD "[vstack:2|q]" v19|q v19|q [481, 488[ "OneSpillStore"
  v89|q QWORD "[rbx|q]" v49|q v49|q [468, 471[470 ShouldHaveRegister  "OneSpillStore"
  v90|q QWORD "[rbx|q]" v19|q v19|q [488, 491[490 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:5|d]" v1|d v1|d [507, 509[[514, 519[ "OneSpillStore"
  v92|d DWORD "[vstack:3|d]" v0|d v0|d [505, 507[ "OneSpillStore"
  v93|d DWORD "[vstack:3|d]" v0|d v0|d [507, 509[[514, 519[ "OneSpillStore"
  v94|d DWORD "[rdi|d]" v0|d v0|d [530, 533[ "OneSpillStore"
  v95|d DWORD "[rsi|d]" v1|d v1|d [530, 533[ "OneSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 114[[120, 122[[462, 464[[482, 484[[508, 510[[518, 520[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v74|q [0, 4[[24, 27[[34, 35[[52, 55[[68, 71[[84, 87[[100, 103[[112, 113[[120, 121[[462, 463[[482, 483[[498, 500[[508, 509[[518, 519[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[22, 27[[32, 35[[50, 55[[66, 71[[82, 87[[98, 103[[112, 113[[120, 121[[460, 463[[480, 483[[496, 500[[506, 509[[516, 519[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 18[[42, 46[[136, 156[[194, 214[2 MustHaveRegister 16 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 18[[42, 46[[136, 156[[194, 214[4 MustHaveRegister 16 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 25[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [80, 84[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v82|q [198, 210[198 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q r14|q [200, 211[200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q r15|q [202, 216[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [204, 234[204 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q -1 [206, 212[206 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r8|q]" v15|q -1 [208, 216[208 MustHaveRegister 212 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v10|q [210, 220[[514, 516[210 MustHaveRegister 220 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v13|q [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [238, 252[[272, 292[[332, 372[[412, 452[[472, 481[242 MustHaveRegister 244 MustHaveRegister 274 ShouldHaveRegister 342 MustHaveRegister 344 MustHaveRegister 354 ShouldHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister 480 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [244, 248[[272, 276[244 MustHaveRegister 246 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v19|q [274, 284[[332, 334[274 MustHaveRegister 280 MustHaveRegister 284 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v21|q [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v21|q [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [344, 348[[352, 356[344 MustHaveRegister 346 ShouldHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v19|q [354, 364[[412, 414[354 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q v27|q [360, 368[360 MustHaveRegister 362 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v27|q [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q v30|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q v19|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q -1 [424, 428[[432, 436[424 MustHaveRegister 426 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v19|q [434, 444[[472, 474[434 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v34|q [440, 448[440 MustHaveRegister 442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v34|q [444, 446[444 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v37|q [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [484, 485[484 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v81|q [140, 152[140 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q r14|q [142, 153[142 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q r15|q [144, 158[144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [146, 176[146 MustHaveRegister 150 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbp|q]" v44|q -1 [148, 154[148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [150, 158[150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|q [152, 162[[504, 506[152 MustHaveRegister 162 MustHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v48|q [180, 194[[252, 272[[292, 332[[372, 412[[452, 461[184 MustHaveRegister 186 MustHaveRegister 254 ShouldHaveRegister 302 MustHaveRegister 304 MustHaveRegister 314 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 394 ShouldHaveRegister 460 ShouldHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q -1 [186, 190[[252, 256[186 MustHaveRegister 188 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v49|q [254, 264[[292, 294[254 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v51|q [260, 268[260 MustHaveRegister 262 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rcx|q]" v53|q -1 [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v51|q [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q v54|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [304, 308[[312, 316[304 MustHaveRegister 306 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v49|q [314, 324[[372, 374[314 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q v57|q [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [322, 325[322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v57|q [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q v60|q [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdi|q]" v62|q v49|q [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q -1 [384, 388[[392, 396[384 MustHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v49|q [394, 404[[452, 454[394 MustHaveRegister 400 MustHaveRegister 404 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q v64|q [400, 408[400 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v64|q [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v67|q [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [464, 465[464 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rbx|q]" v70|q v49|q [492, 501[496 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q -1 [494, 498[494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [48, 52[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [96, 100[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [20, 24[20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[rax|q]" v75|q rax|q [114, 115[114 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q rax|q [122, 132[[524, 527[122 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdi|q]" v79|q -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q -1 [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[vstack:3|d]" v0|d v0|d [504, 505[ "OneSpillStore"
  v84|d DWORD "[vstack:5|d]" v1|d v1|d [504, 507[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v4|q v4|q [25, 32[[42, 94[32 ShouldHaveRegister 50 ShouldHaveRegister 66 ShouldHaveRegister 82 ShouldHaveRegister  "OneSpillStore"
  v86|q QWORD "[rax|q]" v4|q v4|q [94, 98[98 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:1|q]" v49|q v49|q [461, 468[ "OneSpillStore"
  v88|q QWORD "[vstack:2|q]" v19|q v19|q [481, 488[ "OneSpillStore"
  v89|q QWORD "[rbx|q]" v49|q v49|q [468, 471[470 ShouldHaveRegister  "OneSpillStore"
  v90|q QWORD "[rbx|q]" v19|q v19|q [488, 491[490 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:5|d]" v1|d v1|d [507, 509[[514, 519[ "OneSpillStore"
  v92|d DWORD "[vstack:3|d]" v0|d v0|d [505, 507[ "OneSpillStore"
  v93|d DWORD "[vstack:3|d]" v0|d v0|d [507, 509[[514, 519[ "OneSpillStore"
  v94|d DWORD "[rdi|d]" v0|d v0|d [530, 533[ "OneSpillStore"
  v95|d DWORD "[rsi|d]" v1|d v1|d [530, 533[ "OneSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 114[[120, 122[[462, 464[[482, 484[[508, 510[[518, 520[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v74|q [0, 4[[24, 27[[34, 35[[52, 55[[68, 71[[84, 87[[100, 103[[112, 113[[120, 121[[462, 463[[482, 483[[498, 500[[508, 509[[518, 519[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v4|q [0, 2[[22, 27[[32, 35[[50, 55[[66, 71[[82, 87[[98, 103[[112, 113[[120, 121[[460, 463[[480, 483[[496, 500[[506, 509[[516, 519[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[26, 27[[34, 35[[54, 55[[70, 71[[86, 87[[102, 103[[112, 113[[120, 121[[462, 463[[482, 483[[508, 509[[518, 519[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 18[[42, 46[[136, 156[[194, 214[2 MustHaveRegister 16 MustHaveRegister 44 MustHaveRegister  "OneSpillStore"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 18[[42, 46[[136, 156[[194, 214[4 MustHaveRegister 16 ShouldHaveRegister  "OneSpillStore"
  v2|q QWORD "[rax|q]" v2|q -1 [6, 10[6 MustHaveRegister 10 ShouldHaveRegister  "NoSpillStore"
  v3|q QWORD "[rcx|q]" v3|q rsp|q [8, 10[8 MustHaveRegister 10 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rax|q]" v4|q -1 [14, 25[14 MustHaveRegister 22 ShouldHaveRegister  "OneSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [64, 68[64 MustHaveRegister 68 ShouldHaveRegister  "NoSpillStore"
  v9|q QWORD "[rsi|q]" v9|q -1 [80, 84[80 MustHaveRegister 84 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rax|q]" v10|q v82|q [198, 210[198 MustHaveRegister 210 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rcx|q]" v11|q r14|q [200, 211[200 MustHaveRegister 210 ShouldHaveRegister  "NoSpillStore"
  v12|q QWORD "[rdx|q]" v12|q r15|q [202, 216[202 MustHaveRegister 204 MustHaveRegister 206 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [204, 234[204 MustHaveRegister 208 MustHaveRegister 218 MustHaveRegister 220 MustHaveRegister 222 MustHaveRegister 224 MustHaveRegister 226 MustHaveRegister 228 MustHaveRegister 230 MustHaveRegister 232 MustHaveRegister 234 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rbp|q]" v14|q -1 [206, 212[206 MustHaveRegister 212 ShouldHaveRegister  "NoSpillStore"
  v15|q QWORD "[r8|q]" v15|q -1 [208, 216[208 MustHaveRegister 212 MustHaveRegister 216 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q v10|q [210, 220[[514, 516[210 MustHaveRegister 220 MustHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rax|q]" v17|q rax|q [520, 523[520 MustHaveRegister 522 ShouldHaveRegister  "NoSpillStore"
  v18|q QWORD "[rbx|q]" v18|q v13|q [234, 237[234 MustHaveRegister 236 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q v18|q [238, 252[[272, 292[[332, 372[[412, 452[[472, 481[242 MustHaveRegister 244 MustHaveRegister 274 ShouldHaveRegister 342 MustHaveRegister 344 MustHaveRegister 354 ShouldHaveRegister 420 MustHaveRegister 422 MustHaveRegister 424 MustHaveRegister 434 ShouldHaveRegister 480 ShouldHaveRegister  "OneSpillStore"
  v20|q QWORD "[rdi|q]" v20|q -1 [244, 248[[272, 276[244 MustHaveRegister 246 ShouldHaveRegister 276 ShouldHaveRegister  "NoSpillStore"
  v21|q QWORD "[rax|q]" v21|q v19|q [274, 284[[332, 334[274 MustHaveRegister 280 MustHaveRegister 284 MustHaveRegister 334 MustHaveRegister  "NoSpillStore"
  v22|q QWORD "[rdi|q]" v22|q v21|q [280, 288[280 MustHaveRegister 282 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v23|q QWORD "[rcx|q]" v23|q -1 [282, 285[282 MustHaveRegister 284 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rax|q]" v24|q v21|q [284, 286[284 MustHaveRegister 286 MustHaveRegister  "NoSpillStore"
  v25|q QWORD "[rax|q]" v25|q v24|q [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v26|q QWORD "[rdi|q]" v26|q -1 [344, 348[[352, 356[344 MustHaveRegister 346 ShouldHaveRegister 356 ShouldHaveRegister  "NoSpillStore"
  v27|q QWORD "[rax|q]" v27|q v19|q [354, 364[[412, 414[354 MustHaveRegister 360 MustHaveRegister 364 MustHaveRegister 414 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rdi|q]" v28|q v27|q [360, 368[360 MustHaveRegister 362 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v29|q QWORD "[rcx|q]" v29|q -1 [362, 365[362 MustHaveRegister 364 ShouldHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v27|q [364, 366[364 MustHaveRegister 366 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rax|q]" v31|q v30|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v32|q QWORD "[rdi|q]" v32|q v19|q [420, 422[420 MustHaveRegister 422 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q -1 [424, 428[[432, 436[424 MustHaveRegister 426 ShouldHaveRegister 436 ShouldHaveRegister  "NoSpillStore"
  v34|q QWORD "[rax|q]" v34|q v19|q [434, 444[[472, 474[434 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 474 MustHaveRegister  "NoSpillStore"
  v35|q QWORD "[rdi|q]" v35|q v34|q [440, 448[440 MustHaveRegister 442 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rcx|q]" v36|q -1 [442, 445[442 MustHaveRegister 444 ShouldHaveRegister  "NoSpillStore"
  v37|q QWORD "[rax|q]" v37|q v34|q [444, 446[444 MustHaveRegister 446 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rax|q]" v38|q v37|q [446, 448[446 MustHaveRegister 448 MustHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q rax|q [484, 485[484 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rax|q]" v40|q v81|q [140, 152[140 MustHaveRegister 152 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q r14|q [142, 153[142 MustHaveRegister 152 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rdx|q]" v42|q r15|q [144, 158[144 MustHaveRegister 146 MustHaveRegister 148 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rbx|q]" v43|q -1 [146, 176[146 MustHaveRegister 150 MustHaveRegister 160 MustHaveRegister 162 MustHaveRegister 164 MustHaveRegister 166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 172 MustHaveRegister 174 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v44|q QWORD "[rbp|q]" v44|q -1 [148, 154[148 MustHaveRegister 154 ShouldHaveRegister  "NoSpillStore"
  v45|q QWORD "[r8|q]" v45|q -1 [150, 158[150 MustHaveRegister 154 MustHaveRegister 158 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q v40|q [152, 162[[504, 506[152 MustHaveRegister 162 MustHaveRegister 506 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rax|q]" v47|q rax|q [510, 513[510 MustHaveRegister 512 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rbx|q]" v48|q v43|q [176, 179[176 MustHaveRegister 178 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q v48|q [180, 194[[252, 272[[292, 332[[372, 412[[452, 461[184 MustHaveRegister 186 MustHaveRegister 254 ShouldHaveRegister 302 MustHaveRegister 304 MustHaveRegister 314 ShouldHaveRegister 380 MustHaveRegister 382 MustHaveRegister 384 MustHaveRegister 394 ShouldHaveRegister 460 ShouldHaveRegister  "OneSpillStore"
  v50|q QWORD "[rdi|q]" v50|q -1 [186, 190[[252, 256[186 MustHaveRegister 188 ShouldHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rax|q]" v51|q v49|q [254, 264[[292, 294[254 MustHaveRegister 260 MustHaveRegister 264 MustHaveRegister 294 MustHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdi|q]" v52|q v51|q [260, 268[260 MustHaveRegister 262 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rcx|q]" v53|q -1 [262, 265[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rax|q]" v54|q v51|q [264, 266[264 MustHaveRegister 266 MustHaveRegister  "NoSpillStore"
  v55|q QWORD "[rax|q]" v55|q v54|q [266, 268[266 MustHaveRegister 268 MustHaveRegister  "NoSpillStore"
  v56|q QWORD "[rdi|q]" v56|q -1 [304, 308[[312, 316[304 MustHaveRegister 306 ShouldHaveRegister 316 ShouldHaveRegister  "NoSpillStore"
  v57|q QWORD "[rax|q]" v57|q v49|q [314, 324[[372, 374[314 MustHaveRegister 320 MustHaveRegister 324 MustHaveRegister 374 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdi|q]" v58|q v57|q [320, 328[320 MustHaveRegister 322 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v59|q QWORD "[rcx|q]" v59|q -1 [322, 325[322 MustHaveRegister 324 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v57|q [324, 326[324 MustHaveRegister 326 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q v60|q [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v62|q QWORD "[rdi|q]" v62|q v49|q [380, 382[380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q -1 [384, 388[[392, 396[384 MustHaveRegister 386 ShouldHaveRegister 396 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rax|q]" v64|q v49|q [394, 404[[452, 454[394 MustHaveRegister 400 MustHaveRegister 404 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v65|q QWORD "[rdi|q]" v65|q v64|q [400, 408[400 MustHaveRegister 402 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rcx|q]" v66|q -1 [402, 405[402 MustHaveRegister 404 ShouldHaveRegister  "NoSpillStore"
  v67|q QWORD "[rax|q]" v67|q v64|q [404, 406[404 MustHaveRegister 406 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rax|q]" v68|q v67|q [406, 408[406 MustHaveRegister 408 MustHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q rax|q [464, 465[464 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rbx|q]" v70|q v49|q [492, 501[496 ShouldHaveRegister  "NoSpillStore"
  v71|q QWORD "[rsi|q]" v71|q -1 [494, 498[494 MustHaveRegister 498 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rsi|q]" v72|q -1 [48, 52[48 MustHaveRegister 52 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rsi|q]" v73|q -1 [96, 100[96 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v74|q QWORD "[rsi|q]" v74|q -1 [20, 24[20 MustHaveRegister 24 ShouldHaveRegister  "NoSpillStore"
  v75|q QWORD "[rax|q]" v75|q rax|q [114, 115[114 MustHaveRegister  "NoSpillStore"
  v76|q QWORD "[rax|q]" v76|q rax|q [122, 132[[524, 527[122 MustHaveRegister  "NoSpillStore"
  v77|q QWORD "[rdi|q]" v77|q -1 [300, 302[300 MustHaveRegister 302 MustHaveRegister  "NoSpillStore"
  v78|q QWORD "[rdi|q]" v78|q -1 [340, 342[340 MustHaveRegister 342 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rdi|q]" v79|q -1 [182, 184[182 MustHaveRegister 184 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [240, 242[240 MustHaveRegister 242 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rax|q]" v81|q -1 [138, 140[138 MustHaveRegister 140 ShouldHaveRegister  "NoSpillStore"
  v82|q QWORD "[rax|q]" v82|q -1 [196, 198[196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v83|d DWORD "[vstack:3|d]" v0|d v0|d [504, 505[ "OneSpillStore"
  v84|d DWORD "[vstack:5|d]" v1|d v1|d [504, 507[ "OneSpillStore"
  v85|q QWORD "[vstack:0|q]" v4|q v4|q [25, 32[[42, 94[32 ShouldHaveRegister 50 ShouldHaveRegister 66 ShouldHaveRegister 82 ShouldHaveRegister  "OneSpillStore"
  v86|q QWORD "[rax|q]" v4|q v4|q [94, 98[98 ShouldHaveRegister  "OneSpillStore"
  v87|q QWORD "[vstack:1|q]" v49|q v49|q [461, 468[ "OneSpillStore"
  v88|q QWORD "[vstack:2|q]" v19|q v19|q [481, 488[ "OneSpillStore"
  v89|q QWORD "[rbx|q]" v49|q v49|q [468, 471[470 ShouldHaveRegister  "OneSpillStore"
  v90|q QWORD "[rbx|q]" v19|q v19|q [488, 491[490 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:5|d]" v1|d v1|d [507, 509[[514, 519[ "OneSpillStore"
  v92|d DWORD "[vstack:3|d]" v0|d v0|d [505, 507[ "OneSpillStore"
  v93|d DWORD "[vstack:3|d]" v0|d v0|d [507, 509[[514, 519[ "OneSpillStore"
  v94|d DWORD "[rdi|d]" v0|d v0|d [530, 533[ "OneSpillStore"
  v95|d DWORD "[rsi|d]" v1|d v1|d [530, 533[ "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    8  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   12  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   14  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   16  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   18  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   20  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rdi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr   36  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  116  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  120  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  124  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  128  <|@ instruction  <|@ <|@
      nr  130  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   44  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   50  <|@ instruction rdi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   54  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr   56  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   60  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   96  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   98  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  104  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   66  <|@ instruction rdi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   72  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  140  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  148  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  152  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  154  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  158  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  160  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  162  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  164  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  166  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  168  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  170  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  172  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  174  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  176  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  180  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  182  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  184  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  186  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  188  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  302  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  304  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  306  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  382  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  384  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  386  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:1|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  462  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: vstack:1|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  466  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  468  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:1|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  496  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  502  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   82  <|@ instruction rdi|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   88  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  194  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  196  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  198  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  202  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  206  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  208  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  210  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  212  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  216  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  220  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  222  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  224  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  226  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  228  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  230  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  232  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  234  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  236  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  238  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  240  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  242  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  246  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  342  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  344  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  346  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  422  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  424  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  426  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  482  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: vstack:2|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  262  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  264  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  266  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  268  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  270  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  314  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  324  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  326  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  328  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  330  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  394  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  396  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  402  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  406  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  408  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  410  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  434  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  436  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  442  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  446  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  448  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  450  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  274  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  276  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  280  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  282  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  284  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  286  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  288  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  356  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  362  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  364  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  370  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  332  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  334  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  414  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  454  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  372  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  374  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: vstack:3|DWORD vstack:5|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:5|DWORD = MOVE rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rdi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  506  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: vstack:3|DWORD vstack:5|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  528  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  534  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B51" "B54" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B49" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B49 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" "B6" "B4" 
    successors "B51" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction JUMP ~[] destination: B51 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ instruction JUMP ~[] destination: B4 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B31 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B35" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B31 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B31" "B34" "B33" 
    successors "B36" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  354  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B36 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B36" "B39" "B38" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B45" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B41 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" "B43" 
    successors "B46" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B45" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B26" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction JUMP ~[] destination: B6 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B11 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B15" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B11" "B14" "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B20" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction JUMP ~[] destination: B16 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B16" "B19" "B18" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B21 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B25" 
    xhandlers
    flags 
    probability 4591149539274743809
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  202  <|@ instruction JUMP ~[] destination: B21 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B21" "B24" "B23" 
    successors "B26" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B26 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction JUMP ~[] destination: B26 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B60" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    4  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    6  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B52" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr    8  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   10  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B53" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  482  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  484  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  486  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  488  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:33) [bci: 98]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98] <|@ <|@
      nr  490  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  494  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ st <@st|@reference-map: []
live-base-pointers: []
java.io.PrintStream.println(PrintStream.java:772) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:34) [bci: 104]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104] <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B50" "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:37) [bci: 107]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107] <|@ <|@
      nr  508  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  512  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 111]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111] <|@ <|@
      nr  514  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4605380906891475172
    begin_IR
      LIR
      nr  516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  518  <|@ instruction  <|@ <|@
      nr  520  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4605373701204128973
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B5" "B7" "B27" "B48" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   18  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  454  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:28) [bci: 79]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79] <|@ <|@
      nr  458  <|@ instruction JUMP ~[] destination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" "B5" "B3" 
    successors "B55" 
    xhandlers
    flags 
    probability 4599075885427554987
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr  468  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  470  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  472  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:31) [bci: 87]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87] <|@ <|@
      nr  474  <|@ instruction JUMP ~[] destination: B50 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:18) [bci: 41]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B3 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  250  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  252  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  254  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  256  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  258  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr  260  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr  262  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr  284  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr  286  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr  288  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  290  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  292  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  294  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  296  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  298  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  300  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B29 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" "B29" 
    successors "B35" "B32" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  308  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  310  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  312  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B30" "B34" "B33" 
    successors "B40" "B37" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  348  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  352  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B35" "B39" "B38" 
    successors "B45" "B42" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  388  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  390  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  392  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B40" "B44" "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  428  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:26) [bci: 70]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70] <|@ <|@
      nr  432  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B45" "B25" 
    successors 
    xhandlers
    flags 
    probability 4596373707636734180
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  436  <|@ instruction rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  444  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ st <@st|@reference-map: [-40]
live-base-pointers: []
ftest50.example_ftest50(int, int) [bci: -4]
stack: rbx|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4] <|@ <|@
      nr  448  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B50" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   40  <|@ instruction rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [24]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:21) [bci: 52]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B5 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B8" "B9" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   56  <|@ instruction rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction rcx|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr   64  <|@ instruction rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD <|@ <|@
      nr   66  <|@ instruction r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD <|@ <|@
      nr   68  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr   70  <|@ instruction CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4591798051135901696
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0 <|@ <|@
      nr   92  <|@ instruction MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV [rbx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV [rbx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction MOV [rbx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  100  <|@ instruction MOV [rbx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  102  <|@ instruction MOV [rbx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  104  <|@ instruction MOV [rbx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  106  <|@ instruction rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" "B9" 
    successors "B15" "B12" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  114  <|@ instruction MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  118  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B10" "B14" "B13" 
    successors "B20" "B17" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  154  <|@ instruction MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  156  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  158  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B15" "B19" "B18" 
    successors "B25" "B22" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  190  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  192  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0 <|@ <|@
      nr  194  <|@ instruction MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  196  <|@ instruction rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD <|@ <|@
      nr  198  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B20" "B24" "B23" 
    successors "B47" 
    xhandlers
    flags 
    probability 4591870108009363684
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  232  <|@ instruction rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  234  <|@ instruction stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  236  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest50.example_ftest50(ftest50.java:24) [bci: 62]
stack: stack:32|QWORD[.] 
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62] <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B25 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  328  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  332  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  334  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B38" "B39" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  368  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  370  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  372  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  374  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  402  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  408  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  410  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  412  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  414  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B23" "B24" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  208  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  210  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  212  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  214  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  216  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  218  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  220  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  222  <|@ instruction JUMP ~[] destination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  128  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  134  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  136  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  140  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4576918171658012444
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4573567482006033749
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  172  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  174  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  176  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  178  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  180  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  342  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B25" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  226  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  228  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  148  <|@ instruction JUMP ~[] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  188  <|@ instruction JUMP ~[] destination: B19 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B44 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B40" 
    xhandlers
    flags 
    probability 4571261662055250147
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  382  <|@ instruction JUMP ~[] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B10" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   76  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   78  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr   80  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr   82  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" 
    xhandlers
    flags 
    probability 4562254462800509160
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  268  <|@ instruction stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  274  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: stack:16|DWORD stack:12|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  276  <|@ instruction rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  278  <|@ instruction JUMP ~[] destination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors 
    xhandlers
    flags 
    probability 4560517847114078989
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:38) [bci: 114]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114] <|@ <|@
      nr  526  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest50.example_ftest50(ftest50.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0] <|@ <|@
      nr  536  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: iload_1       
     2: if_icmple     93
     5: iload_0       
     6: tableswitch   [4] {1: 36, 2: 47, 3: 58, 4: 66} default: 74
    36: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    39: ldc           #8          // 1
    41: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    44: goto          82
    47: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    50: ldc           #10         // 2
    52: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    55: goto          82
    58: new           #11         // java.lang.Exception
    61: dup           
    62: invokespecial #7          // java.lang.Exception.<init>:()void
    65: athrow        
    66: new           #11         // java.lang.Exception
    69: dup           
    70: invokespecial #7          // java.lang.Exception.<init>:()void
    73: athrow        
    74: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    77: ldc           #13         // def
    79: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    82: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    85: ldc           #14         // Epilog
    87: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
    90: goto          107
    93: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    96: ldc           #16         // else brabch
    98: invokevirtual #8          // java.io.PrintStream.print:(java.lang.String)void
   101: getstatic     #5          // java.lang.System.out:java.io.PrintStream
   104: invokevirtual #9          // java.io.PrintStream.println:()void
   107: invokestatic  #10         // java.lang.System.console:()java.io.Console
   110: pop           
   111: invokestatic  #10         // java.lang.System.console:()java.io.Console
   114: pop           
   115: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec28498b4778488bcc483bc80f8635040000488b0500000000498d04063bfe0f8f43000000488b3500000000498d3436488bf84889442418e80000000090488b7c2418e80000000090e80000000090e800000000904183afb0000000010f8ed90300004883c428c3488944241883ff030f8d1700000083ff010f845400000083ff020f843b010000e91200000083ff030f844801000083ff040f844c000000488b3500000000498d3436488b7c2418e80000000090488b442418488b3500000000498d3436488bf8e80000000090e976ffffff488b3500000000498d3436488b7c2418e80000000090ebca488b0500000000498d0406498bce498bd7488b5a18488b6a104c8d4338482bc14c3bc50f870f0300004c8942180f18833801000048890348c743080000000048c743100000000048c743180000000048c743200000000048c743280000000048c7433000000000488b3d0000000048897b20488b3b48f7c7020000000f853b010000488b3d0000000048897b18488b3b48f7c7020000000f8552010000488bfb492bfe48897b10488b3b48f7c7020000000f856a010000488bfb48895c2410e80000000090488b5c2410488d742430488bfbe80000000090488b3500000000498d3436488b7c2418e80000000090e9d7feffff488b0500000000498d0406498bce498bd7488b5a18488b6a104c8d4338482bc14c3bc50f87030200004c8942180f18833801000048890348c743080000000048c743100000000048c743180000000048c743200000000048c743280000000048c7433000000000488b3d0000000048897b20488b3b48f7c7020000000f8510010000488b3d0000000048897b18488b3b48f7c7020000000f8527010000488bfb492bfe48897b10488b3b48f7c7020000000f85a9000000488bfb48895c2410e80000000090e908ffffff488bc348f7c7010000000f851c010000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e993feffff488bc348f7c7010000000f8517010000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e97cfeffff488bc348f7c7010000000f85dc000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e964feffff488bc348f7c7010000000f858f000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e925ffffff488bc348f7c7010000000f8566000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e9befeffff488bc348f7c7010000000f853d000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e9a7feffffc640f800e990fdffffc640f800e9affeffffc640f800e971feffffc640f800e983feffffc640f800e9a1fdffffc640f800e97efdffff89742424897c2420488bf8e80000000090488bd8e922feffff89742424897c2420488bf8e80000000090488bd8e916fdffffe800000000904883c428c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 rax|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 11 6 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B60 size: QWORD  <||@
  Comment 20 block B1 null  <||@
  Comment 20 8 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 20 10 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 20 {DataSection[?]}  <||@
  Comment 31 12 CMPBRANCH (x: rdi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B52 size: DWORD  <||@
  Comment 39 block B52 null  <||@
  Comment 39 480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 39 482 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 39 {DataSection[?]}  <||@
  Comment 50 484 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 53 486 stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 58 488 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:98]  <||@
  Comment 58 {HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>}  <||@
  Comment 63 [24]at ftest50.example_ftest50(ftest50.java:33) [bci: 98, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 64 490 JUMP ~[] destination: B52 -> B53  <||@
  Comment 64 block B53 null  <||@
  Comment 64 492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 64 494 rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD  <||@
  Comment 69 496 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:1, 104]  <||@
  Comment 69 {HostedMethod<PrintStream.newLine -> AnalysisMethod<java.io.PrintStream.newLine -> HotSpotMethod<PrintStream.newLine()>>>}  <||@
  Comment 74 []at java.io.PrintStream.println(PrintStream.java:772) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest50.example_ftest50(ftest50.java:34) [bci: 104, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 75 498 JUMP ~[] destination: B53 -> B55  <||@
  Comment 75 block B55 null  <||@
  Comment 75 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 75 506 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:107]  <||@
  Comment 75 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 80 []at ftest50.example_ftest50(ftest50.java:37) [bci: 107, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 81 508 JUMP ~[] destination: B55 -> B56  <||@
  Comment 81 block B56 null  <||@
  Comment 81 510 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 81 512 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:111]  <||@
  Comment 81 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 86 []at ftest50.example_ftest50(ftest50.java:38) [bci: 111, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 87 514 JUMP ~[] destination: B56 -> B57  <||@
  Comment 87 block B57 null  <||@
  Comment 87 516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 87 518   <||@
  Comment 95 520 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 101 block B59 null  <||@
  Comment 101 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 101 530 RETURN -  <||@
  Comment 101 EPILOGUE_START  <||@
  Comment 105 EPILOGUE_INCD_RSP  <||@
  Comment 105 EPILOGUE_END  <||@
  Comment 106 block B2 null  <||@
  Comment 106 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 106 16 stack:24|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 111 18 STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2], int[3|0x3], int[4|0x4]] keyTargets: [B2 -> B3, B2 -> B5, B2 -> B7, B2 -> B27] defaultTarget: B2 -> B48 strategy: BinaryStrategy[avgEffort=2.6]  <||@
  Comment 161 block B48 null  <||@
  Comment 161 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 161 452 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 161 {DataSection[?]}  <||@
  Comment 172 454 rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD  <||@
  Comment 177 456 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:79]  <||@
  Comment 177 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 182 [24]at ftest50.example_ftest50(ftest50.java:28) [bci: 79, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 183 458 JUMP ~[] destination: B48 -> B50  <||@
  Comment 183 block B50 null  <||@
  Comment 183 466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 183 462 rax|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD  <||@
  Comment 188 468 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 188 {DataSection[?]}  <||@
  Comment 199 470 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 202 472 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:87]  <||@
  Comment 202 {HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>}  <||@
  Comment 207 []at ftest50.example_ftest50(ftest50.java:31) [bci: 87, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 208 474 JUMP ~[] destination: B50 -> B55  <||@
  Comment 213 block B3 null  <||@
  Comment 213 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 213 22 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 213 {DataSection[?]}  <||@
  Comment 224 24 rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD  <||@
  Comment 229 26 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:41]  <||@
  Comment 229 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 234 [24]at ftest50.example_ftest50(ftest50.java:18) [bci: 41, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 235 28 JUMP ~[] destination: B3 -> B50  <||@
  Comment 237 block B27 null  <||@
  Comment 237 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 237 248 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 237 {DataSection[?]}  <||@
  Comment 248 250 rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 248 252 rcx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 251 254 rdx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 254 256 rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD  <||@
  Comment 258 258 rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD  <||@
  Comment 262 260 r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD  <||@
  Comment 266 262 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 269 264 CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: QWORD  <||@
  Comment 278 block B29 null  <||@
  Comment 278 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 282 MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 282 284 AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0  <||@
  Comment 289 286 MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD  <||@
  Comment 292 288 MOV [rbx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 300 290 MOV [rbx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 308 292 MOV [rbx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 316 294 MOV [rbx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 324 296 MOV [rbx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 332 298 MOV [rbx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 340 300 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 340 302 JUMP ~[] destination: B29 -> B30  <||@
  Comment 340 block B30 null  <||@
  Comment 340 304 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 340 306 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 340 {DataSection[?]}  <||@
  Comment 347 308 MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 351 310 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 354 312 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B30 -> B35 falseDestination: B30 -> B32 y: 2 size: QWORD  <||@
  Comment 367 block B35 null  <||@
  Comment 367 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 346 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 367 {DataSection[?]}  <||@
  Comment 374 348 MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 378 350 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 381 352 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B35 -> B40 falseDestination: B35 -> B37 y: 2 size: QWORD  <||@
  Comment 394 block B40 null  <||@
  Comment 394 384 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 394 386 rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0  <||@
  Comment 400 388 MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 404 390 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 407 392 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B40 -> B45 falseDestination: B40 -> B42 y: 2 size: QWORD  <||@
  Comment 420 block B45 null  <||@
  Comment 420 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 420 426 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 423 428 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 428 430 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 70]  <||@
  Comment 428 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 433 [16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest50.example_ftest50(ftest50.java:26) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 434 432 JUMP ~[] destination: B45 -> B47  <||@
  Comment 434 block B47 null  <||@
  Comment 434 440 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 434 436 rbx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 439 442 rsi|QWORD = STACKLEA in:0|QWORD  <||@
  Comment 444 444 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 447 446 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:-4]  <||@
  Comment 447 {HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>>}  <||@
  Comment 452 [-40]at ftest50.example_ftest50(int, int) [bci: -4, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rbx|QWORD[.]  |    <||@
  Comment 453 448 DEAD_END  <||@
  Comment 453 block B5 null  <||@
  Comment 453 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 453 38 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 453 {DataSection[?]}  <||@
  Comment 464 40 rdi|QWORD[.] = MOVE stack:24|QWORD[.] moveKind: QWORD  <||@
  Comment 469 42 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:52]  <||@
  Comment 469 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 474 [24]at ftest50.example_ftest50(ftest50.java:21) [bci: 52, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 475 44 JUMP ~[] destination: B5 -> B50  <||@
  Comment 480 block B7 null  <||@
  Comment 480 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 480 54 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 480 {DataSection[?]}  <||@
  Comment 491 56 rax|QWORD = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 491 58 rcx|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 494 60 rdx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 497 62 rbx|QWORD = MOV [rdx|QWORD + 24] size: QWORD  <||@
  Comment 501 64 rbp|QWORD = MOV [rdx|QWORD + 16] size: QWORD  <||@
  Comment 505 66 r8|QWORD = LEA [rbx|QWORD + 56] size: QWORD  <||@
  Comment 509 68 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 512 70 CMPBRANCH (x: r8|QWORD, y: rbp|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B7 -> B8 falseDestination: B7 -> B9 size: QWORD  <||@
  Comment 521 block B9 null  <||@
  Comment 521 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 521 88 MOV (x: [rdx|QWORD + 24], y: r8|QWORD) size: QWORD  <||@
  Comment 525 90 AMD64PREFETCH ~[rbx|QWORD + 312] instr: 0  <||@
  Comment 532 92 MOV (x: [rbx|QWORD], y: rax|QWORD) size: QWORD  <||@
  Comment 535 94 MOV [rbx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 543 96 MOV [rbx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 551 98 MOV [rbx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 559 100 MOV [rbx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 567 102 MOV [rbx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 575 104 MOV [rbx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 583 106 rbx|QWORD[.] = MOVE rbx|QWORD moveKind: QWORD  <||@
  Comment 583 108 JUMP ~[] destination: B9 -> B10  <||@
  Comment 583 block B10 null  <||@
  Comment 583 110 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 583 112 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 583 {DataSection[?]}  <||@
  Comment 590 114 MOV (x: [rbx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 594 116 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 597 118 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B10 -> B15 falseDestination: B10 -> B12 y: 2 size: QWORD  <||@
  Comment 610 block B15 null  <||@
  Comment 610 150 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 610 152 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@5f67c721 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 610 {DataSection[?]}  <||@
  Comment 617 154 MOV (x: [rbx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 621 156 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 624 158 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B15 -> B20 falseDestination: B15 -> B17 y: 2 size: QWORD  <||@
  Comment 637 block B20 null  <||@
  Comment 637 190 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 637 192 rdi|QWORD[.] = COMPRESSPOINTER (input: rbx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@325325c1 encoding: base: 1 shift: 0  <||@
  Comment 643 194 MOV (x: [rbx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 647 196 rdi|QWORD = MOV [rbx|QWORD[.]] size: QWORD  <||@
  Comment 650 198 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B20 -> B25 falseDestination: B20 -> B22 y: 2 size: QWORD  <||@
  Comment 663 block B25 null  <||@
  Comment 663 230 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 663 232 rdi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 666 234 stack:32|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 671 236 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:24, 1, 62]  <||@
  Comment 671 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 676 [16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest50.example_ftest50(ftest50.java:24) [bci: 62, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:32|QWORD[.]  |    <||@
  Comment 677 238 JUMP ~[] destination: B25 -> B47  <||@
  Comment 682 block B32 null  <||@
  Comment 682 318 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 682 320 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 685 322 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B32 -> B33 falseDestination: B32 -> B34 y: 1 size: QWORD  <||@
  Comment 698 block B33 null  <||@
  Comment 698 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 698 326 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 708 328 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 715 330 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 718 332 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 722 334 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 727 336 JUMP ~[] destination: B33 -> B35  <||@
  Comment 732 block B37 null  <||@
  Comment 732 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 732 360 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 735 362 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B39 y: 1 size: QWORD  <||@
  Comment 748 block B38 null  <||@
  Comment 748 364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 748 366 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 758 368 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 765 370 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 768 372 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 772 374 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 777 376 JUMP ~[] destination: B38 -> B40  <||@
  Comment 782 block B42 null  <||@
  Comment 782 398 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 782 400 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 785 402 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 1 size: QWORD  <||@
  Comment 798 block B43 null  <||@
  Comment 798 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 798 406 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 808 408 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 815 410 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 818 412 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 822 414 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 827 416 JUMP ~[] destination: B43 -> B45  <||@
  Comment 832 block B22 null  <||@
  Comment 832 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 832 206 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 835 208 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B24 y: 1 size: QWORD  <||@
  Comment 848 block B23 null  <||@
  Comment 848 210 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 848 212 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 858 214 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 865 216 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 868 218 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 872 220 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 877 222 JUMP ~[] destination: B23 -> B25  <||@
  Comment 882 block B12 null  <||@
  Comment 882 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 882 126 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 885 128 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: 1 size: QWORD  <||@
  Comment 898 block B13 null  <||@
  Comment 898 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 132 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 908 134 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 915 136 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 918 138 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 922 140 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 927 142 JUMP ~[] destination: B13 -> B15  <||@
  Comment 932 block B17 null  <||@
  Comment 932 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 932 166 rax|QWORD = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 935 168 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B17 -> B18 falseDestination: B17 -> B19 y: 1 size: QWORD  <||@
  Comment 948 block B18 null  <||@
  Comment 948 170 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 948 172 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 958 174 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 965 176 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 968 178 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 972 180 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 977 182 JUMP ~[] destination: B18 -> B20  <||@
  Comment 982 block B34 null  <||@
  Comment 982 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 982 340 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 986 342 JUMP ~[] destination: B34 -> B35  <||@
  Comment 991 block B24 null  <||@
  Comment 991 224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 991 226 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 995 228 JUMP ~[] destination: B24 -> B25  <||@
  Comment 1000 block B14 null  <||@
  Comment 1000 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1000 146 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1004 148 JUMP ~[] destination: B14 -> B15  <||@
  Comment 1009 block B19 null  <||@
  Comment 1009 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1009 186 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1013 188 JUMP ~[] destination: B19 -> B20  <||@
  Comment 1018 block B44 null  <||@
  Comment 1018 418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1018 420 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1022 422 JUMP ~[] destination: B44 -> B45  <||@
  Comment 1027 block B39 null  <||@
  Comment 1027 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1027 380 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1031 382 JUMP ~[] destination: B39 -> B40  <||@
  Comment 1036 block B8 null  <||@
  Comment 1036 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1036 74 stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1040 76 stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1044 78 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1047 80 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0]  <||@
  Comment 1047 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1052 []at ftest50.example_ftest50(ftest50.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |stack:16|DWORD  |stack:12|DWORD   <||@
  Comment 1053 82 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1056 84 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1061 block B28 null  <||@
  Comment 1061 266 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 268 stack:12|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 1065 270 stack:16|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1069 272 rdi|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1072 274 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0]  <||@
  Comment 1072 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1077 []at ftest50.example_ftest50(ftest50.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0               |1              
     locals:  |stack:16|DWORD  |stack:12|DWORD   <||@
  Comment 1078 276 rbx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1081 278 JUMP ~[] destination: B28 -> B30  <||@
  Comment 1086 block B58 null  <||@
  Comment 1086 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1086 524 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:114]  <||@
  Comment 1086 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 1091 [-16]at ftest50.example_ftest50(ftest50.java:38) [bci: 114, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |    <||@
  Comment 1092 526 RETURN -  <||@
  Comment 1092 EPILOGUE_START  <||@
  Comment 1096 EPILOGUE_INCD_RSP  <||@
  Comment 1096 EPILOGUE_END  <||@
  Comment 1097 block B60 null  <||@
  Comment 1097 532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1097 534 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@5fe90cca state [bci:0]  <||@
  Comment 1097 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 1102 []at ftest50.example_ftest50(ftest50.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1         
     locals:  |rdi|DWORD  |rsi|DWORD   <||@
  Comment 1103 536 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
