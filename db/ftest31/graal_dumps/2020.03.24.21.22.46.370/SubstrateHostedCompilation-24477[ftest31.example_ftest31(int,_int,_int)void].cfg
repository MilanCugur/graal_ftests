begin_compilation
  name " SubstrateHostedCompilation-24477[ftest31.example_ftest31(int, int, int)]"
  method "SubstrateHostedCompilation-24477[ftest31.example_ftest31(int, int, int)]"
  date 1585081366407
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@72481653
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: j178 
=== Usages ===
v180 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j178 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
v180 
=== Predecessor ===
j188 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j188 
y: j178 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j188 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 v18 ?252 ?253 v166 ?250 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 ?252 ?253 v36 ?250 v133 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 ?252 ?253 v52 ?250 ?249 v140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
j178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 v194 v226 v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@79ac25dd
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a6 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a6  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v189 
stateDuring: ?249 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v189 stateDuring: ?249 #next: v12  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 57]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 i165 v166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i67 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 63]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@2112b4e8
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 ?250 ?252 v133 ?251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v190 
stateDuring: ?250 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v190 stateDuring: ?250 #next: v132  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 v357 v358 v386 v387 v415 v416 v560 v502 v503 v531 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j379 j408 j495 j524 j553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j380 j409 j496 j525 j554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j353 j382 j411 j498 j527 j556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 v374 v403 v490 v519 v548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v370 v399 v486 v515 v544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 v317 v318 v319 v320 v321 v322 v471 v472 v474 v473 v469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j282 j439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a265 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j433 j274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i13 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v135 #falseSuccessor: v134  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a41 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 35]
rawvalue: body
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d8e7d60
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a41 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a41  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?251 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?251 #next: v139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v142 #falseSuccessor: v141  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a151  <|@  <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1c22e857
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v192 
stateDuring: ?252 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v192 stateDuring: ?252 #next: v146  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a151 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i67 i68 
=== Succesors ===
=== Usages ===
?255 v18 i68 ?254 v36 v52 ?253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i67 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v22 
=== Usages ===
i165 v19 v69 v38 v54 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i165 
y: i1 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i165 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@4b8a4c3
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v193 
stateDuring: ?253 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v193 stateDuring: ?253 #next: v35  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
a119 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: j433 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a265 
=== Succesors ===
next: j434 
=== Usages ===
j448 
=== Predecessor ===
v153 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a265 #next: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j435 
=== Usages ===
j448 
=== Predecessor ===
j433 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j435 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
v606 v607 
=== Predecessor ===
j434 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j436 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: j437 
=== Usages ===
j439 v598 a454 v599 v600 v601 v602 v603 v604 v605 
=== Predecessor ===
j435 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
v440 
=== Predecessor ===
j436 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j436 
y: j281 
=== Succesors ===
=== Usages ===
v440 v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j436 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j439 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j437 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j433 
y: j434 
=== Succesors ===
=== Usages ===
a449 v468 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j433 y: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v441 #falseSuccessor: v442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: j448 
=== Succesors ===
next: v450 
=== Usages ===
a456 
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: j448 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
value: j439 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - value: j439 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v599 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v599 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: j448 
stateAfter: - 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: j448 stateAfter: - #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - value: j290 stateAfter: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - value: j290 stateAfter: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - value: j290 stateAfter: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - value: j290 stateAfter: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - value: j290 stateAfter: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - value: j290 stateAfter: - #next: a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j436 
=== Succesors ===
next: v455 
=== Usages ===
a456 
=== Predecessor ===
v474 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j436 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v451 
values: a449 a454 
=== Succesors ===
=== Usages ===
a541 a220 v576 a214 v577 v578 a483 a512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: a449 a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v450 v455 
=== Succesors ===
next: v219 
=== Usages ===
a456 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v455 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: a228 
stateAfter: - 
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: a228 stateAfter: - #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j501 
=== Usages ===
v608 j494 
=== Predecessor ===
v219 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a483 
index: - 
=== Succesors ===
=== Usages ===
j501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a483 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
v486 v490 
=== Predecessor ===
a483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j501 
y: j335 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j501 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v487 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
j501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v487 #falseSuccessor: v488  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a483 
=== Succesors ===
next: v489 
=== Usages ===
v609 j495 j497 
=== Predecessor ===
v488 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a483 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j501 
y: j340 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j501 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v491 #falseSuccessor: v492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j494 
y: j347 
=== Succesors ===
=== Usages ===
j496 v610 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j494 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j495 
y: j349 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j494 
y: j496 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j494 y: j496  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j497 
y: i352 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j497 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j495 
index: j498 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: i323 stateAfter: - #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - value: i323 stateAfter: - #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v506 v507 v508 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v507 v508 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: a227 stateAfter: - #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j530 
=== Usages ===
v611 j523 
=== Predecessor ===
v217 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v515 v519 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j335 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
j530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v516 #falseSuccessor: v517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a512 
=== Succesors ===
next: v518 
=== Usages ===
v612 j524 j526 
=== Predecessor ===
v517 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a512 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j340 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j523 
y: j347 
=== Succesors ===
=== Usages ===
j525 v613 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j523 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j524 
y: j349 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j524 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j523 
y: j525 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j523 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j526 
y: i352 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j526 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j524 
index: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - value: i323 stateAfter: - #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - value: i323 stateAfter: - #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v535 v536 v537 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v536 v537 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a214 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a456 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
value: a214 
stateAfter: - 
=== Succesors ===
next: a541 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - value: a214 stateAfter: - #next: a541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j559 
=== Usages ===
v614 j552 
=== Predecessor ===
v215 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a541 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a541 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v544 v548 
=== Predecessor ===
a541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j335 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a541 
=== Succesors ===
next: v547 
=== Usages ===
v615 j553 j555 
=== Predecessor ===
v546 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a541 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j340 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j552 
y: j347 
=== Succesors ===
=== Usages ===
j554 v616 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j552 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j553 
y: j349 
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j553 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j552 
y: j554 
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j552 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j555 
y: i352 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j555 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j553 
index: j556 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: i323 stateAfter: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - value: i323 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v564 v565 v566 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v565 v566 #next: v221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a220 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: a122 
=== Usages ===
v222 ?176 a32 
=== Predecessor ===
v221 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: a122  <|@  <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@3039e548
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a220 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a220  <|@  <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@4ea2fb52
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?176 ?87 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 19
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a173 
=== Succesors ===
=== Usages ===
?103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a173  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: -  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a173 
materializedValue: a220 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a173 materializedValue: a220  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: - 
virtualObjectMappings: ?176 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: - virtualObjectMappings: ?176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v222 
stateDuring: ?257 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
a220 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v222 stateDuring: ?257 #next: v102  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@45c9d281
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a41 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a41  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?254 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?254 #next: v51  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i165 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v158 v159 
=== Succesors ===
next: j274 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v159 #next: j274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j274 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a265 
=== Succesors ===
next: j275 
=== Usages ===
j292 
=== Predecessor ===
v157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a265 #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j276 
=== Usages ===
j292 
=== Predecessor ===
j274 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
v587 v588 
=== Predecessor ===
j275 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j276 
index: - 
=== Succesors ===
=== Usages ===
j277 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
lastLocationAccess: - 
=== Succesors ===
next: j278 
=== Usages ===
j282 v579 a298 v580 v581 v582 v583 v584 v585 v586 
=== Predecessor ===
j276 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v587 lastLocationAccess: - #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j276 
index: - 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
v283 
=== Predecessor ===
j277 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j277 
y: j281 
=== Succesors ===
=== Usages ===
v283 v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j277 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j282 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j274 
y: j275 
=== Succesors ===
=== Usages ===
a293 v316 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j274 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a293  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?55 
arguments: j292 
=== Succesors ===
next: v294 
=== Usages ===
a300 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?55 arguments: j292 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
lastLocationAccess: - 
value: j282 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v587 lastLocationAccess: - value: j282 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v580 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v580 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - value: j292 stateAfter: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: j290 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 lastLocationAccess: - value: j290 stateAfter: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v583 lastLocationAccess: - value: j290 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v584 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v584 lastLocationAccess: - value: j290 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 lastLocationAccess: - value: j290 stateAfter: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - value: j290 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j277 
=== Succesors ===
next: v299 
=== Usages ===
a300 
=== Predecessor ===
v322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j277 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v295 
values: a293 a298 
=== Succesors ===
=== Usages ===
a396 a209 v573 a199 v574 v575 a332 a367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a293 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v294 v299 
=== Succesors ===
next: v208 
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: a228 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: a228 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j356 
=== Usages ===
v589 j346 
=== Predecessor ===
v208 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j356  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v336 v341 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j335 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v339 
=== Usages ===
v590 j348 j351 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j340 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j346 
y: j347 
=== Succesors ===
=== Usages ===
j350 v591 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j346 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j348 
y: j349 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j348 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j346 
y: j350 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j346 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j351 
y: i352 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j351 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j348 
index: j353 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - value: i323 stateAfter: - #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j346 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 lastLocationAccess: - value: i323 stateAfter: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v361 v362 v363 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v362 v363 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: a227 stateAfter: - #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j385 
=== Usages ===
v592 j378 
=== Predecessor ===
v204 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j385  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v370 v374 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j335 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
j385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a367 
=== Succesors ===
next: v373 
=== Usages ===
v593 j379 j381 
=== Predecessor ===
v372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a367 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j340 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j378 
y: j347 
=== Succesors ===
=== Usages ===
j380 v594 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j378 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j379 
y: j349 
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j378 
y: j380 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j378 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j381 
y: i352 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j381 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j379 
index: j382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i323 stateAfter: - #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j378 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - value: i323 stateAfter: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v390 v391 v392 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 v392 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a300 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - value: a199 stateAfter: - #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j414 
=== Usages ===
v595 j407 
=== Predecessor ===
v200 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v399 v403 
=== Predecessor ===
a396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j335 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v400 #falseSuccessor: v401  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a396 
=== Succesors ===
next: v402 
=== Usages ===
v596 j408 j410 
=== Predecessor ===
v401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a396 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j340 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
j407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v405  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j407 
y: j347 
=== Succesors ===
=== Usages ===
j409 v597 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j407 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j408 
y: j349 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j407 
y: j409 
=== Succesors ===
=== Usages ===
j411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j407 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j410 
y: i352 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j410 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j408 
index: j411 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - value: i323 stateAfter: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: i323 stateAfter: - #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v419 v420 v421 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v420 v421 #next: v210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: a123 
=== Usages ===
v211 ?172 a32 
=== Predecessor ===
v210 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: a123  <|@  <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@496e847
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a209 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a209  <|@  <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@7b7a5e38
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?172 ?88 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 22
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a169 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a169  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: -  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a169 
materializedValue: a209 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a169 materializedValue: a209  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?116 
values: - 
virtualObjectMappings: ?172 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?116 values: - virtualObjectMappings: ?172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v211 
stateDuring: ?258 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
a209 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v211 stateDuring: ?258 #next: v115  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v27 
values: a220 a209 
=== Succesors ===
=== Usages ===
?85 v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: a220 a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v72 v75 
=== Succesors ===
next: j223 
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v72 v75 #next: j223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
v224 
=== Predecessor ===
v27 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v224  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a32 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
arguments: a32 j223 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
j223 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 arguments: a32 j223 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a121 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a121  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@22db526e
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a121 <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?255 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?255 #next: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
a121 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 57]
stamp: i32
=== Inputs ===
x: i165 
y: i67 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i165 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 63]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v162 v163 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v162 v163 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 66]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@290dd16e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a76 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a76  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
bci: 68
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v226 
stateDuring: ?256 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v226 stateDuring: ?256 #next: v83  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 68]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 71
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 68]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:26) [bci: 71]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:26) [bci: 71]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j188 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j188  <|@  <|@
f <@~|@floating>@ <|@
tid j177 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v572 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v572 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j177 
index: - 
=== Succesors ===
=== Usages ===
j188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j177 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j188 <|@
result v3|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@72481653
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v572 
lastLocationAccess: - 
=== Succesors ===
next: j178 
=== Usages ===
v180 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v572 lastLocationAccess: - #next: j178  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j178 <|@
result v4|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v179 
=== Usages ===
v180 
=== Predecessor ===
j188 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid v180 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j188 
y: j178 
=== Succesors ===
=== Usages ===
v179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j188 y: j178  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 v18 ?252 ?253 v166 ?250 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 ?252 ?253 v36 ?250 v133 ?249 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?4 ?251 ?255 ?254 ?252 ?253 v52 ?250 ?249 v140 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v180 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v182 
=== Usages ===
=== Predecessor ===
j178 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v180 #trueSuccessor: v181 #falseSuccessor: v182  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid a5 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 0]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 v194 v226 v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a6 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 3]
rawvalue: Begin
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v189 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@79ac25dd
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a6 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a6  <|@  <|@
tid ?249 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v118 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
bci: 5
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v189 
stateDuring: ?249 
=== Succesors ===
next: v12 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v189 stateDuring: ?249 #next: v12  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:15) [bci: 5]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v129 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid i67 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 57]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i68 i165 v166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v166 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1 
y: i67 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v166 
=== Succesors ===
trueSuccessor: v127 
falseSuccessor: v128 
=== Usages ===
=== Predecessor ===
v12 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v166 #trueSuccessor: v127 #falseSuccessor: v128  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 63]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v163  <|@  <|@
f <@*|@fixed>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
v127 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a149 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a149  <|@  <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@2112b4e8
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 8]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v140 ?250 ?252 v133 ?251 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?250 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a149 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a149 <|@
result v7|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v190 
stateDuring: ?250 
=== Succesors ===
next: v132 
=== Usages ===
=== Predecessor ===
v128 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v190 stateDuring: ?250 #next: v132  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v136 
=== Usages ===
=== Predecessor ===
a149 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v136  <|@  <|@
f <@~|@floating>@ <|@
tid a227 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: [Ljava.lang.StackTraceElement;
stableDimension: 0
stamp: n!# [Ljava/lang/StackTraceElement;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v204 v217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i323 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.checkHub(SubstrateAllocationSnippets.java:213) [bci: 39]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:124) [bci: 1] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v561 v357 v358 v386 v387 v415 v416 v560 v502 v503 v531 v532 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j347 <|@
result long[-1048576|0xfffffffffff00000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: -1048576
stableDimension: 0
stamp: i64 [-1048576] ⇊fffffffffff00000 ⇈fffffffffff00000
stampKind: i64
value: long[-1048576|0xfffffffffff00000]
=== Inputs ===
=== Succesors ===
=== Usages ===
j348 j379 j408 j495 j524 j553 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j349 <|@
result long[4136|0x1028] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStartOffset() [bci: -1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 4136
stableDimension: 0
stamp: i64 [4136] ⇊0000000000001028 ⇈0000000000001028
stampKind: i64
value: long[4136|0x1028]
=== Inputs ===
=== Succesors ===
=== Usages ===
j350 j380 j409 j496 j525 j554 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i352 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j353 j382 j411 j498 j527 j556 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j340 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.util.Counter.inc(Counter.java:190) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:94) [bci: 6] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v341 v374 v403 v490 v519 v548 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j335 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v336 v370 v399 v486 v515 v544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a228 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: java.util.Collections$EmptyList
stableDimension: 0
stamp: n!# Ljava/util/Collections$EmptyList;
stampKind: n -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v208 v219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j290 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 12] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v470 v317 v318 v319 v320 v321 v322 v471 v472 v474 v473 v469 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j281 <|@
result long[56|0x38] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: 56
stableDimension: 0
stamp: i64 [56] ⇊0000000000000038 ⇈0000000000000038
stampKind: i64
value: long[56|0x38]
=== Inputs ===
=== Succesors ===
=== Usages ===
j282 j439 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a265 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
rawvalue: com.oracle.svm.core.hub.DynamicHub
stableDimension: 0
stamp: a!# Ljava/lang/Class;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
j433 j274 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v133 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i13 
=== Succesors ===
=== Usages ===
v136 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v133 
=== Succesors ===
trueSuccessor: v135 
falseSuccessor: v134 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v133 #trueSuccessor: v135 #falseSuccessor: v134  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v135 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v155  <|@  <|@
f <@*|@fixed>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v135 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v150 
=== Usages ===
=== Predecessor ===
v136 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v150  <|@  <|@
f <@~|@floating>@ <|@
tid a41 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 35]
rawvalue: body
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v194 v191 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@d8e7d60
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a41 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a41  <|@  <|@
tid ?251 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
v150 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v191 
stateDuring: ?251 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
v134 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v191 stateDuring: ?251 #next: v139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v143 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v143  <|@  <|@
f <@~|@floating>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i13 
=== Succesors ===
=== Usages ===
v143 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v140 
=== Succesors ===
trueSuccessor: v142 
falseSuccessor: v141 
=== Usages ===
=== Predecessor ===
v139 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v140 #trueSuccessor: v142 #falseSuccessor: v141  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v159  <|@  <|@
f <@*|@fixed>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a151 
=== Usages ===
=== Predecessor ===
v143 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a151  <|@  <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@1c22e857
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?252 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i13 
=== Succesors ===
=== Usages ===
a151 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i13  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a151 <|@
result v12|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v192 
stateDuring: ?252 
=== Succesors ===
next: v146 
=== Usages ===
=== Predecessor ===
v141 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v192 stateDuring: ?252 #next: v146  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
a151 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v14  <|@  <|@
f <@*|@fixed>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
v146 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i165 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v15 
values: i67 i68 
=== Succesors ===
=== Usages ===
?255 v18 i68 ?254 v36 v52 ?253 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v15 values: i67 i68  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 1.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
osrLoop: false
peelings: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v14 
=== Succesors ===
next: v22 
=== Usages ===
i165 v19 v69 v38 v54 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v14 #next: v22  <|@  <|@
f <@~|@floating>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i165 
y: i1 
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i165 y: i1  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 12]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v18 
=== Succesors ===
trueSuccessor: v21 
falseSuccessor: v19 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v18 #trueSuccessor: v21 #falseSuccessor: v19  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a119 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a119  <|@  <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@4b8a4c3
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?253 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 17
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
a119 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a119 <|@
result v14|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 15
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v193 
stateDuring: ?253 
=== Succesors ===
next: v35 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v193 stateDuring: ?253 #next: v35  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v35 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:17) [bci: 15]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v40 
=== Usages ===
=== Predecessor ===
a119 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v40  <|@  <|@
f <@~|@floating>@ <|@
tid v36 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2 
y: i165 
=== Succesors ===
=== Usages ===
v40 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:18) [bci: 21]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v36 
=== Succesors ===
trueSuccessor: v38 
falseSuccessor: v37 
=== Usages ===
=== Predecessor ===
v35 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v36 #trueSuccessor: v38 #falseSuccessor: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v38 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v154  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v153 
=== Predecessor ===
v38 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v153 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v154 v155 
=== Succesors ===
next: j433 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v154 v155 #next: j433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j433 <|@
result v15|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a265 
=== Succesors ===
next: j434 
=== Usages ===
j448 
=== Predecessor ===
v153 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a265 #next: j434  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j434 <|@
result v16|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j435 
=== Usages ===
j448 
=== Predecessor ===
j433 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j435  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j435 <|@
result v17|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j436 
=== Usages ===
v606 v607 
=== Predecessor ===
j434 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j436  <|@  <|@
f <@~|@floating>@ <|@
tid v606 <|@
result [v17|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j436 v443 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j436 <|@
result v18|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
=== Succesors ===
next: j437 
=== Usages ===
j439 v598 a454 v599 v600 v601 v602 v603 v604 v605 
=== Predecessor ===
j435 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - #next: j437  <|@  <|@
f <@~|@floating>@ <|@
tid v607 <|@
result [v17|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j435 
index: - 
=== Succesors ===
=== Usages ===
j437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j435 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j437 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v607 
lastLocationAccess: - 
=== Succesors ===
next: v438 
=== Usages ===
v440 
=== Predecessor ===
j436 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v607 lastLocationAccess: - #next: v438  <|@  <|@
f <@~|@floating>@ <|@
tid j439 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j436 
y: j281 
=== Succesors ===
=== Usages ===
v440 v443 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j436 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v440 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j437 
y: j439 
=== Succesors ===
=== Usages ===
v438 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j437 y: j439  <|@  <|@
f <@~|@floating>@ <|@
tid j448 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j433 
y: j434 
=== Succesors ===
=== Usages ===
a449 v468 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j433 y: j434  <|@  <|@
f <@*|@fixed>@ <|@
tid v438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v440 
=== Succesors ===
trueSuccessor: v441 
falseSuccessor: v442 
=== Usages ===
=== Predecessor ===
j437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v440 #trueSuccessor: v441 #falseSuccessor: v442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a449 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a449  <|@  <|@
tid ?39 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:19) [bci: 24]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a449 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a449 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?39 
arguments: j448 
=== Succesors ===
next: v450 
=== Usages ===
a456 
=== Predecessor ===
v441 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?39 arguments: j448 #next: v450  <|@  <|@
f <@*|@fixed>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a449 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v443 
=== Usages ===
=== Predecessor ===
v438 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v443 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v606 
lastLocationAccess: - 
value: j439 
stateAfter: - 
=== Succesors ===
next: v459 
=== Usages ===
=== Predecessor ===
v442 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v606 lastLocationAccess: - value: j439 stateAfter: - #next: v459  <|@  <|@
f <@~|@floating>@ <|@
tid v599 <|@
result [v18|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v459 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v459 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v599 
=== Succesors ===
next: v468 
=== Usages ===
=== Predecessor ===
v443 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v599 #next: v468  <|@  <|@
f <@~|@floating>@ <|@
tid v598 <|@
result [v18|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v468 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v468 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v598 
lastLocationAccess: - 
value: j448 
stateAfter: - 
=== Succesors ===
next: v469 
=== Usages ===
=== Predecessor ===
v459 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v598 lastLocationAccess: - value: j448 stateAfter: - #next: v469  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
result [v18|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v469 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v469 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v600 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v470 
=== Usages ===
=== Predecessor ===
v468 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v600 lastLocationAccess: - value: j290 stateAfter: - #next: v470  <|@  <|@
f <@~|@floating>@ <|@
tid v601 <|@
result [v18|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v470 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v601 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v471 
=== Usages ===
=== Predecessor ===
v469 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v601 lastLocationAccess: - value: j290 stateAfter: - #next: v471  <|@  <|@
f <@~|@floating>@ <|@
tid v602 <|@
result [v18|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v602 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v472 
=== Usages ===
=== Predecessor ===
v470 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v602 lastLocationAccess: - value: j290 stateAfter: - #next: v472  <|@  <|@
f <@~|@floating>@ <|@
tid v603 <|@
result [v18|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v472 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v472 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v603 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v473 
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v603 lastLocationAccess: - value: j290 stateAfter: - #next: v473  <|@  <|@
f <@~|@floating>@ <|@
tid v604 <|@
result [v18|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v473 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v473 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v604 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v474 
=== Usages ===
=== Predecessor ===
v472 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v604 lastLocationAccess: - value: j290 stateAfter: - #next: v474  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result [v18|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j436 
index: - 
=== Succesors ===
=== Usages ===
v474 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j436 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v474 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v605 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a454 
=== Usages ===
=== Predecessor ===
v473 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v605 lastLocationAccess: - value: j290 stateAfter: - #next: a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a454 <|@
result v23|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j436 
=== Succesors ===
next: v455 
=== Usages ===
a456 
=== Predecessor ===
v474 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j436 #next: v455  <|@  <|@
f <@*|@fixed>@ <|@
tid v455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v451 
=== Predecessor ===
a454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a456 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v451 
values: a449 a454 
=== Succesors ===
=== Usages ===
a541 a220 v576 a214 v577 v578 a483 a512 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v451 values: a449 a454  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v450 v455 
=== Succesors ===
next: v219 
=== Usages ===
a456 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v450 v455 #next: v219  <|@  <|@
f <@~|@floating>@ <|@
tid v578 <|@
result [v24|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v219 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v219 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v578 
lastLocationAccess: - 
value: a228 
stateAfter: - 
=== Succesors ===
next: a483 
=== Usages ===
=== Predecessor ===
v451 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v578 lastLocationAccess: - value: a228 stateAfter: - #next: a483  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a483 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j501 
=== Usages ===
v608 j494 
=== Predecessor ===
v219 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j501  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a483 
index: - 
=== Succesors ===
=== Usages ===
j501 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a483 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j501 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v608 
lastLocationAccess: - 
=== Succesors ===
next: v485 
=== Usages ===
v486 v490 
=== Predecessor ===
a483 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v608 lastLocationAccess: - #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid v486 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j501 
y: j335 
=== Succesors ===
=== Usages ===
v485 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j501 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v486 
=== Succesors ===
trueSuccessor: v487 
falseSuccessor: v488 
=== Usages ===
=== Predecessor ===
j501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v486 #trueSuccessor: v487 #falseSuccessor: v488  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v487 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j494 
=== Usages ===
=== Predecessor ===
v485 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j494  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j494 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a483 
=== Succesors ===
next: v489 
=== Usages ===
v609 j495 j497 
=== Predecessor ===
v488 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a483 #next: v489  <|@  <|@
f <@~|@floating>@ <|@
tid v490 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j501 
y: j340 
=== Succesors ===
=== Usages ===
v489 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j501 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v489 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v490 
=== Succesors ===
trueSuccessor: v491 
falseSuccessor: v492 
=== Usages ===
=== Predecessor ===
j494 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v490 #trueSuccessor: v491 #falseSuccessor: v492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@~|@floating>@ <|@
tid j495 <|@
result v27|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j494 
y: j347 
=== Succesors ===
=== Usages ===
j496 v610 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j494 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j496 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j495 
y: j349 
=== Succesors ===
=== Usages ===
j497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j495 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j497 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j494 
y: j496 
=== Succesors ===
=== Usages ===
j498 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j494 y: j496  <|@  <|@
f <@~|@floating>@ <|@
tid j498 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j497 
y: i352 
=== Succesors ===
=== Usages ===
v610 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j497 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
result [v27|QWORD + v30|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j495 
index: j498 
=== Succesors ===
=== Usages ===
v502 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j495 index: j498  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v610 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v491 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v610 lastLocationAccess: - value: i323 stateAfter: - #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v502 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v503 
=== Usages ===
=== Predecessor ===
v489 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
result [v26|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j494 
index: - 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j494 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v609 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v492 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v609 lastLocationAccess: - value: i323 stateAfter: - #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v506 v507 v508 
=== Succesors ===
next: v217 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v507 v508 #next: v217  <|@  <|@
f <@~|@floating>@ <|@
tid v577 <|@
result [v24|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v217 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v577 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: a512 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v577 lastLocationAccess: - value: a227 stateAfter: - #next: a512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a512 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j530 
=== Usages ===
v611 j523 
=== Predecessor ===
v217 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j530  <|@  <|@
f <@~|@floating>@ <|@
tid v611 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a512 
index: - 
=== Succesors ===
=== Usages ===
j530 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a512 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j530 <|@
result v31|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v611 
lastLocationAccess: - 
=== Succesors ===
next: v514 
=== Usages ===
v515 v519 
=== Predecessor ===
a512 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v611 lastLocationAccess: - #next: v514  <|@  <|@
f <@~|@floating>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j335 
=== Succesors ===
=== Usages ===
v514 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v515 
=== Succesors ===
trueSuccessor: v516 
falseSuccessor: v517 
=== Usages ===
=== Predecessor ===
j530 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v515 #trueSuccessor: v516 #falseSuccessor: v517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v535 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v535  <|@  <|@
f <@*|@fixed>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v516 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j523 
=== Usages ===
=== Predecessor ===
v514 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j523  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j523 <|@
result v32|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a512 
=== Succesors ===
next: v518 
=== Usages ===
v612 j524 j526 
=== Predecessor ===
v517 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a512 #next: v518  <|@  <|@
f <@~|@floating>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j530 
y: j340 
=== Succesors ===
=== Usages ===
v518 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j530 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v519 
=== Succesors ===
trueSuccessor: v520 
falseSuccessor: v521 
=== Usages ===
=== Predecessor ===
j523 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v519 #trueSuccessor: v520 #falseSuccessor: v521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v531 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v531  <|@  <|@
f <@~|@floating>@ <|@
tid j524 <|@
result v33|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j523 
y: j347 
=== Succesors ===
=== Usages ===
j525 v613 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j523 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j525 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j524 
y: j349 
=== Succesors ===
=== Usages ===
j526 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j524 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j526 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j523 
y: j525 
=== Succesors ===
=== Usages ===
j527 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j523 y: j525  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v36|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j526 
y: i352 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j526 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v613 <|@
result [v33|QWORD + v36|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j524 
index: j527 
=== Succesors ===
=== Usages ===
v531 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j524 index: j527  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v531 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v613 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v537 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v613 lastLocationAccess: - value: i323 stateAfter: - #next: v537  <|@  <|@
f <@*|@fixed>@ <|@
tid v537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v531 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v532 
=== Usages ===
=== Predecessor ===
v518 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v532  <|@  <|@
f <@~|@floating>@ <|@
tid v612 <|@
result [v32|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j523 
index: - 
=== Succesors ===
=== Usages ===
v532 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j523 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v532 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v612 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v612 lastLocationAccess: - value: i323 stateAfter: - #next: v536  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v534 
=== Predecessor ===
v532 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v535 v536 v537 
=== Succesors ===
next: v215 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v535 v536 v537 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid v576 <|@
result [v24|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a456 
index: - 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a456 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a214 <|@
result v37|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a456 
=== Succesors ===
=== Usages ===
v215 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v576 
lastLocationAccess: - 
value: a214 
stateAfter: - 
=== Succesors ===
next: a541 
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v576 lastLocationAccess: - value: a214 stateAfter: - #next: a541  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a541 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: j559 
=== Usages ===
v614 j552 
=== Predecessor ===
v215 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: j559  <|@  <|@
f <@~|@floating>@ <|@
tid v614 <|@
result [v24|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a541 
index: - 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a541 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j559 <|@
result v38|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v614 
lastLocationAccess: - 
=== Succesors ===
next: v543 
=== Usages ===
v544 v548 
=== Predecessor ===
a541 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v614 lastLocationAccess: - #next: v543  <|@  <|@
f <@~|@floating>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j335 
=== Succesors ===
=== Usages ===
v543 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v544 
=== Succesors ===
trueSuccessor: v545 
falseSuccessor: v546 
=== Usages ===
=== Predecessor ===
j559 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v544 #trueSuccessor: v545 #falseSuccessor: v546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v564 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v564  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j552 
=== Usages ===
=== Predecessor ===
v543 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j552  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j552 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a541 
=== Succesors ===
next: v547 
=== Usages ===
v615 j553 j555 
=== Predecessor ===
v546 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a541 #next: v547  <|@  <|@
f <@~|@floating>@ <|@
tid v548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j559 
y: j340 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j559 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v548 
=== Succesors ===
trueSuccessor: v549 
falseSuccessor: v550 
=== Usages ===
=== Predecessor ===
j552 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v548 #trueSuccessor: v549 #falseSuccessor: v550  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v549 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v560 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v560  <|@  <|@
f <@~|@floating>@ <|@
tid j553 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j552 
y: j347 
=== Succesors ===
=== Usages ===
j554 v616 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j552 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j554 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j553 
y: j349 
=== Succesors ===
=== Usages ===
j555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j553 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j555 <|@
result v42|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j552 
y: j554 
=== Succesors ===
=== Usages ===
j556 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j552 y: j554  <|@  <|@
f <@~|@floating>@ <|@
tid j556 <|@
result v43|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j555 
y: i352 
=== Succesors ===
=== Usages ===
v616 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j555 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v616 <|@
result [v40|QWORD + v43|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j553 
index: j556 
=== Succesors ===
=== Usages ===
v560 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j553 index: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v616 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v566 
=== Usages ===
=== Predecessor ===
v549 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v616 lastLocationAccess: - value: i323 stateAfter: - #next: v566  <|@  <|@
f <@*|@fixed>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v560 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v550 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v561 
=== Usages ===
=== Predecessor ===
v547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v561  <|@  <|@
f <@~|@floating>@ <|@
tid v615 <|@
result [v39|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j552 
index: - 
=== Succesors ===
=== Usages ===
v561 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v615 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v565 
=== Usages ===
=== Predecessor ===
v550 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v615 lastLocationAccess: - value: i323 stateAfter: - #next: v565  <|@  <|@
f <@*|@fixed>@ <|@
tid v565 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
v561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v564 v565 v566 
=== Succesors ===
next: v221 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v564 v565 v566 #next: v221  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v221 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a220 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a220  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a220 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a456 
=== Succesors ===
next: a122 
=== Usages ===
v222 ?176 a32 
=== Predecessor ===
v221 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a456 #next: a122  <|@  <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@3039e548
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a220 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a220  <|@  <|@
tid a173 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@4ea2fb52
hasIdentity: true
objectId: 1
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?176 ?87 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?87 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 19
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a173 
=== Succesors ===
=== Usages ===
?103 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a173  <|@  <|@
tid ?103 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?87 
values: - 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?87 values: -  <|@  <|@
tid ?176 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a173 
materializedValue: a220 
=== Succesors ===
=== Usages ===
?257 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a173 materializedValue: a220  <|@  <|@
tid ?257 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?103 
values: - 
virtualObjectMappings: ?176 
=== Succesors ===
=== Usages ===
a122 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?103 values: - virtualObjectMappings: ?176  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a122 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v222 
stateDuring: ?257 
=== Succesors ===
next: v102 
=== Usages ===
=== Predecessor ===
a220 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v222 stateDuring: ?257 #next: v102  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
a122 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v102 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 32]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v120 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v120  <|@  <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@45c9d281
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a41 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a41  <|@  <|@
tid ?254 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 20
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
v120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
bci: 37
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v194 
stateDuring: ?254 
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v194 stateDuring: ?254 #next: v51  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:20) [bci: 37]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
v120 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v56  <|@  <|@
f <@~|@floating>@ <|@
tid v52 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@5398ae08
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i165 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i165  <|@  <|@
f <@*|@fixed>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:21) [bci: 42]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v52 
=== Succesors ===
trueSuccessor: v54 
falseSuccessor: v53 
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v52 #trueSuccessor: v54 #falseSuccessor: v53  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v158 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v158  <|@  <|@
f <@*|@fixed>@ <|@
tid v158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v157 
=== Predecessor ===
v54 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v157 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v158 v159 
=== Succesors ===
next: j274 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v158 v159 #next: j274  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j274 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:204) [bci: 1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a265 
=== Succesors ===
next: j275 
=== Usages ===
j292 
=== Predecessor ===
v157 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a265 #next: j275  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j275 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.heapBase() [bci: -1]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 27]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j276 
=== Usages ===
j292 
=== Predecessor ===
j274 >@ <|@
instruction <@ReadHeapBaseFixed|@com.oracle.svm.core.graal.nodes.ReadHeapBaseFixedNode>@ #next: j276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j276 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.threadlocal.FastThreadLocalBytes.getAddress() [bci: -1]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.getTLABInfo(GenScavengeAllocationSnippets.java:125) [bci: 3]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:58) [bci: 1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
=== Succesors ===
next: j277 
=== Usages ===
v587 v588 
=== Predecessor ===
j275 >@ <|@
instruction <@ReadIsolateThreadFixed|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFixedNode>@ #next: j277  <|@  <|@
f <@~|@floating>@ <|@
tid v587 <|@
result [v47|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j276 
index: - 
=== Succesors ===
=== Usages ===
j277 v286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j277 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
forceFixed: true
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabTop(GenScavengeAllocationSnippets.java:130) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 9]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
lastLocationAccess: - 
=== Succesors ===
next: j278 
=== Usages ===
j282 v579 a298 v580 v581 v582 v583 v584 v585 v586 
=== Predecessor ===
j276 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v587 lastLocationAccess: - #next: j278  <|@  <|@
f <@~|@floating>@ <|@
tid v588 <|@
result [v47|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j276 
index: - 
=== Succesors ===
=== Usages ===
j278 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j276 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j278 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationEnd
barrierType: NONE
forceFixed: true
location: TLAB.end
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.readTlabEnd(GenScavengeAllocationSnippets.java:135) [bci: 7]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 17]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v588 
lastLocationAccess: - 
=== Succesors ===
next: v280 
=== Usages ===
v283 
=== Predecessor ===
j277 >@ <|@
instruction <@CInterfaceRead|@com.oracle.svm.core.graal.nodes.CInterfaceReadNode>@ stateBefore: - guard: - address: v588 lastLocationAccess: - #next: v280  <|@  <|@
f <@~|@floating>@ <|@
tid j282 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 25]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j277 
y: j281 
=== Succesors ===
=== Usages ===
v283 v286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j277 y: j281  <|@  <|@
f <@~|@floating>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 59]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@1ce30209
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j278 
y: j282 
=== Succesors ===
=== Usages ===
v280 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j278 y: j282  <|@  <|@
f <@~|@floating>@ <|@
tid j292 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsObjectHeader(ObjectHeaderImpl.java:207) [bci: 30]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.encodeAsTLABObjectHeader(ObjectHeaderImpl.java:195) [bci: 3]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.encodeAsTLABObjectHeader(SubstrateAllocationSnippets.java:358) [bci: 7]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 9] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j274 
y: j275 
=== Succesors ===
=== Usages ===
a293 v316 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j274 y: j275  <|@  <|@
f <@*|@fixed>@ <|@
tid v280 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 65]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v283 
=== Succesors ===
trueSuccessor: v284 
falseSuccessor: v285 
=== Usages ===
=== Predecessor ===
j278 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v283 #trueSuccessor: v284 #falseSuccessor: v285  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v284 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:67) [bci: 108]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a293 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a293  <|@  <|@
tid ?55 <|@
d <@d|@=== Debug Properties ===
bci: 45
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:22) [bci: 45]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
a293 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a293 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: slowPathNewInstance(Word)Object
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callSlowNewInstance(ForeignCallDescriptor, Word) [bci: -1]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.callNewInstanceStub(SubstrateAllocationSnippets.java:363) [bci: 5]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 121]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?55 
arguments: j292 
=== Succesors ===
next: v294 
=== Usages ===
a300 
=== Predecessor ===
v284 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?55 arguments: j292 #next: v294  <|@  <|@
f <@*|@fixed>@ <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a293 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 68]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v286 
=== Usages ===
=== Predecessor ===
v280 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
accessName: Descriptor.AllocationTop
barrierType: NONE
location: TLAB.top
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.writeTlabTop(GenScavengeAllocationSnippets.java:140) [bci: 8]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 73]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v587 
lastLocationAccess: - 
value: j282 
stateAfter: - 
=== Succesors ===
next: v303 
=== Usages ===
=== Predecessor ===
v285 >@ <|@
instruction <@CInterfaceWrite|@com.oracle.svm.core.graal.nodes.CInterfaceWriteNode>@ stateBefore: - guard: - address: v587 lastLocationAccess: - value: j282 stateAfter: - #next: v303  <|@  <|@
f <@~|@floating>@ <|@
tid v580 <|@
result [v48|QWORD + 312] <|@
d <@d|@=== Debug Properties ===
displacement: 312
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:291) [bci: 44]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 80]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
address: v580 
=== Succesors ===
next: v316 
=== Usages ===
=== Predecessor ===
v286 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v580 #next: v316  <|@  <|@
f <@~|@floating>@ <|@
tid v579 <|@
result [v48|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.initializeHeaderOfNewObject(ObjectHeaderImpl.java:181) [bci: 35]
at com.oracle.svm.core.genscavenge.graal.GenScavengeAllocationSnippets.initializeObjectHeader(GenScavengeAllocationSnippets.java:110) [bci: 2]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:240) [bci: 6]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v579 
lastLocationAccess: - 
value: j292 
stateAfter: - 
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v579 lastLocationAccess: - value: j292 stateAfter: - #next: v317  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
result [v48|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v581 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v318 
=== Usages ===
=== Predecessor ===
v316 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v581 lastLocationAccess: - value: j290 stateAfter: - #next: v318  <|@  <|@
f <@~|@floating>@ <|@
tid v582 <|@
result [v48|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v318 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v582 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v317 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v582 lastLocationAccess: - value: j290 stateAfter: - #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v583 <|@
result [v48|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v583 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v583 lastLocationAccess: - value: j290 stateAfter: - #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
result [v48|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v584 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v321 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v584 lastLocationAccess: - value: j290 stateAfter: - #next: v321  <|@  <|@
f <@~|@floating>@ <|@
tid v585 <|@
result [v48|QWORD + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v585 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: v322 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v585 lastLocationAccess: - value: j290 stateAfter: - #next: v322  <|@  <|@
f <@~|@floating>@ <|@
tid v586 <|@
result [v48|QWORD + 48] <|@
d <@d|@=== Debug Properties ===
displacement: 48
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j277 
index: - 
=== Succesors ===
=== Usages ===
v322 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j277 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:203) [bci: 329]
at org.graalvm.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:158) [bci: 13]
at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:243) [bci: 32]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v586 
lastLocationAccess: - 
value: j290 
stateAfter: - 
=== Succesors ===
next: a298 
=== Usages ===
=== Predecessor ===
v321 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v586 lastLocationAccess: - value: j290 stateAfter: - #next: a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a298 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:250) [bci: 73]
at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 100]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j277 
=== Succesors ===
next: v299 
=== Usages ===
a300 
=== Predecessor ===
v322 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j277 #next: v299  <|@  <|@
f <@*|@fixed>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v295 
=== Predecessor ===
a298 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a300 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: a Ljava/lang/Object;
valueDescription: a -
=== Inputs ===
merge: v295 
values: a293 a298 
=== Succesors ===
=== Usages ===
a396 a209 v573 a199 v574 v575 a332 a367 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v295 values: a293 a298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:70) [bci: 126]
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(SubstrateAllocationSnippets.java:125) [bci: 29] Substitution
at com.oracle.svm.core.graal.snippets.SubstrateAllocationSnippets.allocateInstance(Class, long, boolean, boolean, AllocationSnippets$AllocationProfilingData) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v294 v299 
=== Succesors ===
next: v208 
=== Usages ===
a300 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v294 v299 #next: v208  <|@  <|@
f <@~|@floating>@ <|@
tid v575 <|@
result [v54|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v208 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v575 
lastLocationAccess: - 
value: a228 
stateAfter: - 
=== Succesors ===
next: a332 
=== Usages ===
=== Predecessor ===
v295 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v575 lastLocationAccess: - value: a228 stateAfter: - #next: a332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a332 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j356 
=== Usages ===
v589 j346 
=== Predecessor ===
v208 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j356  <|@  <|@
f <@~|@floating>@ <|@
tid v589 <|@
result [v54|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a332 
index: - 
=== Succesors ===
=== Usages ===
j356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a332 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j356 <|@
result v55|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v589 
lastLocationAccess: - 
=== Succesors ===
next: v334 
=== Usages ===
v336 v341 
=== Predecessor ===
a332 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v589 lastLocationAccess: - #next: v334  <|@  <|@
f <@~|@floating>@ <|@
tid v336 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j335 
=== Succesors ===
=== Usages ===
v334 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v334 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v336 
=== Succesors ===
trueSuccessor: v337 
falseSuccessor: v338 
=== Usages ===
=== Predecessor ===
j356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v336 #trueSuccessor: v337 #falseSuccessor: v338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v9|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v361 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v361  <|@  <|@
f <@*|@fixed>@ <|@
tid v361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v337 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j346 
=== Usages ===
=== Predecessor ===
v334 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j346  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j346 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a332 
=== Succesors ===
next: v339 
=== Usages ===
v590 j348 j351 
=== Predecessor ===
v338 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a332 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j356 
y: j340 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j356 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v342 
falseSuccessor: v343 
=== Usages ===
=== Predecessor ===
j346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v342 #falseSuccessor: v343  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v357 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v357  <|@  <|@
f <@~|@floating>@ <|@
tid j348 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j346 
y: j347 
=== Succesors ===
=== Usages ===
j350 v591 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j346 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j350 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j348 
y: j349 
=== Succesors ===
=== Usages ===
j351 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j348 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j351 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j346 
y: j350 
=== Succesors ===
=== Usages ===
j353 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j346 y: j350  <|@  <|@
f <@~|@floating>@ <|@
tid j353 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j351 
y: i352 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j351 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
result [v57|QWORD + v60|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j348 
index: j353 
=== Succesors ===
=== Usages ===
v357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j348 index: j353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v591 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v363 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v591 lastLocationAccess: - value: i323 stateAfter: - #next: v363  <|@  <|@
f <@*|@fixed>@ <|@
tid v363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v357 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v358 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v358  <|@  <|@
f <@~|@floating>@ <|@
tid v590 <|@
result [v56|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j346 
index: - 
=== Succesors ===
=== Usages ===
v358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j346 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v590 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v362 
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v590 lastLocationAccess: - value: i323 stateAfter: - #next: v362  <|@  <|@
f <@*|@fixed>@ <|@
tid v362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v360 
=== Predecessor ===
v358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v361 v362 v363 
=== Succesors ===
next: v204 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v361 v362 v363 #next: v204  <|@  <|@
f <@~|@floating>@ <|@
tid v574 <|@
result [v54|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v204 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v204 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v574 
lastLocationAccess: - 
value: a227 
stateAfter: - 
=== Succesors ===
next: a367 
=== Usages ===
=== Predecessor ===
v360 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v574 lastLocationAccess: - value: a227 stateAfter: - #next: a367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a367 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j385 
=== Usages ===
v592 j378 
=== Predecessor ===
v204 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j385  <|@  <|@
f <@~|@floating>@ <|@
tid v592 <|@
result [v54|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a367 
index: - 
=== Succesors ===
=== Usages ===
j385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j385 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v592 
lastLocationAccess: - 
=== Succesors ===
next: v369 
=== Usages ===
v370 v374 
=== Predecessor ===
a367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v592 lastLocationAccess: - #next: v369  <|@  <|@
f <@~|@floating>@ <|@
tid v370 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j335 
=== Succesors ===
=== Usages ===
v369 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v369 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v370 
=== Succesors ===
trueSuccessor: v371 
falseSuccessor: v372 
=== Usages ===
=== Predecessor ===
j385 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v370 #trueSuccessor: v371 #falseSuccessor: v372  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v8|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v390 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v390  <|@  <|@
f <@*|@fixed>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v371 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j378 
=== Usages ===
=== Predecessor ===
v369 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j378 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a367 
=== Succesors ===
next: v373 
=== Usages ===
v593 j379 j381 
=== Predecessor ===
v372 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a367 #next: v373  <|@  <|@
f <@~|@floating>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j385 
y: j340 
=== Succesors ===
=== Usages ===
v373 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j385 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v374 
=== Succesors ===
trueSuccessor: v375 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
j378 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v374 #trueSuccessor: v375 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v386 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v386  <|@  <|@
f <@~|@floating>@ <|@
tid j379 <|@
result v63|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j378 
y: j347 
=== Succesors ===
=== Usages ===
j380 v594 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j378 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j380 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j379 
y: j349 
=== Succesors ===
=== Usages ===
j381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j379 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j381 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j378 
y: j380 
=== Succesors ===
=== Usages ===
j382 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j378 y: j380  <|@  <|@
f <@~|@floating>@ <|@
tid j382 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j381 
y: i352 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j381 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v594 <|@
result [v63|QWORD + v66|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j379 
index: j382 
=== Succesors ===
=== Usages ===
v386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j379 index: j382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v594 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v392 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v594 lastLocationAccess: - value: i323 stateAfter: - #next: v392  <|@  <|@
f <@*|@fixed>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v373 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v593 <|@
result [v62|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j378 
index: - 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j378 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v593 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v593 lastLocationAccess: - value: i323 stateAfter: - #next: v391  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v389 
=== Predecessor ===
v387 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v389 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v390 v391 v392 
=== Succesors ===
next: v200 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v390 v391 v392 #next: v200  <|@  <|@
f <@~|@floating>@ <|@
tid v573 <|@
result [v54|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a300 
index: - 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a300 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a199 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 1 shift: 0
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a300 
=== Succesors ===
=== Usages ===
v200 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateCompression|@com.oracle.svm.core.graal.nodes.SubstrateCompressionNode>@ value: a300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v200 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v573 
lastLocationAccess: - 
value: a199 
stateAfter: - 
=== Succesors ===
next: a396 
=== Usages ===
=== Predecessor ===
v389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v573 lastLocationAccess: - value: a199 stateAfter: - #next: a396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a396 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.FixedValueAnchorNode.getObject(Object) [bci: -1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:96) [bci: 10] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: j414 
=== Usages ===
v595 j407 
=== Predecessor ===
v200 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: j414  <|@  <|@
f <@~|@floating>@ <|@
tid v595 <|@
result [v54|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: a396 
index: - 
=== Succesors ===
=== Usages ===
j414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a396 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j414 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.readHeaderFromObject(ObjectHeaderImpl.java:126) [bci: 22]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:97) [bci: 15] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v595 
lastLocationAccess: - 
=== Succesors ===
next: v398 
=== Usages ===
v399 v403 
=== Predecessor ===
a396 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v595 lastLocationAccess: - #next: v398  <|@  <|@
f <@~|@floating>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.hasRememberedSet(ObjectHeaderImpl.java:294) [bci: 10]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:98) [bci: 20] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j335 
=== Succesors ===
=== Usages ===
v398 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j335  <|@  <|@
f <@*|@fixed>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:99) [bci: 41] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v399 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v401 
=== Usages ===
=== Predecessor ===
j414 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v399 #trueSuccessor: v400 #falseSuccessor: v401  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:101) [bci: 44] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v419 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v419  <|@  <|@
f <@*|@fixed>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v400 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 45] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: j407 
=== Usages ===
=== Predecessor ===
v398 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j407 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:244) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
trackedPointer: false
=== Inputs ===
input: a396 
=== Succesors ===
next: v402 
=== Usages ===
v596 j408 j410 
=== Predecessor ===
v401 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a396 #next: v402  <|@  <|@
f <@~|@floating>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.testUnalignedBit(ObjectHeaderImpl.java:284) [bci: 10]
at com.oracle.svm.core.genscavenge.ObjectHeaderImpl.isAlignedHeaderUnsafe(ObjectHeaderImpl.java:264) [bci: 1]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:104) [bci: 46] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
x: j414 
y: j340 
=== Succesors ===
=== Usages ===
v402 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: j414 y: j340  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:105) [bci: 59] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
trueSuccessorProbability: 0.6
=== Inputs ===
condition: v403 
=== Succesors ===
trueSuccessor: v404 
falseSuccessor: v405 
=== Usages ===
=== Predecessor ===
j407 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v403 #trueSuccessor: v404 #falseSuccessor: v405  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:107) [bci: 62] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v415 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v415  <|@  <|@
f <@~|@floating>@ <|@
tid j408 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.util.UnsignedUtils.roundDown(UnsignedUtils.java:53) [bci: 8]
at com.oracle.svm.core.util.PointerUtils.roundDown(PointerUtils.java:51) [bci: 5]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getEnclosingAlignedHeapChunkFromPointer(AlignedHeapChunk.java:187) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:245) [bci: 6]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854775808 - 9223372036853727232] ⇈fffffffffff00000
=== Inputs ===
x: j407 
y: j347 
=== Succesors ===
=== Usages ===
j409 v597 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j407 y: j347  <|@  <|@
f <@~|@floating>@ <|@
tid j409 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectsStart(AlignedHeapChunk.java:121) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:257) [bci: 1]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [-9223372036854771672 - 9223372036853731368] ⇊0000000000001028 ⇈fffffffffff01028
=== Inputs ===
x: j408 
y: j349 
=== Succesors ===
=== Usages ===
j410 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j408 y: j349  <|@  <|@
f <@~|@floating>@ <|@
tid j410 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectOffset(AlignedHeapChunk.java:258) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:263) [bci: 2]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64
=== Inputs ===
x: j407 
y: j409 
=== Succesors ===
=== Usages ===
j411 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j407 y: j409  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.memoryOffsetToIndex(CardTable.java:150) [bci: 4]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.getObjectIndex(AlignedHeapChunk.java:264) [bci: 7]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:247) [bci: 18]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j410 
y: i352 
=== Succesors ===
=== Usages ===
v597 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j410 y: i352  <|@  <|@
f <@~|@floating>@ <|@
tid v597 <|@
result [v70|QWORD + v73|QWORD * 1 + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j408 
index: j411 
=== Succesors ===
=== Usages ===
v415 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j408 index: j411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.AlignedHeapChunk.dirtyCardForObjectOfAlignedHeapChunk(AlignedHeapChunk.java:251) [bci: 51]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:108) [bci: 73] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v597 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v404 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v597 lastLocationAccess: - value: i323 stateAfter: - #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:112) [bci: 77] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v416 
=== Usages ===
=== Predecessor ===
v402 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid v596 <|@
result [v69|QWORD - 8] <|@
d <@d|@=== Debug Properties ===
displacement: -8
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j407 
index: - 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j407 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: CardRememberedSet
nodeSourcePosition: at com.oracle.svm.core.genscavenge.CardTable.dirtyEntryAtIndex(CardTable.java:99) [bci: 9]
at com.oracle.svm.core.genscavenge.UnalignedHeapChunk.dirtyCardForObjectOfUnalignedHeapChunk(UnalignedHeapChunk.java:202) [bci: 41]
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(BarrierSnippets.java:113) [bci: 88] Substitution
at com.oracle.svm.core.genscavenge.graal.BarrierSnippets.postWriteBarrierSnippet(Object, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
nullCheck: false
stamp: void
volatileAccess: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v596 
lastLocationAccess: - 
value: i323 
stateAfter: - 
=== Succesors ===
next: v420 
=== Usages ===
=== Predecessor ===
v405 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v596 lastLocationAccess: - value: i323 stateAfter: - #next: v420  <|@  <|@
f <@*|@fixed>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v418 
=== Predecessor ===
v416 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v419 v420 v421 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v419 v420 v421 #next: v210  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a209 
=== Usages ===
=== Predecessor ===
v418 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a209 <|@
result v54|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -6] Placeholder
predefinedStamp: [null]
stamp: a!# Ljava/lang/Exception;
=== Inputs ===
object: a300 
=== Succesors ===
next: a123 
=== Usages ===
v211 ?172 a32 
=== Predecessor ===
v210 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a300 #next: a123  <|@  <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: a Ljava/lang/Throwable;
signature: [Ljdk.vm.ci.meta.JavaType;@496e847
stamp: void
targetMethod: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>
=== Inputs ===
arguments: a209 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a209  <|@  <|@
tid a169 <|@
d <@d|@=== Debug Properties ===
fields: [Lcom.oracle.svm.hosted.meta.HostedField;@7b7a5e38
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/Exception;
type: HostedType<java.lang.Exception   AnalysisType<java.lang.Exception, allocated: true, inHeap: false, inTypeCheck: true>>
=== Inputs ===
=== Succesors ===
=== Usages ===
?172 ?88 
=== Predecessor ===
- >@ <|@
instruction <@SubstrateVirtualInstance|@com.oracle.svm.core.graal.nodes.SubstrateVirtualInstanceNode>@  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 49
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 22
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a169 
=== Succesors ===
=== Usages ===
?116 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a169  <|@  <|@
tid ?116 <|@
d <@d|@=== Debug Properties ===
bci: 1
code: ResolvedJavaMethodBytecode<Exception.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Exception.java
sourceLine: 54
stackSize: 0
=== Inputs ===
outerFrameState: ?88 
values: - 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?88 values: -  <|@  <|@
tid ?172 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a169 
materializedValue: a209 
=== Succesors ===
=== Usages ===
?258 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a169 materializedValue: a209  <|@  <|@
tid ?258 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<Throwable.<init>()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Throwable.java
sourceLine: 255
stackSize: 0
=== Inputs ===
outerFrameState: ?116 
values: - 
virtualObjectMappings: ?172 
=== Succesors ===
=== Usages ===
a123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?116 values: - virtualObjectMappings: ?172  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a123 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 24
identity: ANY_LOCATION
polymorphic: false
stamp: a Ljava/lang/Throwable;
targetMethod: Direct#Throwable.fillInStackTrace
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v211 
stateDuring: ?258 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
a209 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v211 stateDuring: ?258 #next: v115  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
at java.lang.Exception.<init>(Exception.java:54) [bci: 1]
at ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
a123 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v27 
=== Predecessor ===
v115 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a32 <|@
result v75|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: a!# Ljava/lang/Exception;
valueDescription: a -
=== Inputs ===
merge: v27 
values: a220 a209 
=== Succesors ===
=== Usages ===
?85 v224 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v27 values: a220 a209  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(int, int, int) [bci: -4]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v72 v75 
=== Succesors ===
next: j223 
=== Usages ===
a32 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v72 v75 #next: j223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j223 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.snippets.KnownIntrinsics.readCallerStackPointer() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:66) [bci: 0] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: i64
=== Inputs ===
=== Succesors ===
next: v224 
=== Usages ===
v224 
=== Predecessor ===
v27 >@ <|@
instruction <@ReadCallerStackPointer|@com.oracle.svm.core.graal.nodes.ReadCallerStackPointerNode>@ #next: v224  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: AFTER_EXCEPTION_BCI
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - - - a32 
=== Succesors ===
=== Usages ===
v224 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - - a32  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v224 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: unwindExceptionWithoutCalleeSavedRegisters(Throwable,Pointer)void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
nodeSourcePosition: at com.oracle.svm.core.graal.snippets.SubstrateIntrinsics.runtimeCall(ForeignCallDescriptor, Throwable, Pointer) [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:70) [bci: 24] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?85 
arguments: a32 j223 
=== Succesors ===
next: v225 
=== Usages ===
=== Predecessor ===
j223 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?85 arguments: a32 j223 #next: v225  <|@  <|@
f <@*|@fixed>@ <|@
tid v225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.svm.core.graal.nodes.UnreachableNode.unreachable() [bci: -1]
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(ExceptionSnippets.java:72) [bci: 27] Substitution
at com.oracle.svm.core.graal.snippets.ExceptionSnippets.unwindSnippet(Throwable, boolean) [bci: -1] Substitution
at ftest31.example_ftest31(int, int, int) [bci: -1]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v224 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: a121 
=== Usages ===
=== Predecessor ===
v56 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a121  <|@  <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@22db526e
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
bci: 53
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 i165 
=== Succesors ===
=== Usages ===
a121 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a121 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 53
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v195 
stateDuring: ?255 
=== Succesors ===
next: v66 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v195 stateDuring: ?255 #next: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:23) [bci: 53]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
a121 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v69  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 57]
stamp: i32
=== Inputs ===
x: i165 
y: i67 
=== Succesors ===
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i165 y: i67  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:16) [bci: 10]
stamp: void
=== Inputs ===
loopBegin: v15 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v15  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 63]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
loopBegin: v15 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v15 #next: v162  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
v19 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v162 v163 
=== Succesors ===
next: v124 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v162 v163 #next: v124  <|@  <|@
f <@~|@floating>@ <|@
tid a76 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 66]
rawvalue: End
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v226 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v226 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@290dd16e
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a5 a76 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a5 a76  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 68
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v124 <|@
d <@d|@=== Debug Properties ===
bci: 68
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v226 
stateDuring: ?256 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v226 stateDuring: ?256 #next: v83  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 68]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v238 
=== Usages ===
=== Predecessor ===
v124 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v238  <|@  <|@
f <@~|@floating>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v238 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v238 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v239 
=== Succesors ===
trueSuccessor: v240 
falseSuccessor: v241 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v239 #trueSuccessor: v240 #falseSuccessor: v241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v242 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v242  <|@  <|@
tid ?82 <|@
d <@d|@=== Debug Properties ===
bci: 71
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:25) [bci: 68]
rethrowException: false
sourceFile: ftest31.java
sourceLine: 26
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
v242 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?82 
=== Succesors ===
next: v248 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?82 #next: v248  <|@  <|@
f <@*|@fixed>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:26) [bci: 71]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v242 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v241 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v247 
=== Usages ===
=== Predecessor ===
v238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v247  <|@  <|@
f <@*|@fixed>@ <|@
tid v247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest31.example_ftest31(ftest31.java:26) [bci: 71]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v241 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v183 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v183  <|@  <|@
tid ?4 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest31.example_ftest31(int, int, int)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: ftest31.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 i2 i3 - 
=== Succesors ===
=== Usages ===
v183 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 i2 i3 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@70c1e282
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?4 
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v182 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?4 #next: v185  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v183 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD, y: v3|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH v0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v1|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v12|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction v14|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v13|DWORD, y: v2|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: v0|DWORD v1|DWORD v2|DWORD v13|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = INC v13|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|DWORD] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [v13|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v0|DWORD, y: v13|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v15|QWORD = MOVE v84|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v16|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD = MOV [v17|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [v17|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = LEA [v18|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = SUB (x: v15|QWORD, ~y: v16|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|QWORD, y: v19|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v17|QWORD + 24], y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v18|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v18|QWORD], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v18|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[.] = MOVE v18|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v23|QWORD[.]] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 32], y: v82|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 24], y: v80|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v31|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|QWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v24|QWORD[.] + 16], y: v37|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v38|QWORD = MOV [v24|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: v24|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v24|QWORD[.]] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v75|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v76|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: v75|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVE v85|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [v47|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = MOV [v47|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD = LEA [v48|QWORD + 56] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = SUB (x: v45|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v50|QWORD, y: v49|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD + 24], y: v50|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 312] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD], y: v51|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v48|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD[.]] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [v54|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 32], y: v83|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 24], y: v81|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v61|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = COMPRESSPOINTER (input: v54|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v54|QWORD[.] + 16], y: v67|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV [v54|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: v54|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v54|QWORD[.]] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v38|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = AND v39|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = LEA [v40|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v42|QWORD = SUB (x: v39|QWORD, ~y: v41|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD = SHR v42|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v40|QWORD + v43|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v25|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|QWORD = AND v26|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = LEA [v27|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = SUB (x: v26|QWORD, ~y: v28|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = SHR v29|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v27|QWORD + v30|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v32|QWORD = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v31|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD = AND v32|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = LEA [v33|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = SUB (x: v32|QWORD, ~y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|QWORD = SHR v35|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v33|QWORD + v36|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v61|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|QWORD = AND v62|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = LEA [v63|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = SUB (x: v62|QWORD, ~y: v64|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SHR v65|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v63|QWORD + v66|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v55|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|QWORD = AND v56|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v57|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = SUB (x: v56|QWORD, ~y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = SHR v59|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v57|QWORD + v60|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v69|QWORD = MOVE v54|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction TESTCONSTBRANCH v68|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = AND v69|QWORD y: -1048576 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = LEA [v70|QWORD + 4136] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = SUB (x: v69|QWORD, ~y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = SHR v72|QWORD y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB [v70|QWORD + v73|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v26|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v32|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v39|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v56|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v69|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB [v62|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v21|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = MOVE v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD[.]] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: v0|DWORD v1|DWORD v2|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[52, 53[[62, 64[[78, 80[[94, 95[[104, 106[[140, 141[[408, 410[[508, 510[[534, 536[[544, 546[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[50, 53[[62, 63[[78, 79[[92, 95[[104, 105[[138, 141[[408, 409[[508, 509[[524, 526[[534, 535[[544, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[48, 53[[62, 63[[78, 79[[90, 95[[104, 105[[136, 141[[406, 409[[506, 509[[522, 526[[532, 535[[542, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 116[[556, 559[2 MustHaveRegister 30 ShouldHaveRegister 74 MustHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rsi|- [4, 116[[556, 559[4 MustHaveRegister 42 MustHaveRegister 86 ShouldHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rdx|- [6, 116[[556, 559[6 MustHaveRegister 58 MustHaveRegister 100 ShouldHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [16, 120[[128, 136[16 MustHaveRegister 20 ShouldHaveRegister 48 ShouldHaveRegister 90 ShouldHaveRegister 115 LiveAtLoopEnd 136 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q -1 [46, 116[46 MustHaveRegister 50 ShouldHaveRegister 92 ShouldHaveRegister 115 LiveAtLoopEnd  "NoSpillStore"
  v12|q QWORD "[v12|q]" v12|q rax|q [64, 65[64 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v78|d [72, 112[74 ShouldHaveRegister 86 MustHaveRegister 100 MustHaveRegister 112 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q rax|q [80, 81[80 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[v15|q]" v15|q v84|q [162, 174[162 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q r14|q [164, 175[164 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[v17|q]" v17|q r15|q [166, 180[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[v18|q]" v18|q -1 [168, 198[168 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[v19|q]" v19|q -1 [170, 176[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[v20|q]" v20|q -1 [172, 180[172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[v21|q]" v21|q v15|q [174, 184[[530, 532[174 MustHaveRegister 184 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[v22|q]" v22|q rax|q [536, 539[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[v23|q]" v23|q v18|q [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[v24|q]" v24|q v23|q [202, 236[[318, 417[206 MustHaveRegister 208 MustHaveRegister 218 ShouldHaveRegister 328 MustHaveRegister 330 MustHaveRegister 340 ShouldHaveRegister 366 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 380 ShouldHaveRegister 406 ShouldHaveRegister 416 ShouldHaveRegister  "NoSpillStore"
  v25|q QWORD "[v25|q]" v25|q -1 [208, 212[[216, 220[208 MustHaveRegister 210 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[v26|q]" v26|q v24|q [218, 228[[318, 320[218 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[v27|q]" v27|q v26|q [224, 232[224 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[v28|q]" v28|q -1 [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[v29|q]" v29|q v26|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[v30|q]" v30|q v29|q [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[v31|q]" v31|q -1 [330, 334[[338, 342[330 MustHaveRegister 332 ShouldHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[v32|q]" v32|q v24|q [340, 350[[358, 360[340 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[v33|q]" v33|q v32|q [346, 354[346 MustHaveRegister 348 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[v34|q]" v34|q -1 [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[v35|q]" v35|q v32|q [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[v36|q]" v36|q v35|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[v37|q]" v37|q v24|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[v38|q]" v38|q -1 [370, 374[[378, 382[370 MustHaveRegister 372 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[v39|q]" v39|q v24|q [380, 390[[398, 400[380 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[v40|q]" v40|q v39|q [386, 394[386 MustHaveRegister 388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[v41|q]" v41|q -1 [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v39|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[v43|q]" v43|q v42|q [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[v44|q]" v44|q rax|q [410, 411[410 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v85|q [244, 256[244 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q r14|q [246, 257[246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q r15|q [248, 262[248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [250, 280[250 MustHaveRegister 254 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[v49|q]" v49|q -1 [252, 258[252 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q -1 [254, 262[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q v45|q [256, 266[[540, 542[256 MustHaveRegister 266 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q rax|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q v48|q [280, 283[280 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[v54|q]" v54|q v53|q [284, 318[[418, 517[288 MustHaveRegister 290 MustHaveRegister 300 ShouldHaveRegister 428 MustHaveRegister 430 MustHaveRegister 440 ShouldHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister 480 ShouldHaveRegister 506 ShouldHaveRegister 516 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q -1 [290, 294[[298, 302[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v54|q [300, 310[[418, 420[300 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[v57|q]" v57|q v56|q [306, 314[306 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q -1 [308, 311[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q v56|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q v59|q [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q -1 [430, 434[[438, 442[430 MustHaveRegister 432 ShouldHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[v62|q]" v62|q v54|q [440, 450[[458, 460[440 MustHaveRegister 446 MustHaveRegister 450 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v62|q [446, 454[446 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q -1 [448, 451[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[v65|q]" v65|q v62|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|q [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q v54|q [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [470, 474[[478, 482[470 MustHaveRegister 472 ShouldHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[v69|q]" v69|q v54|q [480, 490[[498, 500[480 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q v69|q [486, 494[486 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [488, 491[488 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[v72|q]" v72|q v69|q [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q v72|q [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q rax|q [510, 511[510 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[v75|q]" v75|q v24|q [518, 527[522 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [520, 524[520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[v77|q]" v77|q rax|q [106, 107[106 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[v78|d]" v78|d v13|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [134, 138[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[v81|q]" v81|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[v82|q]" v82|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[v84|q]" v84|q -1 [160, 162[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [242, 244[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[52, 53[[62, 64[[78, 80[[94, 95[[104, 106[[140, 141[[408, 410[[508, 510[[534, 536[[544, 546[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[50, 53[[62, 63[[78, 79[[92, 95[[104, 105[[138, 141[[408, 409[[508, 509[[524, 526[[534, 535[[544, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[48, 53[[62, 63[[78, 79[[90, 95[[104, 105[[136, 141[[406, 409[[506, 509[[522, 526[[532, 535[[542, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "SpillInDominator"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "SpillInDominator"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "SpillInDominator"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "SpillInDominator"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [46, 51[46 MustHaveRegister 50 ShouldHaveRegister  "SpillInDominator"
  v12|q QWORD "[rax|q]" v12|q rax|q [64, 65[64 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v78|d [72, 76[74 ShouldHaveRegister  "SpillInDominator"
  v14|q QWORD "[rax|q]" v14|q rax|q [80, 81[80 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v84|q [162, 174[162 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q r14|q [164, 175[164 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q r15|q [166, 180[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [168, 198[168 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [170, 176[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [172, 180[172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [174, 184[[530, 532[174 MustHaveRegister 184 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [536, 539[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v18|q [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [202, 236[[318, 407[206 MustHaveRegister 208 MustHaveRegister 218 ShouldHaveRegister 328 MustHaveRegister 330 MustHaveRegister 340 ShouldHaveRegister 366 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 380 ShouldHaveRegister 406 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [208, 212[[216, 220[208 MustHaveRegister 210 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [218, 228[[318, 320[218 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [224, 232[224 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [330, 334[[338, 342[330 MustHaveRegister 332 ShouldHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [340, 350[[358, 360[340 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [346, 354[346 MustHaveRegister 348 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [370, 374[[378, 382[370 MustHaveRegister 372 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [380, 390[[398, 400[380 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [386, 394[386 MustHaveRegister 388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [410, 411[410 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v85|q [244, 256[244 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q r14|q [246, 257[246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q r15|q [248, 262[248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q -1 [250, 280[250 MustHaveRegister 254 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [252, 258[252 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [254, 262[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v45|q [256, 266[[540, 542[256 MustHaveRegister 266 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q rax|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v48|q [280, 283[280 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v53|q [284, 318[[418, 507[288 MustHaveRegister 290 MustHaveRegister 300 ShouldHaveRegister 428 MustHaveRegister 430 MustHaveRegister 440 ShouldHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister 480 ShouldHaveRegister 506 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdi|q]" v55|q -1 [290, 294[[298, 302[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v54|q [300, 310[[418, 420[300 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v56|q [306, 314[306 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [308, 311[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v56|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [430, 434[[438, 442[430 MustHaveRegister 432 ShouldHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v54|q [440, 450[[458, 460[440 MustHaveRegister 446 MustHaveRegister 450 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q v62|q [446, 454[446 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rcx|q]" v64|q -1 [448, 451[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v62|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q v65|q [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v54|q [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q -1 [470, 474[[478, 482[470 MustHaveRegister 472 ShouldHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v54|q [480, 490[[498, 500[480 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rdi|q]" v70|q v69|q [486, 494[486 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rcx|q]" v71|q -1 [488, 491[488 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v69|q [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v72|q [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [510, 511[510 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q v24|q [518, 527[522 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [520, 524[520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|q [106, 107[106 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v13|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [134, 138[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [160, 162[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdi|q]" v85|q -1 [242, 244[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "SpillInDominator"
  v87|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "SpillInDominator"
  v88|d DWORD "[vstack:3|d]" v2|d v2|d [14, 23[ "SpillInDominator"
  v89|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "SpillInDominator"
  v90|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "SpillInDominator"
  v91|d DWORD "[vstack:3|d]" v2|d v2|d [23, 56[ "SpillInDominator"
  v92|q QWORD "[vstack:2|q]" v5|q v5|q [23, 72[48 ShouldHaveRegister  "SpillInDominator"
  v93|d DWORD "[vstack:0|d]" v0|d v0|d [23, 72[30 ShouldHaveRegister  "SpillInDominator"
  v94|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "SpillInDominator"
  v95|d DWORD "[rdi|d]" v0|d v0|d [72, 76[74 MustHaveRegister  "SpillInDominator"
  v96|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "SpillInDominator"
  v97|q QWORD "[vstack:2|q]" v5|q v5|q [72, 76[ "SpillInDominator"
  v98|d DWORD "[rdx|d]" v2|d v2|d [56, 60[58 MustHaveRegister  "SpillInDominator"
  v99|d DWORD "[vstack:1|d]" v1|d v1|d [44, 49[ "SpillInDominator"
  v100|d DWORD "[vstack:1|d]" v1|d v1|d [49, 51[ "SpillInDominator"
  v101|q QWORD "[vstack:5|q]" v11|q v11|q [51, 72[ "SpillInDominator"
  v102|d DWORD "[vstack:1|d]" v1|d v1|d [51, 72[ "SpillInDominator"
  v103|d DWORD "[vstack:1|d]" v1|d v1|d [72, 76[ "SpillInDominator"
  v104|q QWORD "[vstack:5|q]" v11|q v11|q [72, 76[ "SpillInDominator"
  v105|d DWORD "[vstack:3|d]" v2|d v2|d [60, 61[ "SpillInDominator"
  v106|d DWORD "[vstack:3|d]" v2|d v2|d [61, 72[ "SpillInDominator"
  v107|d DWORD "[vstack:3|d]" v2|d v2|d [72, 76[ "SpillInDominator"
  v108|d DWORD "[vstack:0|d]" v0|d v0|d [76, 77[ "SpillInDominator"
  v109|d DWORD "[vstack:6|d]" v13|d v13|d [76, 77[ "SpillInDominator"
  v110|d DWORD "[vstack:1|d]" v1|d v1|d [76, 77[ "SpillInDominator"
  v111|q QWORD "[vstack:2|q]" v5|q v5|q [76, 77[ "SpillInDominator"
  v112|q QWORD "[vstack:5|q]" v11|q v11|q [76, 77[ "SpillInDominator"
  v113|d DWORD "[vstack:3|d]" v2|d v2|d [76, 77[ "SpillInDominator"
  v114|d DWORD "[vstack:1|d]" v1|d v1|d [77, 116[86 ShouldHaveRegister 115 LiveAtLoopEnd  "SpillInDominator"
  v115|d DWORD "[vstack:6|d]" v13|d v13|d [77, 84[ "SpillInDominator"
  v116|q QWORD "[vstack:2|q]" v5|q v5|q [77, 120[[128, 132[90 ShouldHaveRegister 115 LiveAtLoopEnd  "SpillInDominator"
  v117|q QWORD "[vstack:5|q]" v11|q v11|q [77, 116[92 ShouldHaveRegister 115 LiveAtLoopEnd  "SpillInDominator"
  v118|d DWORD "[vstack:3|d]" v2|d v2|d [77, 116[100 ShouldHaveRegister 115 LiveAtLoopEnd  "SpillInDominator"
  v119|d DWORD "[vstack:0|d]" v0|d v0|d [77, 116[115 LiveAtLoopEnd  "SpillInDominator"
  v120|d DWORD "[rax|d]" v13|d v13|d [84, 88[86 MustHaveRegister  "SpillInDominator"
  v121|d DWORD "[rsi|d]" v1|d v1|d [556, 559[ "SpillInDominator"
  v122|q QWORD "[rax|q]" v5|q v5|q [132, 136[136 ShouldHaveRegister  "SpillInDominator"
  v123|d DWORD "[rdx|d]" v2|d v2|d [556, 559[ "SpillInDominator"
  v124|d DWORD "[rdi|d]" v0|d v0|d [556, 559[ "SpillInDominator"
  v125|d DWORD "[vstack:6|d]" v13|d v13|d [88, 93[ "SpillInDominator"
  v126|d DWORD "[vstack:6|d]" v13|d v13|d [93, 98[ "SpillInDominator"
  v127|d DWORD "[rax|d]" v13|d v13|d [98, 102[100 MustHaveRegister  "SpillInDominator"
  v128|d DWORD "[vstack:6|d]" v13|d v13|d [102, 103[ "SpillInDominator"
  v129|d DWORD "[vstack:6|d]" v13|d v13|d [103, 110[ "SpillInDominator"
  v130|d DWORD "[rax|d]" v13|d v13|d [110, 112[112 ShouldHaveRegister  "SpillInDominator"
  v131|q QWORD "[vstack:7|q]" v24|q v24|q [407, 414[ "OneSpillStore"
  v132|q QWORD "[vstack:8|q]" v54|q v54|q [507, 514[ "OneSpillStore"
  v133|q QWORD "[rdx|q]" v24|q v24|q [414, 417[416 ShouldHaveRegister  "OneSpillStore"
  v134|q QWORD "[rdx|q]" v54|q v54|q [514, 517[516 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[52, 53[[62, 64[[78, 80[[94, 95[[104, 106[[140, 141[[408, 410[[508, 510[[534, 536[[544, 546[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[50, 53[[62, 63[[78, 79[[92, 95[[104, 105[[138, 141[[408, 409[[508, 509[[524, 526[[534, 535[[544, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[48, 53[[62, 63[[78, 79[[90, 95[[104, 105[[136, 141[[406, 409[[506, 509[[522, 526[[532, 535[[542, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "StoreAtDefinition"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [46, 51[46 MustHaveRegister 50 ShouldHaveRegister  "StoreAtDefinition"
  v12|q QWORD "[rax|q]" v12|q rax|q [64, 65[64 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v78|d [72, 76[74 ShouldHaveRegister  "StoreAtDefinition"
  v14|q QWORD "[rax|q]" v14|q rax|q [80, 81[80 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v84|q [162, 174[162 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q r14|q [164, 175[164 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q r15|q [166, 180[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [168, 198[168 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [170, 176[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [172, 180[172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [174, 184[[530, 532[174 MustHaveRegister 184 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [536, 539[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v18|q [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [202, 236[[318, 407[206 MustHaveRegister 208 MustHaveRegister 218 ShouldHaveRegister 328 MustHaveRegister 330 MustHaveRegister 340 ShouldHaveRegister 366 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 380 ShouldHaveRegister 406 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [208, 212[[216, 220[208 MustHaveRegister 210 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [218, 228[[318, 320[218 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [224, 232[224 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [330, 334[[338, 342[330 MustHaveRegister 332 ShouldHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [340, 350[[358, 360[340 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [346, 354[346 MustHaveRegister 348 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [370, 374[[378, 382[370 MustHaveRegister 372 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [380, 390[[398, 400[380 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [386, 394[386 MustHaveRegister 388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [410, 411[410 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v85|q [244, 256[244 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q r14|q [246, 257[246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q r15|q [248, 262[248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q -1 [250, 280[250 MustHaveRegister 254 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [252, 258[252 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [254, 262[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v45|q [256, 266[[540, 542[256 MustHaveRegister 266 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q rax|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v48|q [280, 283[280 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v53|q [284, 318[[418, 507[288 MustHaveRegister 290 MustHaveRegister 300 ShouldHaveRegister 428 MustHaveRegister 430 MustHaveRegister 440 ShouldHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister 480 ShouldHaveRegister 506 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdi|q]" v55|q -1 [290, 294[[298, 302[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v54|q [300, 310[[418, 420[300 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v56|q [306, 314[306 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [308, 311[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v56|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [430, 434[[438, 442[430 MustHaveRegister 432 ShouldHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v54|q [440, 450[[458, 460[440 MustHaveRegister 446 MustHaveRegister 450 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q v62|q [446, 454[446 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rcx|q]" v64|q -1 [448, 451[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v62|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q v65|q [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v54|q [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q -1 [470, 474[[478, 482[470 MustHaveRegister 472 ShouldHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v54|q [480, 490[[498, 500[480 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rdi|q]" v70|q v69|q [486, 494[486 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rcx|q]" v71|q -1 [488, 491[488 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v69|q [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v72|q [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [510, 511[510 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q v24|q [518, 527[522 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [520, 524[520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|q [106, 107[106 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v13|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [134, 138[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [160, 162[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdi|q]" v85|q -1 [242, 244[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "StoreAtDefinition"
  v87|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "StoreAtDefinition"
  v88|d DWORD "[vstack:3|d]" v2|d v2|d [14, 23[ "StoreAtDefinition"
  v89|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "StoreAtDefinition"
  v90|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "StoreAtDefinition"
  v91|d DWORD "[vstack:3|d]" v2|d v2|d [23, 56[ "StoreAtDefinition"
  v92|q QWORD "[vstack:2|q]" v5|q v5|q [23, 72[48 ShouldHaveRegister  "StoreAtDefinition"
  v93|d DWORD "[vstack:0|d]" v0|d v0|d [23, 72[30 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "StoreAtDefinition"
  v95|d DWORD "[rdi|d]" v0|d v0|d [72, 76[74 MustHaveRegister  "StoreAtDefinition"
  v96|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "StoreAtDefinition"
  v97|q QWORD "[vstack:2|q]" v5|q v5|q [72, 76[ "StoreAtDefinition"
  v98|d DWORD "[rdx|d]" v2|d v2|d [56, 60[58 MustHaveRegister  "StoreAtDefinition"
  v99|d DWORD "[vstack:1|d]" v1|d v1|d [44, 49[ "StoreAtDefinition"
  v100|d DWORD "[vstack:1|d]" v1|d v1|d [49, 51[ "StoreAtDefinition"
  v101|q QWORD "[vstack:5|q]" v11|q v11|q [51, 72[ "StoreAtDefinition"
  v102|d DWORD "[vstack:1|d]" v1|d v1|d [51, 72[ "StoreAtDefinition"
  v103|d DWORD "[vstack:1|d]" v1|d v1|d [72, 76[ "StoreAtDefinition"
  v104|q QWORD "[vstack:5|q]" v11|q v11|q [72, 76[ "StoreAtDefinition"
  v105|d DWORD "[vstack:3|d]" v2|d v2|d [60, 61[ "StoreAtDefinition"
  v106|d DWORD "[vstack:3|d]" v2|d v2|d [61, 72[ "StoreAtDefinition"
  v107|d DWORD "[vstack:3|d]" v2|d v2|d [72, 76[ "StoreAtDefinition"
  v108|d DWORD "[vstack:0|d]" v0|d v0|d [76, 77[ "StoreAtDefinition"
  v109|d DWORD "[vstack:6|d]" v13|d v13|d [76, 77[ "StoreAtDefinition"
  v110|d DWORD "[vstack:1|d]" v1|d v1|d [76, 77[ "StoreAtDefinition"
  v111|q QWORD "[vstack:2|q]" v5|q v5|q [76, 77[ "StoreAtDefinition"
  v112|q QWORD "[vstack:5|q]" v11|q v11|q [76, 77[ "StoreAtDefinition"
  v113|d DWORD "[vstack:3|d]" v2|d v2|d [76, 77[ "StoreAtDefinition"
  v114|d DWORD "[vstack:1|d]" v1|d v1|d [77, 116[86 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v115|d DWORD "[vstack:6|d]" v13|d v13|d [77, 84[ "StoreAtDefinition"
  v116|q QWORD "[vstack:2|q]" v5|q v5|q [77, 120[[128, 132[90 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v117|q QWORD "[vstack:5|q]" v11|q v11|q [77, 116[92 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v118|d DWORD "[vstack:3|d]" v2|d v2|d [77, 116[100 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v119|d DWORD "[vstack:0|d]" v0|d v0|d [77, 116[115 LiveAtLoopEnd  "StoreAtDefinition"
  v120|d DWORD "[rax|d]" v13|d v13|d [84, 88[86 MustHaveRegister  "StoreAtDefinition"
  v121|d DWORD "[rsi|d]" v1|d v1|d [556, 559[ "StoreAtDefinition"
  v122|q QWORD "[rax|q]" v5|q v5|q [132, 136[136 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[rdx|d]" v2|d v2|d [556, 559[ "StoreAtDefinition"
  v124|d DWORD "[rdi|d]" v0|d v0|d [556, 559[ "StoreAtDefinition"
  v125|d DWORD "[vstack:6|d]" v13|d v13|d [88, 93[ "StoreAtDefinition"
  v126|d DWORD "[vstack:6|d]" v13|d v13|d [93, 98[ "StoreAtDefinition"
  v127|d DWORD "[rax|d]" v13|d v13|d [98, 102[100 MustHaveRegister  "StoreAtDefinition"
  v128|d DWORD "[vstack:6|d]" v13|d v13|d [102, 103[ "StoreAtDefinition"
  v129|d DWORD "[vstack:6|d]" v13|d v13|d [103, 110[ "StoreAtDefinition"
  v130|d DWORD "[rax|d]" v13|d v13|d [110, 112[112 ShouldHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[vstack:7|q]" v24|q v24|q [407, 414[ "OneSpillStore"
  v132|q QWORD "[vstack:8|q]" v54|q v54|q [507, 514[ "OneSpillStore"
  v133|q QWORD "[rdx|q]" v24|q v24|q [414, 417[416 ShouldHaveRegister  "OneSpillStore"
  v134|q QWORD "[rdx|q]" v54|q v54|q [514, 517[516 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[34, 36[[52, 53[[62, 64[[78, 80[[94, 95[[104, 106[[140, 141[[408, 410[[508, 510[[534, 536[[544, 546[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 6[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoSpillStore"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 4[[22, 25[[34, 35[[50, 53[[62, 63[[78, 79[[92, 95[[104, 105[[138, 141[[408, 409[[508, 509[[524, 526[[534, 535[[544, 545[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v5|q [0, 2[[20, 25[[34, 35[[48, 53[[62, 63[[78, 79[[90, 95[[104, 105[[136, 141[[406, 409[[506, 509[[522, 526[[532, 535[[542, 545[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  r14|q fixed "[r14|q]" r14|q -1 [0, 1[ "NoDefinitionFound"
  r15|q fixed "[r15|q]" r15|q -1 [0, 1[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[34, 35[[52, 53[[62, 63[[78, 79[[94, 95[[104, 105[[140, 141[[408, 409[[508, 509[[534, 535[[544, 545[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 14[2 MustHaveRegister  "StoreAtDefinition"
  v1|d DWORD "[rsi|d]" v1|d rsi|- [4, 14[4 MustHaveRegister  "StoreAtDefinition"
  v2|d DWORD "[rdx|d]" v2|d rdx|- [6, 14[6 MustHaveRegister  "StoreAtDefinition"
  v3|q QWORD "[rax|q]" v3|q -1 [8, 12[8 MustHaveRegister 12 ShouldHaveRegister  "NoSpillStore"
  v4|q QWORD "[rcx|q]" v4|q rsp|q [10, 12[10 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q -1 [16, 23[16 MustHaveRegister 20 ShouldHaveRegister  "StoreAtDefinition"
  v6|q QWORD "[rcx|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q rax|q [36, 37[36 MustHaveRegister  "NoSpillStore"
  v11|q QWORD "[rax|q]" v11|q -1 [46, 51[46 MustHaveRegister 50 ShouldHaveRegister  "StoreAtDefinition"
  v12|q QWORD "[rax|q]" v12|q rax|q [64, 65[64 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rax|d]" v13|d v78|d [72, 76[74 ShouldHaveRegister  "StoreAtDefinition"
  v14|q QWORD "[rax|q]" v14|q rax|q [80, 81[80 MustHaveRegister  "NoSpillStore"
  v15|q QWORD "[rdi|q]" v15|q v84|q [162, 174[162 MustHaveRegister 174 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[rax|q]" v16|q r14|q [164, 175[164 MustHaveRegister 174 ShouldHaveRegister  "NoSpillStore"
  v17|q QWORD "[rcx|q]" v17|q r15|q [166, 180[166 MustHaveRegister 168 MustHaveRegister 170 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v18|q QWORD "[rdx|q]" v18|q -1 [168, 198[168 MustHaveRegister 172 MustHaveRegister 182 MustHaveRegister 184 MustHaveRegister 186 MustHaveRegister 188 MustHaveRegister 190 MustHaveRegister 192 MustHaveRegister 194 MustHaveRegister 196 MustHaveRegister 198 ShouldHaveRegister  "NoSpillStore"
  v19|q QWORD "[rbx|q]" v19|q -1 [170, 176[170 MustHaveRegister 176 ShouldHaveRegister  "NoSpillStore"
  v20|q QWORD "[rbp|q]" v20|q -1 [172, 180[172 MustHaveRegister 176 MustHaveRegister 180 MustHaveRegister  "NoSpillStore"
  v21|q QWORD "[rdi|q]" v21|q v15|q [174, 184[[530, 532[174 MustHaveRegister 184 MustHaveRegister 532 ShouldHaveRegister  "NoSpillStore"
  v22|q QWORD "[rax|q]" v22|q rax|q [536, 539[536 MustHaveRegister 538 ShouldHaveRegister  "NoSpillStore"
  v23|q QWORD "[rdx|q]" v23|q v18|q [198, 201[198 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v24|q QWORD "[rdx|q]" v24|q v23|q [202, 236[[318, 407[206 MustHaveRegister 208 MustHaveRegister 218 ShouldHaveRegister 328 MustHaveRegister 330 MustHaveRegister 340 ShouldHaveRegister 366 MustHaveRegister 368 MustHaveRegister 370 MustHaveRegister 380 ShouldHaveRegister 406 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[rdi|q]" v25|q -1 [208, 212[[216, 220[208 MustHaveRegister 210 ShouldHaveRegister 220 ShouldHaveRegister  "NoSpillStore"
  v26|q QWORD "[rax|q]" v26|q v24|q [218, 228[[318, 320[218 MustHaveRegister 224 MustHaveRegister 228 MustHaveRegister 320 MustHaveRegister  "NoSpillStore"
  v27|q QWORD "[rdi|q]" v27|q v26|q [224, 232[224 MustHaveRegister 226 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v28|q QWORD "[rcx|q]" v28|q -1 [226, 229[226 MustHaveRegister 228 ShouldHaveRegister  "NoSpillStore"
  v29|q QWORD "[rax|q]" v29|q v26|q [228, 230[228 MustHaveRegister 230 MustHaveRegister  "NoSpillStore"
  v30|q QWORD "[rax|q]" v30|q v29|q [230, 232[230 MustHaveRegister 232 MustHaveRegister  "NoSpillStore"
  v31|q QWORD "[rdi|q]" v31|q -1 [330, 334[[338, 342[330 MustHaveRegister 332 ShouldHaveRegister 342 ShouldHaveRegister  "NoSpillStore"
  v32|q QWORD "[rax|q]" v32|q v24|q [340, 350[[358, 360[340 MustHaveRegister 346 MustHaveRegister 350 MustHaveRegister 360 MustHaveRegister  "NoSpillStore"
  v33|q QWORD "[rdi|q]" v33|q v32|q [346, 354[346 MustHaveRegister 348 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v34|q QWORD "[rcx|q]" v34|q -1 [348, 351[348 MustHaveRegister 350 ShouldHaveRegister  "NoSpillStore"
  v35|q QWORD "[rax|q]" v35|q v32|q [350, 352[350 MustHaveRegister 352 MustHaveRegister  "NoSpillStore"
  v36|q QWORD "[rax|q]" v36|q v35|q [352, 354[352 MustHaveRegister 354 MustHaveRegister  "NoSpillStore"
  v37|q QWORD "[rdi|q]" v37|q v24|q [366, 368[366 MustHaveRegister 368 MustHaveRegister  "NoSpillStore"
  v38|q QWORD "[rdi|q]" v38|q -1 [370, 374[[378, 382[370 MustHaveRegister 372 ShouldHaveRegister 382 ShouldHaveRegister  "NoSpillStore"
  v39|q QWORD "[rax|q]" v39|q v24|q [380, 390[[398, 400[380 MustHaveRegister 386 MustHaveRegister 390 MustHaveRegister 400 MustHaveRegister  "NoSpillStore"
  v40|q QWORD "[rdi|q]" v40|q v39|q [386, 394[386 MustHaveRegister 388 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v41|q QWORD "[rcx|q]" v41|q -1 [388, 391[388 MustHaveRegister 390 ShouldHaveRegister  "NoSpillStore"
  v42|q QWORD "[rax|q]" v42|q v39|q [390, 392[390 MustHaveRegister 392 MustHaveRegister  "NoSpillStore"
  v43|q QWORD "[rax|q]" v43|q v42|q [392, 394[392 MustHaveRegister 394 MustHaveRegister  "NoSpillStore"
  v44|q QWORD "[rax|q]" v44|q rax|q [410, 411[410 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdi|q]" v45|q v85|q [244, 256[244 MustHaveRegister 256 MustHaveRegister  "NoSpillStore"
  v46|q QWORD "[rax|q]" v46|q r14|q [246, 257[246 MustHaveRegister 256 ShouldHaveRegister  "NoSpillStore"
  v47|q QWORD "[rcx|q]" v47|q r15|q [248, 262[248 MustHaveRegister 250 MustHaveRegister 252 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v48|q QWORD "[rdx|q]" v48|q -1 [250, 280[250 MustHaveRegister 254 MustHaveRegister 264 MustHaveRegister 266 MustHaveRegister 268 MustHaveRegister 270 MustHaveRegister 272 MustHaveRegister 274 MustHaveRegister 276 MustHaveRegister 278 MustHaveRegister 280 ShouldHaveRegister  "NoSpillStore"
  v49|q QWORD "[rbx|q]" v49|q -1 [252, 258[252 MustHaveRegister 258 ShouldHaveRegister  "NoSpillStore"
  v50|q QWORD "[rbp|q]" v50|q -1 [254, 262[254 MustHaveRegister 258 MustHaveRegister 262 MustHaveRegister  "NoSpillStore"
  v51|q QWORD "[rdi|q]" v51|q v45|q [256, 266[[540, 542[256 MustHaveRegister 266 MustHaveRegister 542 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rax|q]" v52|q rax|q [546, 549[546 MustHaveRegister 548 ShouldHaveRegister  "NoSpillStore"
  v53|q QWORD "[rdx|q]" v53|q v48|q [280, 283[280 MustHaveRegister 282 ShouldHaveRegister  "NoSpillStore"
  v54|q QWORD "[rdx|q]" v54|q v53|q [284, 318[[418, 507[288 MustHaveRegister 290 MustHaveRegister 300 ShouldHaveRegister 428 MustHaveRegister 430 MustHaveRegister 440 ShouldHaveRegister 466 MustHaveRegister 468 MustHaveRegister 470 MustHaveRegister 480 ShouldHaveRegister 506 ShouldHaveRegister  "OneSpillStore"
  v55|q QWORD "[rdi|q]" v55|q -1 [290, 294[[298, 302[290 MustHaveRegister 292 ShouldHaveRegister 302 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rax|q]" v56|q v54|q [300, 310[[418, 420[300 MustHaveRegister 306 MustHaveRegister 310 MustHaveRegister 420 MustHaveRegister  "NoSpillStore"
  v57|q QWORD "[rdi|q]" v57|q v56|q [306, 314[306 MustHaveRegister 308 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rcx|q]" v58|q -1 [308, 311[308 MustHaveRegister 310 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rax|q]" v59|q v56|q [310, 312[310 MustHaveRegister 312 MustHaveRegister  "NoSpillStore"
  v60|q QWORD "[rax|q]" v60|q v59|q [312, 314[312 MustHaveRegister 314 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rdi|q]" v61|q -1 [430, 434[[438, 442[430 MustHaveRegister 432 ShouldHaveRegister 442 ShouldHaveRegister  "NoSpillStore"
  v62|q QWORD "[rax|q]" v62|q v54|q [440, 450[[458, 460[440 MustHaveRegister 446 MustHaveRegister 450 MustHaveRegister 460 MustHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdi|q]" v63|q v62|q [446, 454[446 MustHaveRegister 448 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v64|q QWORD "[rcx|q]" v64|q -1 [448, 451[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v65|q QWORD "[rax|q]" v65|q v62|q [450, 452[450 MustHaveRegister 452 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[rax|q]" v66|q v65|q [452, 454[452 MustHaveRegister 454 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[rdi|q]" v67|q v54|q [466, 468[466 MustHaveRegister 468 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[rdi|q]" v68|q -1 [470, 474[[478, 482[470 MustHaveRegister 472 ShouldHaveRegister 482 ShouldHaveRegister  "NoSpillStore"
  v69|q QWORD "[rax|q]" v69|q v54|q [480, 490[[498, 500[480 MustHaveRegister 486 MustHaveRegister 490 MustHaveRegister 500 MustHaveRegister  "NoSpillStore"
  v70|q QWORD "[rdi|q]" v70|q v69|q [486, 494[486 MustHaveRegister 488 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[rcx|q]" v71|q -1 [488, 491[488 MustHaveRegister 490 ShouldHaveRegister  "NoSpillStore"
  v72|q QWORD "[rax|q]" v72|q v69|q [490, 492[490 MustHaveRegister 492 MustHaveRegister  "NoSpillStore"
  v73|q QWORD "[rax|q]" v73|q v72|q [492, 494[492 MustHaveRegister 494 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rax|q]" v74|q rax|q [510, 511[510 MustHaveRegister  "NoSpillStore"
  v75|q QWORD "[rdx|q]" v75|q v24|q [518, 527[522 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [520, 524[520 MustHaveRegister 524 ShouldHaveRegister  "NoSpillStore"
  v77|q QWORD "[rax|q]" v77|q rax|q [106, 107[106 MustHaveRegister  "NoSpillStore"
  v78|d DWORD "[rax|d]" v78|d v13|d [112, 115[112 MustHaveRegister 114 ShouldHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [134, 138[134 MustHaveRegister 138 ShouldHaveRegister  "NoSpillStore"
  v80|q QWORD "[rdi|q]" v80|q -1 [326, 328[326 MustHaveRegister 328 MustHaveRegister  "NoSpillStore"
  v81|q QWORD "[rdi|q]" v81|q -1 [426, 428[426 MustHaveRegister 428 MustHaveRegister  "NoSpillStore"
  v82|q QWORD "[rdi|q]" v82|q -1 [204, 206[204 MustHaveRegister 206 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[rdi|q]" v83|q -1 [286, 288[286 MustHaveRegister 288 MustHaveRegister  "NoSpillStore"
  v84|q QWORD "[rdi|q]" v84|q -1 [160, 162[160 MustHaveRegister 162 ShouldHaveRegister  "NoSpillStore"
  v85|q QWORD "[rdi|q]" v85|q -1 [242, 244[242 MustHaveRegister 244 ShouldHaveRegister  "NoSpillStore"
  v86|d DWORD "[vstack:0|d]" v0|d v0|d [14, 19[ "StoreAtDefinition"
  v87|d DWORD "[vstack:1|d]" v1|d v1|d [14, 21[ "StoreAtDefinition"
  v88|d DWORD "[vstack:3|d]" v2|d v2|d [14, 23[ "StoreAtDefinition"
  v89|d DWORD "[vstack:0|d]" v0|d v0|d [19, 23[ "StoreAtDefinition"
  v90|d DWORD "[vstack:1|d]" v1|d v1|d [21, 23[ "StoreAtDefinition"
  v91|d DWORD "[vstack:3|d]" v2|d v2|d [23, 56[ "StoreAtDefinition"
  v92|q QWORD "[vstack:2|q]" v5|q v5|q [23, 72[48 ShouldHaveRegister  "StoreAtDefinition"
  v93|d DWORD "[vstack:0|d]" v0|d v0|d [23, 72[30 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[vstack:1|d]" v1|d v1|d [23, 40[ "StoreAtDefinition"
  v95|d DWORD "[rdi|d]" v0|d v0|d [72, 76[74 MustHaveRegister  "StoreAtDefinition"
  v96|d DWORD "[rsi|d]" v1|d v1|d [40, 44[42 MustHaveRegister  "StoreAtDefinition"
  v97|q QWORD "[vstack:2|q]" v5|q v5|q [72, 76[ "StoreAtDefinition"
  v98|d DWORD "[rdx|d]" v2|d v2|d [56, 60[58 MustHaveRegister  "StoreAtDefinition"
  v99|d DWORD "[vstack:1|d]" v1|d v1|d [44, 49[ "StoreAtDefinition"
  v100|d DWORD "[vstack:1|d]" v1|d v1|d [49, 51[ "StoreAtDefinition"
  v101|q QWORD "[vstack:5|q]" v11|q v11|q [51, 72[ "StoreAtDefinition"
  v102|d DWORD "[vstack:1|d]" v1|d v1|d [51, 72[ "StoreAtDefinition"
  v103|d DWORD "[vstack:1|d]" v1|d v1|d [72, 76[ "StoreAtDefinition"
  v104|q QWORD "[vstack:5|q]" v11|q v11|q [72, 76[ "StoreAtDefinition"
  v105|d DWORD "[vstack:3|d]" v2|d v2|d [60, 61[ "StoreAtDefinition"
  v106|d DWORD "[vstack:3|d]" v2|d v2|d [61, 72[ "StoreAtDefinition"
  v107|d DWORD "[vstack:3|d]" v2|d v2|d [72, 76[ "StoreAtDefinition"
  v108|d DWORD "[vstack:0|d]" v0|d v0|d [76, 77[ "StoreAtDefinition"
  v109|d DWORD "[vstack:6|d]" v13|d v13|d [76, 77[ "StoreAtDefinition"
  v110|d DWORD "[vstack:1|d]" v1|d v1|d [76, 77[ "StoreAtDefinition"
  v111|q QWORD "[vstack:2|q]" v5|q v5|q [76, 77[ "StoreAtDefinition"
  v112|q QWORD "[vstack:5|q]" v11|q v11|q [76, 77[ "StoreAtDefinition"
  v113|d DWORD "[vstack:3|d]" v2|d v2|d [76, 77[ "StoreAtDefinition"
  v114|d DWORD "[vstack:1|d]" v1|d v1|d [77, 116[86 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v115|d DWORD "[vstack:6|d]" v13|d v13|d [77, 84[ "StoreAtDefinition"
  v116|q QWORD "[vstack:2|q]" v5|q v5|q [77, 120[[128, 132[90 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v117|q QWORD "[vstack:5|q]" v11|q v11|q [77, 116[92 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v118|d DWORD "[vstack:3|d]" v2|d v2|d [77, 116[100 ShouldHaveRegister 115 LiveAtLoopEnd  "StoreAtDefinition"
  v119|d DWORD "[vstack:0|d]" v0|d v0|d [77, 116[115 LiveAtLoopEnd  "StoreAtDefinition"
  v120|d DWORD "[rax|d]" v13|d v13|d [84, 88[86 MustHaveRegister  "StoreAtDefinition"
  v121|d DWORD "[rsi|d]" v1|d v1|d [556, 559[ "StoreAtDefinition"
  v122|q QWORD "[rax|q]" v5|q v5|q [132, 136[136 ShouldHaveRegister  "StoreAtDefinition"
  v123|d DWORD "[rdx|d]" v2|d v2|d [556, 559[ "StoreAtDefinition"
  v124|d DWORD "[rdi|d]" v0|d v0|d [556, 559[ "StoreAtDefinition"
  v125|d DWORD "[vstack:6|d]" v13|d v13|d [88, 93[ "StoreAtDefinition"
  v126|d DWORD "[vstack:6|d]" v13|d v13|d [93, 98[ "StoreAtDefinition"
  v127|d DWORD "[rax|d]" v13|d v13|d [98, 102[100 MustHaveRegister  "StoreAtDefinition"
  v128|d DWORD "[vstack:6|d]" v13|d v13|d [102, 103[ "StoreAtDefinition"
  v129|d DWORD "[vstack:6|d]" v13|d v13|d [103, 110[ "StoreAtDefinition"
  v130|d DWORD "[rax|d]" v13|d v13|d [110, 112[112 ShouldHaveRegister  "StoreAtDefinition"
  v131|q QWORD "[vstack:7|q]" v24|q v24|q [407, 414[ "OneSpillStore"
  v132|q QWORD "[vstack:8|q]" v54|q v54|q [507, 514[ "OneSpillStore"
  v133|q QWORD "[rdx|q]" v24|q v24|q [414, 417[416 ShouldHaveRegister  "OneSpillStore"
  v134|q QWORD "[rdx|q]" v54|q v54|q [514, 517[516 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:0|DWORD = MOVE rdi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:1|DWORD = MOVE rsi|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE rdx|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction vstack:2|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   18  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   20  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction CMPCONSTBRANCH vstack:0|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   34  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rsi|DWORD = MOVE vstack:1|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   48  <|@ instruction rdi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   78  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD vstack:6|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   82  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:1|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = MOVE vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD vstack:6|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   96  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr   98  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  100  <|@ instruction CMPBRANCH (x: rax|DWORD, y: vstack:3|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  104  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: vstack:0|DWORD vstack:1|DWORD vstack:3|DWORD vstack:6|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE vstack:6|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|DWORD = MOVE vstack:0|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:6|DWORD = MOVE rax|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   74  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  118  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  134  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  136  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  140  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction  <|@ <|@
      nr  148  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  152  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr  120  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  122  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  162  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  164  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  170  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  172  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  176  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  182  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  184  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  186  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  188  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  190  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  192  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  194  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  196  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  198  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  204  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  206  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  208  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  210  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  212  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  330  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  332  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  366  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  368  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  370  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  372  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:7|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  408  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: vstack:7|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  412  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:7|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction JUMP ~[] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  518  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  520  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  522  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  526  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  528  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  244  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  246  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  250  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  252  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  256  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  258  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  264  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  266  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  268  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  270  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  272  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  274  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  276  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  280  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  282  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  284  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  286  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  288  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  290  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  292  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  428  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  430  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  432  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  466  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  468  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  470  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  472  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  508  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: vstack:8|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  512  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE vstack:8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  516  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE vstack:2|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  130  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  156  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  384  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  386  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  388  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  390  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  392  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  394  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  396  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  220  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  226  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  228  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  230  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  232  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  234  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  342  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  348  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  350  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  352  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  354  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  356  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  440  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  442  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  448  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  450  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  452  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  454  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  456  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  308  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  310  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  312  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  314  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  316  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  480  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  482  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  490  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  492  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  494  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  496  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  318  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  320  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  362  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  400  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  402  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  420  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  422  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  498  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  500  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  460  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  534  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  538  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  544  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  554  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  560  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  534  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  508  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B3" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B3 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B6 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B9 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B15 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B38 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B62" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B62 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B63" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction JUMP ~[] destination: B3 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" "B3" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B16" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B6 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" "B6" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B20 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction JUMP ~[] destination: B20 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B20" "B23" "B22" 
    successors "B25" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B25 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B29" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B25 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B25" "B28" "B27" 
    successors "B30" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B34" 
    xhandlers
    flags 
    probability 4598231468941672320
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction JUMP ~[] destination: B30 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B30" "B33" "B32" 
    successors "B35" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B35 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B35" "B58" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B39" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction JUMP ~[] destination: B9 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B9" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B43" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B43 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  388  <|@ instruction JUMP ~[] destination: B43 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" "B46" "B45" 
    successors "B48" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B52" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  428  <|@ instruction JUMP ~[] destination: B48 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B48" "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B53 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B57" 
    xhandlers
    flags 
    probability 4593727869314301824
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction JUMP ~[] destination: B53 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B53" "B56" "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  506  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B63" 
    xhandlers
    flags 
    probability 4589167930218542877
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  542  <|@ instruction JUMP ~[] destination: B62 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" 
    xhandlers
    flags 
    probability 4584664330591172381
    begin_IR
      LIR
      nr  112  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  114  <|@ instruction JUMP ~[] destination: B15 -> B16 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4580160730963801885
    begin_IR
      LIR
      nr  320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  322  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B67" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr    4  <|@ instruction stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr    6  <|@ instruction stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr    8  <|@ instruction rax|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   10  <|@ instruction rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   20  <|@ instruction rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   22  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   24  <|@ instruction rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 5]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5] <|@ <|@
      nr   28  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B63" "B4" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B5" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   42  <|@ st <@st|@reference-map: [32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr   44  <|@ instruction rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD <|@ <|@
      nr   46  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B16" "B7" 
    xhandlers
    flags 
    probability 4602678729100654365
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B8" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   60  <|@ instruction stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   62  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr   64  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   66  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr   68  <|@ instruction rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD <|@ <|@
      nr   70  <|@ instruction JUMP ~[] destination: B7 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B39" "B10" 
    xhandlers
    flags 
    probability 4598175129473283869
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   74  <|@ instruction TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   82  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr   84  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" 
    xhandlers
    flags 
    probability 4593671529845913373
    begin_IR
      LIR
      nr   86  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   88  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B11 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  102  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:17) [bci: 15]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15] <|@ <|@
      nr  104  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction JUMP ~[] destination: B13 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B36" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4589167930218542877
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B37" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  308  <|@ instruction rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  310  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:20) [bci: 37]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37] <|@ <|@
      nr  312  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  314  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B39" "B60" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4584664330591172381
    begin_IR
      LIR
      nr  316  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  318  <|@ instruction CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B61" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  524  <|@ st <@st|@reference-map: [24, 32]
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:23) [bci: 53]
locals: stack:12|DWORD stack:16|DWORD stack:20|DWORD stack:24|DWORD 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53] <|@ <|@
      nr  526  <|@ instruction rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD <|@ <|@
      nr  528  <|@ instruction JUMP ~[] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" 
    successors "B12" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580160730963801885
    begin_IR
      LIR
      nr  530  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  532  <|@ instruction rax|DWORD = INC rax|DWORD size: DWORD <|@ <|@
      nr  536  <|@ instruction JUMP ~[] destination: B61 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" "B61" 
    successors "B13" "B63" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4593671529845913373
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   90  <|@ instruction rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD <|@ <|@
      nr   96  <|@ instruction stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B12" "B2" 
    successors "B64" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  548  <|@ instruction rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  550  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:25) [bci: 68]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68] <|@ <|@
      nr  552  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4603241718460572416
    begin_IR
      LIR
      nr  554  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  556  <|@ instruction  <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4603236651961657120
    begin_IR
      LIR
      nr  566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  568  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B14" "B5" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  120  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  122  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  128  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  130  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  132  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  134  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4598687453844048960
    begin_IR
      LIR
      nr  144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  146  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  148  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  150  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  152  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  154  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  156  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  158  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  160  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  162  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  164  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  166  <|@ instruction JUMP ~[] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" "B18" 
    successors "B24" "B21" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  172  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  174  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  176  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B19" "B23" "B22" 
    successors "B29" "B26" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  210  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  212  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  214  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  216  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B24" "B28" "B27" 
    successors "B34" "B31" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  252  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  256  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B29" "B33" "B32" 
    successors "B59" 
    xhandlers
    flags 
    probability 4598738118833201920
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  290  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  292  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  294  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:19) [bci: 28]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28] <|@ <|@
      nr  296  <|@ instruction JUMP ~[] destination: B34 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B34" "B57" 
    successors 
    xhandlers
    flags 
    probability 4601271368290849920
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  300  <|@ instruction rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  514  <|@ instruction rsi|QWORD = STACKLEA in:0|QWORD <|@ <|@
      nr  516  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ st <@st|@reference-map: [-32]
live-base-pointers: []
ftest31.example_ftest31(int, int, int) [bci: -4]
stack: rdx|QWORD[.] 
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4] <|@ <|@
      nr  520  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B37" "B8" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  326  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  328  <|@ instruction rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  330  <|@ instruction rax|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  332  <|@ instruction rcx|QWORD = MOVE r15|QWORD moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD <|@ <|@
      nr  336  <|@ instruction rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD <|@ <|@
      nr  338  <|@ instruction rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD <|@ <|@
      nr  340  <|@ instruction rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD <|@ <|@
      nr  342  <|@ instruction CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4594183854216678464
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD <|@ <|@
      nr  356  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0 <|@ <|@
      nr  358  <|@ instruction MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD <|@ <|@
      nr  360  <|@ instruction MOV [rdx|QWORD + 8] y: 0 size: QWORD <|@ <|@
      nr  362  <|@ instruction MOV [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  364  <|@ instruction MOV [rdx|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  366  <|@ instruction MOV [rdx|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  368  <|@ instruction MOV [rdx|QWORD + 40] y: 0 size: QWORD <|@ <|@
      nr  370  <|@ instruction MOV [rdx|QWORD + 48] y: 0 size: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction JUMP ~[] destination: B41 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" "B41" 
    successors "B47" "B44" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  378  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  380  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  382  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  384  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B42" "B46" "B45" 
    successors "B52" "B49" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr  420  <|@ instruction MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  422  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  424  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" "B51" "B50" 
    successors "B57" "B54" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0 <|@ <|@
      nr  460  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD <|@ <|@
      nr  462  <|@ instruction rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  464  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B52" "B56" "B55" 
    successors "B59" 
    xhandlers
    flags 
    probability 4594234519205831424
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ st <@st|@reference-map: [16]
live-base-pointers: []
java.lang.Throwable.<init>(Throwable.java:255) [bci: 24]
locals: - 
java.lang.Exception.<init>(Exception.java:54) [bci: 1]
locals: - 
ftest31.example_ftest31(ftest31.java:22) [bci: 49]
stack: stack:48|QWORD[.] 
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49] <|@ <|@
      nr  504  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  264  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  270  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  272  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  274  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  276  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  278  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  280  <|@ instruction JUMP ~[] destination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" "B23" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  184  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  186  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  190  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  192  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  194  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  196  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  198  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  200  <|@ instruction JUMP ~[] destination: B22 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4583763619672897534
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  226  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4580521060367108095
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  232  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  234  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  238  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  240  <|@ instruction JUMP ~[] destination: B27 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  434  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  438  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  440  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  442  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  444  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  446  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  448  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  392  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  394  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  398  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  400  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  402  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  404  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  406  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" "B56" 
    xhandlers
    flags 
    probability 4579260020045527038
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  472  <|@ instruction rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  474  <|@ instruction TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4576017460739737599
    begin_IR
      LIR
      nr  476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  478  <|@ instruction rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD <|@ <|@
      nr  480  <|@ instruction rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD <|@ <|@
      nr  482  <|@ instruction rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD <|@ <|@
      nr  484  <|@ instruction rax|QWORD = SHR rax|QWORD y: 9 size: QWORD <|@ <|@
      nr  486  <|@ instruction MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B24" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  204  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  206  <|@ instruction JUMP ~[] destination: B23 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  244  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B28 -> B29 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" 
    xhandlers
    flags 
    probability 4577638740392632319
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  286  <|@ instruction JUMP ~[] destination: B33 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B54" 
    successors "B57" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  492  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  494  <|@ instruction JUMP ~[] destination: B56 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573135140765261823
    begin_IR
      LIR
      nr  450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  452  <|@ instruction MOVB [rax|QWORD - 8] y: 0 size: BYTE <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" 
    xhandlers
    flags 
    probability 4568631541137891334
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:19) [bci: 24]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24] <|@ <|@
      nr  140  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction JUMP ~[] destination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" 
    xhandlers
    flags 
    probability 4564127941510520838
    begin_IR
      LIR
      nr  344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  346  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:22) [bci: 45]
locals: - - - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45] <|@ <|@
      nr  348  <|@ instruction rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B40 -> B42 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors 
    xhandlers
    flags 
    probability 4558327318160834565
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:26) [bci: 71]
locals: - - - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71] <|@ <|@
      nr  564  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr  570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  572  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest31.example_ftest31(ftest31.java:15) [bci: 0]
locals: rdi|DWORD rsi|DWORD rdx|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0] <|@ <|@
      nr  574  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #5          // java.lang.System.out:java.io.PrintStream
     3: ldc           #8          // Begin
     5: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
     8: iconst_0      
     9: istore_3      
    10: iload_3       
    11: iload_0       
    12: if_icmpge     63
    15: invokestatic  #7          // java.lang.System.console:()java.io.Console
    18: pop           
    19: iload_3       
    20: iload_1       
    21: if_icmple     32
    24: new           #11         // java.lang.Exception
    27: dup           
    28: invokespecial #8          // java.lang.Exception.<init>:()void
    31: athrow        
    32: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    35: ldc           #13         // body
    37: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    40: iload_3       
    41: iload_2       
    42: if_icmple     53
    45: new           #11         // java.lang.Exception
    48: dup           
    49: invokespecial #8          // java.lang.Exception.<init>:()void
    52: athrow        
    53: invokestatic  #7          // java.lang.System.console:()java.io.Console
    56: pop           
    57: iinc          
    60: goto          10
    63: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    66: ldc           #14         // End
    68: invokevirtual #6          // java.io.PrintStream.println:(java.lang.String)void
    71: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec38897c2434897424308954242c498b4778488bcc483bc80f8621040000488b0500000000498d04064889442420488b0d00000000498d0c0e488bf8488bf1e80000000090837c2434010f8c98000000e800000000908b74243085f60f8cb2000000488b0500000000498d04064889442418488b7c2420488bf0e800000000908b54242c85d20f8c60010000e80000000090b801000000e9400000006690e800000000908b4424283b4424300f8f62000000488b7c2420488b742418e800000000908b4424283b44242c0f8f1c010000e800000000908b442428ffc08b7c2434894424283bf87fb6488b442420488b3500000000498d3436488bf8e800000000904183afb0000000010f8e250300004883c438c3488b3d00000000498d3c3e498bc6498bcf488b5118488b5910488d6a38482bf8483beb0f87db020000488969180f18823801000048893a48c742080000000048c742100000000048c742180000000048c742200000000048c742280000000048c7423000000000488b3d0000000048897a20488b3a48f7c7020000000f8552010000488b3d0000000048897a18488b3a48f7c7020000000f8569010000488bfa492bfe48897a10488b3a48f7c7020000000f85eb000000488bfa4889542410e80000000090488b542410488d742440488bfae80000000090488b3d00000000498d3c3e498bc6498bcf488b5118488b5910488d6a38482bf8483beb0f8711020000488969180f18823801000048893a48c742080000000048c742100000000048c742180000000048c742200000000048c742280000000048c7423000000000488b3d0000000048897a20488b3a48f7c7020000000f8510010000488b3d0000000048897a18488b3a48f7c7020000000f85c3000000488bfa492bfe48897a10488b3a48f7c7020000000f850d010000488bfa4889542410e80000000090e923ffffff488bc248f7c7010000000f852e010000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e9e3feffff488bc248f7c7010000000f85ea000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e97cfeffff488bc248f7c7010000000f85c1000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e965feffff488bc248f7c7010000000f85b3000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e90bffffff488bc248f7c7010000000f856f000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e9befeffff488bc248f7c7010000000f8546000000488bf84881e70000f0ff488d8f28100000482bc148c1e809c644072800e9c1feffffc640f800e9abfdffffc640f800e9bdfdffffc640f800e9cefdffffc640f800e968feffffc640f800e994feffffc640f800e971feffffe80000000090488bd0e955fdffffe80000000090488bd0e91ffeffffe800000000904883c438c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD, rdx|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 2 stack:12|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 4 stack:16|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 12 6 stack:20|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 16 8 rax|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 20 10 rcx|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 23 12 CMPBRANCH (x: rcx|QWORD, y: rax|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B67 size: QWORD  <||@
  Comment 32 block B1 null  <||@
  Comment 32 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 32 16 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 32 {DataSection[?]}  <||@
  Comment 43 18 stack:32|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 48 20 rcx|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 48 {DataSection[?]}  <||@
  Comment 59 22 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 62 24 rsi|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 65 26 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:5]  <||@
  Comment 65 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 70 [32]at ftest31.example_ftest31(ftest31.java:15) [bci: 5, duringCall: true, rethrow: false]
              |0               |1               |2               |3 
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |-   <||@
  Comment 71 28 JUMP ~[] destination: B1 -> B2  <||@
  Comment 71 block B2 null  <||@
  Comment 71 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 71 32 CMPCONSTBRANCH stack:12|DWORD trueDestinationProbability: 0.5 condition: < trueDestination: B2 -> B63 falseDestination: B2 -> B4 y: 1 size: DWORD inlinedY: null  <||@
  Comment 82 block B4 null  <||@
  Comment 82 40 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 82 42 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15]  <||@
  Comment 82 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 87 [32]at ftest31.example_ftest31(ftest31.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 88 44 rsi|DWORD = MOVE stack:16|DWORD moveKind: DWORD  <||@
  Comment 92 46 JUMP ~[] destination: B4 -> B5  <||@
  Comment 92 block B5 null  <||@
  Comment 92 48 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 92 50 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B5 -> B16 falseDestination: B5 -> B7 size: DWORD  <||@
  Comment 100 block B7 null  <||@
  Comment 100 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 100 58 rax|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 100 {DataSection[?]}  <||@
  Comment 111 60 stack:40|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 116 62 rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 121 64 rsi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 124 66 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37]  <||@
  Comment 124 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 129 [24, 32]at ftest31.example_ftest31(ftest31.java:20) [bci: 37, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 130 68 rdx|DWORD = MOVE stack:20|DWORD moveKind: DWORD  <||@
  Comment 134 70 JUMP ~[] destination: B7 -> B8  <||@
  Comment 134 block B8 null  <||@
  Comment 134 72 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 74 TESTBRANCH (x: rdx|DWORD, y: rdx|DWORD) trueDestinationProbability: 0.5 condition: < trueDestination: B8 -> B39 falseDestination: B8 -> B10 size: DWORD  <||@
  Comment 142 block B10 null  <||@
  Comment 142 80 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 142 82 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53]  <||@
  Comment 142 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 147 [24, 32]at ftest31.example_ftest31(ftest31.java:23) [bci: 53, duringCall: true, rethrow: false]
              |0               |1               |2               |3          
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |int[0|0x0]   <||@
  Comment 148 84 JUMP ~[] destination: B10 -> B11  <||@
  Comment 148 block B11 null  <||@
  Comment 148 86 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 148 88 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 153 92 JUMP ~[] destination: B11 -> B12  <||@
  Comment 158 block B13 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 158 100 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 160 102 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:15]  <||@
  Comment 160 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 165 [24, 32]at ftest31.example_ftest31(ftest31.java:17) [bci: 15, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 166 104 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 170 106 JUMP ~[] destination: B13 -> B14  <||@
  Comment 170 block B14 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 170 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 170 110 CMPBRANCH (x: rax|DWORD, y: stack:16|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B14 -> B16 falseDestination: B14 -> B36 size: DWORD  <||@
  Comment 180 block B36 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 180 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 180 306 rdi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 185 308 rsi|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 190 310 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:37]  <||@
  Comment 190 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 195 [24, 32]at ftest31.example_ftest31(ftest31.java:20) [bci: 37, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 196 312 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 200 314 JUMP ~[] destination: B36 -> B37  <||@
  Comment 200 block B37 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 200 316 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 200 318 CMPBRANCH (x: rax|DWORD, y: stack:20|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B37 -> B39 falseDestination: B37 -> B60 size: DWORD  <||@
  Comment 210 block B60 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 210 522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 210 524 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:53]  <||@
  Comment 210 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 215 [24, 32]at ftest31.example_ftest31(ftest31.java:23) [bci: 53, duringCall: true, rethrow: false]
              |0               |1               |2               |3              
     locals:  |stack:12|DWORD  |stack:16|DWORD  |stack:20|DWORD  |stack:24|DWORD   <||@
  Comment 216 526 rax|DWORD = MOVE stack:24|DWORD moveKind: DWORD  <||@
  Comment 220 528 JUMP ~[] destination: B60 -> B61  <||@
  Comment 220 block B61 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 220 530 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 220 532 rax|DWORD = INC rax|DWORD size: DWORD  <||@
  Comment 222 536 JUMP ~[] destination: B61 -> B12  <||@
  Comment 222 block B12 loop 0 depth 1 header:15|LoopBegin  <||@
  Comment 222 94 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 222 90 rdi|DWORD = MOVE stack:12|DWORD moveKind: DWORD  <||@
  Comment 226 96 stack:24|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 230 98 CMPBRANCH (x: rdi|DWORD, y: rax|DWORD) trueDestinationProbability: 0.5 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B63 size: DWORD  <||@
  Comment 234 block B63 null  <||@
  Comment 234 544 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 234 540 rax|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 239 546 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 239 {DataSection[?]}  <||@
  Comment 250 548 rdi|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 253 550 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:68]  <||@
  Comment 253 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 258 []at ftest31.example_ftest31(ftest31.java:25) [bci: 68, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 259 552 JUMP ~[] destination: B63 -> B64  <||@
  Comment 259 block B64 null  <||@
  Comment 259 554 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 259 556   <||@
  Comment 267 558 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B64 -> B65 falseDestination: B64 -> B66  <||@
  Comment 273 block B66 null  <||@
  Comment 273 566 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 568 RETURN -  <||@
  Comment 273 EPILOGUE_START  <||@
  Comment 277 EPILOGUE_INCD_RSP  <||@
  Comment 277 EPILOGUE_END  <||@
  Comment 278 block B16 null  <||@
  Comment 278 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 278 118 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 278 {DataSection[?]}  <||@
  Comment 289 120 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 289 122 rax|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 292 124 rcx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 295 126 rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD  <||@
  Comment 299 128 rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD  <||@
  Comment 303 130 rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD  <||@
  Comment 307 132 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 310 134 CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B16 -> B17 falseDestination: B16 -> B18 size: QWORD  <||@
  Comment 319 block B18 null  <||@
  Comment 319 144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 319 146 MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD  <||@
  Comment 323 148 AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0  <||@
  Comment 330 150 MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 333 152 MOV [rdx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 341 154 MOV [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 349 156 MOV [rdx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 357 158 MOV [rdx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 365 160 MOV [rdx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 373 162 MOV [rdx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 381 164 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 381 166 JUMP ~[] destination: B18 -> B19  <||@
  Comment 381 block B19 null  <||@
  Comment 381 168 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 381 170 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 381 {DataSection[?]}  <||@
  Comment 388 172 MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 392 174 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 395 176 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B19 -> B24 falseDestination: B19 -> B21 y: 2 size: QWORD  <||@
  Comment 408 block B24 null  <||@
  Comment 408 208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 408 210 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 408 {DataSection[?]}  <||@
  Comment 415 212 MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 419 214 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 422 216 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B24 -> B29 falseDestination: B24 -> B26 y: 2 size: QWORD  <||@
  Comment 435 block B29 null  <||@
  Comment 435 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 435 250 rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0  <||@
  Comment 441 252 MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 445 254 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 448 256 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B29 -> B34 falseDestination: B29 -> B31 y: 2 size: QWORD  <||@
  Comment 461 block B34 null  <||@
  Comment 461 288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 461 290 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 464 292 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 469 294 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 28]  <||@
  Comment 469 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 474 [16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest31.example_ftest31(ftest31.java:19) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |    <||@
  Comment 475 296 JUMP ~[] destination: B34 -> B59  <||@
  Comment 475 block B59 null  <||@
  Comment 475 512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 475 300 rdx|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 480 514 rsi|QWORD = STACKLEA in:0|QWORD  <||@
  Comment 485 516 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 488 518 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:-4]  <||@
  Comment 488 {HostedMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> AnalysisMethod<com.oracle.svm.core.snippets.ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters -> HotSpotMethod<ExceptionUnwind.unwindExceptionWithoutCalleeSavedRegisters(Throwable, Pointer)>>>}  <||@
  Comment 493 [-32]at ftest31.example_ftest31(int, int, int) [bci: -4, duringCall: false, rethrow: false]
              |0             |1  |2  |3 
     locals:  |-             |-  |-  |- 
     stack:   |rdx|QWORD[.]  |   |   |    <||@
  Comment 494 520 DEAD_END  <||@
  Comment 494 block B39 null  <||@
  Comment 494 324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 494 326 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 494 {DataSection[?]}  <||@
  Comment 505 328 rdi|QWORD = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 505 330 rax|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 508 332 rcx|QWORD = MOVE r15|QWORD moveKind: QWORD  <||@
  Comment 511 334 rdx|QWORD = MOV [rcx|QWORD + 24] size: QWORD  <||@
  Comment 515 336 rbx|QWORD = MOV [rcx|QWORD + 16] size: QWORD  <||@
  Comment 519 338 rbp|QWORD = LEA [rdx|QWORD + 56] size: QWORD  <||@
  Comment 523 340 rdi|QWORD = SUB (x: rdi|QWORD, ~y: rax|QWORD) size: QWORD  <||@
  Comment 526 342 CMPBRANCH (x: rbp|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B39 -> B40 falseDestination: B39 -> B41 size: QWORD  <||@
  Comment 535 block B41 null  <||@
  Comment 535 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 535 354 MOV (x: [rcx|QWORD + 24], y: rbp|QWORD) size: QWORD  <||@
  Comment 539 356 AMD64PREFETCH ~[rdx|QWORD + 312] instr: 0  <||@
  Comment 546 358 MOV (x: [rdx|QWORD], y: rdi|QWORD) size: QWORD  <||@
  Comment 549 360 MOV [rdx|QWORD + 8] y: 0 size: QWORD  <||@
  Comment 557 362 MOV [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 565 364 MOV [rdx|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 573 366 MOV [rdx|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 581 368 MOV [rdx|QWORD + 40] y: 0 size: QWORD  <||@
  Comment 589 370 MOV [rdx|QWORD + 48] y: 0 size: QWORD  <||@
  Comment 597 372 rdx|QWORD[.] = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 597 374 JUMP ~[] destination: B41 -> B42  <||@
  Comment 597 block B42 null  <||@
  Comment 597 376 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 597 378 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 597 {DataSection[?]}  <||@
  Comment 604 380 MOV (x: [rdx|QWORD[.] + 32], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 608 382 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 611 384 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B42 -> B47 falseDestination: B42 -> B44 y: 2 size: QWORD  <||@
  Comment 624 block B47 null  <||@
  Comment 624 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 624 418 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@33c8d633 encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 624 {DataSection[?]}  <||@
  Comment 631 420 MOV (x: [rdx|QWORD[.] + 24], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 635 422 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 638 424 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B47 -> B52 falseDestination: B47 -> B49 y: 2 size: QWORD  <||@
  Comment 651 block B52 null  <||@
  Comment 651 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 651 458 rdi|QWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@c3984a6 encoding: base: 1 shift: 0  <||@
  Comment 657 460 MOV (x: [rdx|QWORD[.] + 16], y: rdi|QWORD[.]) size: QWORD  <||@
  Comment 661 462 rdi|QWORD = MOV [rdx|QWORD[.]] size: QWORD  <||@
  Comment 664 464 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.9 condition: = trueDestination: B52 -> B57 falseDestination: B52 -> B54 y: 2 size: QWORD  <||@
  Comment 677 block B57 null  <||@
  Comment 677 496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 677 498 rdi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 680 500 stack:48|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 685 502 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24, 1, 49]  <||@
  Comment 685 {HostedMethod<Throwable.fillInStackTrace -> AnalysisMethod<java.lang.Throwable.fillInStackTrace -> SubstitutionMethod<definition HotSpotMethod<Throwable.fillInStackTrace()>, implementation HotSpotMethod<Target_java_lang_Throwable.fillInStackTrace()>>>>}  <||@
  Comment 690 [16]at java.lang.Throwable.<init>(Throwable.java:255) [bci: 24, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Exception.<init>(Exception.java:54) [bci: 1, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at ftest31.example_ftest31(ftest31.java:22) [bci: 49, duringCall: true, rethrow: false]
              |0                  |1  |2  |3 
     locals:  |-                  |-  |-  |- 
     stack:   |stack:48|QWORD[.]  |   |   |    <||@
  Comment 691 504 JUMP ~[] destination: B57 -> B59  <||@
  Comment 696 block B31 null  <||@
  Comment 696 262 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 696 264 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 699 266 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B31 -> B32 falseDestination: B31 -> B33 y: 1 size: QWORD  <||@
  Comment 712 block B32 null  <||@
  Comment 712 268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 712 270 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 722 272 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 729 274 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 732 276 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 736 278 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 741 280 JUMP ~[] destination: B32 -> B34  <||@
  Comment 746 block B21 null  <||@
  Comment 746 182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 746 184 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 749 186 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B23 y: 1 size: QWORD  <||@
  Comment 762 block B22 null  <||@
  Comment 762 188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 190 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 772 192 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 779 194 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 782 196 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 786 198 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 791 200 JUMP ~[] destination: B22 -> B24  <||@
  Comment 796 block B26 null  <||@
  Comment 796 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 796 224 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 799 226 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B26 -> B27 falseDestination: B26 -> B28 y: 1 size: QWORD  <||@
  Comment 812 block B27 null  <||@
  Comment 812 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 812 230 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 822 232 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 829 234 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 832 236 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 836 238 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 841 240 JUMP ~[] destination: B27 -> B29  <||@
  Comment 846 block B49 null  <||@
  Comment 846 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 846 432 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 849 434 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 y: 1 size: QWORD  <||@
  Comment 862 block B50 null  <||@
  Comment 862 436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 862 438 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 872 440 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 879 442 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 882 444 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 886 446 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 891 448 JUMP ~[] destination: B50 -> B52  <||@
  Comment 896 block B44 null  <||@
  Comment 896 390 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 896 392 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 899 394 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 y: 1 size: QWORD  <||@
  Comment 912 block B45 null  <||@
  Comment 912 396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 912 398 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 922 400 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 929 402 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 932 404 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 936 406 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 941 408 JUMP ~[] destination: B45 -> B47  <||@
  Comment 946 block B54 null  <||@
  Comment 946 470 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 946 472 rax|QWORD = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 949 474 TESTCONSTBRANCH rdi|QWORD trueDestinationProbability: 0.6 condition: = trueDestination: B54 -> B55 falseDestination: B54 -> B56 y: 1 size: QWORD  <||@
  Comment 962 block B55 null  <||@
  Comment 962 476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 962 478 rdi|QWORD = AND rax|QWORD y: -1048576 size: QWORD  <||@
  Comment 972 480 rcx|QWORD = LEA [rdi|QWORD + 4136] size: QWORD  <||@
  Comment 979 482 rax|QWORD = SUB (x: rax|QWORD, ~y: rcx|QWORD) size: QWORD  <||@
  Comment 982 484 rax|QWORD = SHR rax|QWORD y: 9 size: QWORD  <||@
  Comment 986 486 MOVB [rdi|QWORD + rax|QWORD * 1 + 40] y: 0 size: BYTE  <||@
  Comment 991 488 JUMP ~[] destination: B55 -> B57  <||@
  Comment 996 block B23 null  <||@
  Comment 996 202 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 996 204 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1000 206 JUMP ~[] destination: B23 -> B24  <||@
  Comment 1005 block B28 null  <||@
  Comment 1005 242 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1005 244 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1009 246 JUMP ~[] destination: B28 -> B29  <||@
  Comment 1014 block B33 null  <||@
  Comment 1014 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1014 284 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1018 286 JUMP ~[] destination: B33 -> B34  <||@
  Comment 1023 block B46 null  <||@
  Comment 1023 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1023 412 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1027 414 JUMP ~[] destination: B46 -> B47  <||@
  Comment 1032 block B56 null  <||@
  Comment 1032 490 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1032 492 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1036 494 JUMP ~[] destination: B56 -> B57  <||@
  Comment 1041 block B51 null  <||@
  Comment 1041 450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1041 452 MOVB [rax|QWORD - 8] y: 0 size: BYTE  <||@
  Comment 1045 454 JUMP ~[] destination: B51 -> B52  <||@
  Comment 1050 block B17 null  <||@
  Comment 1050 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1050 138 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:24]  <||@
  Comment 1050 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1055 []at ftest31.example_ftest31(ftest31.java:19) [bci: 24, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1056 140 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1059 142 JUMP ~[] destination: B17 -> B19  <||@
  Comment 1064 block B40 null  <||@
  Comment 1064 344 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1064 346 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:45]  <||@
  Comment 1064 {HostedMethod<ThreadLocalAllocation.slowPathNewInstance -> AnalysisMethod<com.oracle.svm.core.genscavenge.ThreadLocalAllocation.slowPathNewInstance -> HotSpotMethod<ThreadLocalAllocation.slowPathNewInstance(Word)>>>}  <||@
  Comment 1069 []at ftest31.example_ftest31(ftest31.java:22) [bci: 45, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1070 348 rdx|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 350 JUMP ~[] destination: B40 -> B42  <||@
  Comment 1078 block B65 null  <||@
  Comment 1078 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1078 562 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:71]  <||@
  Comment 1078 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 1083 []at ftest31.example_ftest31(ftest31.java:26) [bci: 71, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1084 564 RETURN -  <||@
  Comment 1084 EPILOGUE_START  <||@
  Comment 1088 EPILOGUE_INCD_RSP  <||@
  Comment 1088 EPILOGUE_END  <||@
  Comment 1089 block B67 null  <||@
  Comment 1089 570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1089 572 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@4b78ba06 state [bci:0]  <||@
  Comment 1089 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 1094 []at ftest31.example_ftest31(ftest31.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1          |2          |3 
     locals:  |rdi|DWORD  |rsi|DWORD  |rdx|DWORD  |-   <||@
  Comment 1095 574 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
