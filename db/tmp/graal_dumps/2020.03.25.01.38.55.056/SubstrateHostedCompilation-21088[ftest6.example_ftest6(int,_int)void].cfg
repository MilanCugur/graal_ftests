begin_compilation
  name " SubstrateHostedCompilation-21088[ftest6.example_ftest6(int, int)]"
  method "SubstrateHostedCompilation-21088[ftest6.example_ftest6(int, int)]"
  date 1585096735081
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j56 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j56  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j45 
index: - 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j56 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@2063daa5
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
=== Succesors ===
next: j46 
=== Usages ===
v48 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
v48 
=== Predecessor ===
j56 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66c2f887
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j56 
y: j46 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j56 y: j46  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v3 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v3 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 v72 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 42]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@5af76476
keySuccessors: [I@38715f19
keys: [I@37cefac3
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:15) [bci: 1]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v4 v5 v6 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v4 v5 v6  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:17) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v4 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 31]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 34]
rawvalue: dasds
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@286d8517
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a7 a16 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a7 a16  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?84 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?84 #next: v26  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v27 v29 
=== Succesors ===
next: a44 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v29 #next: a44  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@49d890b8
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a44 <|@
d <@d|@=== Debug Properties ===
bci: 51
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?85 
=== Succesors ===
next: v37 
=== Usages ===
?36 
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?85 #next: v37  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
a44 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
rethrowException: false
sourceFile: ftest6.java
sourceLine: 25
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a44 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:26) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:26) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 45]
rawvalue: def
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@7b63970d
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a7 a8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a7 a8  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v59 
stateDuring: ?86 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v59 stateDuring: ?86 #next: v14  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 47]
rethrowException: false
sourceFile: ftest6.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: j56 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: j56  <|@  <|@
f <@~|@floating>@ <|@
tid j45 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@ReadIsolateThreadFloating|@com.oracle.svm.core.graal.nodes.ReadIsolateThreadFloatingNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [r15|QWORD + 120] <|@
d <@d|@=== Debug Properties ===
displacement: 120
scale: Times1
stamp: void*
uncompressionScale: [null]
=== Inputs ===
base: j45 
index: - 
=== Succesors ===
=== Usages ===
j56 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j45 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j56 <|@
result v1|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: com.oracle.svm.core.threadlocal.FastThreadLocal$FastThreadLocalLocationIdentity@2063daa5
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
=== Succesors ===
next: j46 
=== Usages ===
v48 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - #next: j46  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j46 <|@
result v2|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
=== Succesors ===
next: v47 
=== Usages ===
v48 
=== Predecessor ===
j56 >@ <|@
instruction <@ReadStackPointer|@com.oracle.svm.core.graal.nodes.ReadStackPointerNode>@ #next: v47  <|@  <|@
f <@~|@floating>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@66c2f887
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j56 
y: j46 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j56 y: j46  <|@  <|@
f <@~|@floating>@ <|@
tid i1 <|@
result v0|DWORD <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v3 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.99999
=== Inputs ===
condition: v48 
=== Succesors ===
trueSuccessor: v49 
falseSuccessor: v50 
=== Usages ===
=== Predecessor ===
j46 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v48 #trueSuccessor: v49 #falseSuccessor: v50  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v3 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3  <|@  <|@
f <@~|@floating>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v63 v72 
=== Predecessor ===
- >@ <|@
instruction <@SafepointCheck|@com.oracle.svm.core.nodes.SafepointCheckNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a7 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 42]
rawvalue: java.io.PrintStream
stableDimension: 0
stamp: a!# Ljava/io/PrintStream;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3 <|@
d <@d|@=== Debug Properties ===
keyProbabilities: [D@5af76476
keySuccessors: [I@38715f19
keys: [I@37cefac3
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:15) [bci: 1]
stamp: void
=== Inputs ===
value: i1 
=== Succesors ===
successors: v4 v5 v6 
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@IntegerSwitch|@org.graalvm.compiler.nodes.extended.IntegerSwitchNode>@ value: i1 #successors: v4 v5 v6  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:17) [bci: 28]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v4 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v5 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 31]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v43 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v43  <|@  <|@
f <@~|@floating>@ <|@
tid a16 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 34]
rawvalue: dasds
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v57 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@286d8517
stamp: void
targetMethod: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>
=== Inputs ===
arguments: a7 a16 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a7 a16  <|@  <|@
tid ?84 <|@
d <@d|@=== Debug Properties ===
bci: 36
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 19
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v43 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v43 <|@
d <@d|@=== Debug Properties ===
bci: 36
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.print
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v57 
stateDuring: ?84 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v5 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v57 stateDuring: ?84 #next: v26  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:19) [bci: 36]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v27 
=== Usages ===
=== Predecessor ===
v43 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v27  <|@  <|@
f <@*|@fixed>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
v26 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
withSpeculationFence: false
=== Inputs ===
stateAfter: - 
ends: v27 v29 
=== Succesors ===
next: a44 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v27 v29 #next: a44  <|@  <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Static
returnStamp: a# Ljava/io/Console;
signature: [Ljdk.vm.ci.meta.JavaType;@49d890b8
stamp: void
targetMethod: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>
=== Inputs ===
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@  <|@  <|@
tid ?85 <|@
d <@d|@=== Debug Properties ===
bci: 51
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 25
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
a44 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a44 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 51
identity: ANY_LOCATION
polymorphic: false
stamp: a# Ljava/io/Console;
targetMethod: Direct#System.console
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v58 
stateDuring: ?85 
=== Succesors ===
next: v37 
=== Usages ===
?36 
=== Predecessor ===
v28 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v58 stateDuring: ?85 #next: v37  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
a44 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v63  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v65 
falseSuccessor: v66 
=== Usages ===
=== Predecessor ===
v37 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v65 #falseSuccessor: v66  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v65 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v67 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v67  <|@  <|@
tid ?36 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:25) [bci: 51]
rethrowException: false
sourceFile: ftest6.java
sourceLine: 25
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - - a44 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - a44  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?36 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v65 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?36 #next: v81  <|@  <|@
f <@*|@fixed>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:26) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v80 
=== Usages ===
=== Predecessor ===
v63 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v80  <|@  <|@
f <@*|@fixed>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:26) [bci: 55]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 42]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v42 
=== Usages ===
=== Predecessor ===
v3 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v42  <|@  <|@
f <@~|@floating>@ <|@
tid a8 <|@
result v6|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 45]
rawvalue: def
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object
=== Inputs ===
=== Succesors ===
=== Usages ===
v59 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid v59 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
returnStamp: void
signature: [Ljdk.vm.ci.meta.JavaType;@7b63970d
stamp: void
targetMethod: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>
=== Inputs ===
arguments: a7 a8 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@DirectCallTarget|@org.graalvm.compiler.nodes.DirectCallTargetNode>@ arguments: a7 a8  <|@  <|@
tid ?86 <|@
d <@d|@=== Debug Properties ===
bci: 47
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 22
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v42 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v42 <|@
d <@d|@=== Debug Properties ===
bci: 47
identity: ANY_LOCATION
polymorphic: false
stamp: void
targetMethod: Direct#PrintStream.println
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v59 
stateDuring: ?86 
=== Succesors ===
next: v14 
=== Usages ===
=== Predecessor ===
v6 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v59 stateDuring: ?86 #next: v14  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
locationIdentity: ANY_LOCATION
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 47]
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v42 >@ <|@
instruction <@KillingBegin|@org.graalvm.compiler.nodes.KillingBeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.0010000000000000009
=== Inputs ===
condition: v64 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v64 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
tid ?13 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:22) [bci: 47]
rethrowException: false
sourceFile: ftest6.java
sourceLine: 23
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: enterSlowPathSafepointCheck()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?13 
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v73 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?13 #next: v83  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
v72 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at ftest6.example_ftest6(ftest6.java:23) [bci: 50]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
stamp: void
withSpeculationFence: false
=== Inputs ===
=== Succesors ===
next: v51 
=== Usages ===
=== Predecessor ===
v47 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v51  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ftest6.example_ftest6(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ftest6.java
sourceLine: 15
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: i1 - 
=== Succesors ===
=== Usages ===
v51 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: i1 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v51 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: throwNewStackOverflowError()void
foreignCalls: com.oracle.svm.core.graal.meta.SubstrateForeignCallsProvider@7f31de0e
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
=== Succesors ===
next: v53 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 #next: v53  <|@  <|@
f <@*|@fixed>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
=== Predecessor ===
v51 >@ <|@
instruction <@DeadEnd|@com.oracle.svm.core.graal.nodes.DeadEndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v0|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v2|QWORD, y: v1|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction STRATEGYSWITCH ~v0|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v6|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v7|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v6|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction  <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD[.] = MOVE v8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v4|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: v5|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   -1  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: v0|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   -1  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[52, 53[[62, 64[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 1[[22, 25[[50, 53[[62, 63[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v7|q [0, 2[[20, 25[[48, 53[[62, 63[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  v0|d DWORD "[v0|d]" v0|d rdi|- [2, 13[[90, 93[2 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [4, 8[4 MustHaveRegister 8 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rsp|q [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q -1 [46, 50[46 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q rax|q [64, 74[[78, 81[64 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[52, 53[[62, 64[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 1[[22, 25[[50, 53[[62, 63[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v7|q [0, 2[[20, 25[[48, 53[[62, 63[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 13[[90, 93[2 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [4, 8[4 MustHaveRegister 8 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q rsp|q [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [46, 50[46 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [64, 74[[78, 81[64 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[52, 53[[62, 64[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 1[[22, 25[[50, 53[[62, 63[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v7|q [0, 2[[20, 25[[48, 53[[62, 63[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 13[[90, 93[2 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [4, 8[4 MustHaveRegister 8 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q rsp|q [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [46, 50[46 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [64, 74[[78, 81[64 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[24, 25[[52, 53[[62, 64[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rdx|- fixed "[rdx|-]" rdx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsp|q fixed "[rsp|q]" rsp|q -1 [0, 1[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  rsi|- fixed "[rsi|-]" rsi|- v6|q [0, 1[[22, 25[[50, 53[[62, 63[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- v7|q [0, 2[[20, 25[[48, 53[[62, 63[ "NoOptimization"
  r8|- fixed "[r8|-]" r8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r12|- fixed "[r12|-]" r12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[24, 25[[52, 53[[62, 63[ "NoDefinitionFound"
  v0|d DWORD "[rdi|d]" v0|d rdi|- [2, 13[[90, 93[2 MustHaveRegister 12 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[rsi|q]" v1|q -1 [4, 8[4 MustHaveRegister 8 ShouldHaveRegister  "NoSpillStore"
  v2|q QWORD "[rax|q]" v2|q rsp|q [6, 8[6 MustHaveRegister 8 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[rsi|q]" v4|q -1 [46, 50[46 MustHaveRegister 50 ShouldHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q rax|q [64, 74[[78, 81[64 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rsi|q]" v6|q -1 [18, 22[18 MustHaveRegister 22 ShouldHaveRegister  "NoSpillStore"
  v7|q QWORD "[rdi|q]" v7|q -1 [16, 20[16 MustHaveRegister 20 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rdi|q]" v8|q -1 [44, 48[44 MustHaveRegister 48 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B2, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction JUMP ~[] destination: B2 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B2" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After VerifyCFunctionReferenceMapsLIRPhase"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B13" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    4  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD <|@ <|@
      nr    6  <|@ instruction rax|QWORD = MOVE rsp|QWORD moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" "B3" "B9" 
    xhandlers
    flags 
    probability 4607182328728024861
    begin_IR
      LIR
      nr   10  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   12  <|@ instruction STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B10" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   14  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   16  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   18  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   24  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:22) [bci: 47]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47] <|@ <|@
      nr   26  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   28  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   30  <|@ instruction  <|@ <|@
      nr   32  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4599670354633616384
    begin_IR
      LIR
      nr   34  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   36  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" "B1" 
    successors "B6" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 51]
locals: - - 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51] <|@ <|@
      nr   66  <|@ instruction JUMP ~[] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4604179959000442046
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   70  <|@ instruction  <|@ <|@
      nr   72  <|@ instruction BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4604173954260986880
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   76  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 4599676359373071550
    begin_IR
      LIR
      nr   42  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   44  <|@ instruction rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object <|@ <|@
      nr   52  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:19) [bci: 36]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36] <|@ <|@
      nr   54  <|@ instruction JUMP ~[] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors 
    xhandlers
    flags 
    probability 4559288076473661067
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ st <@st|@reference-map: [-16]
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:25) [bci: 54]
stack: rax|QWORD[.] 
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54] <|@ <|@
      nr   82  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors 
    xhandlers
    flags 
    probability 4554784476846290571
    begin_IR
      LIR
      nr   84  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   86  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:23) [bci: 50]
locals: - - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50] <|@ <|@
      nr   88  <|@ instruction RETURN - <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4532020583610908672
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   92  <|@ st <@st|@reference-map: []
live-base-pointers: []
ftest6.example_ftest6(ftest6.java:15) [bci: 0]
locals: rdi|DWORD - 
>@ <|@ instruction - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0] <|@ <|@
      nr   94  <|@ instruction DEAD_END <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: iload_0       
     1: lookupswitch  [2] {1: 28, 2: 31} default: 42
    28: goto          51
    31: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    34: ldc           #8          // dasds
    36: invokevirtual #6          // java.io.PrintStream.print:(java.lang.String)void
    39: goto          51
    42: getstatic     #5          // java.lang.System.out:java.io.PrintStream
    45: ldc           #10         // def
    47: invokevirtual #7          // java.io.PrintStream.println:(java.lang.String)void
    50: return        
    51: invokestatic  #8          // java.lang.System.console:()java.io.Console
    54: pop           
    55: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 4883ec08498b7778488bc4483bc60f868e00000083ff010f843800000083ff020f8448000000488b3d00000000498d3c3e488b3500000000498d3436e800000000904183afb0000000010f8e470000004883c408c3e800000000904183afb0000000010f8e230000004883c408c3488b3d00000000498d3c3e488b3500000000498d3436e80000000090ebc9e800000000904883c408c3e800000000904883c408c3e80000000090  <||@
  Comment 4 block B0 null  <||@
  Comment 4 0 [rdi|DWORD, rsi|DWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4 4 rsi|QWORD = MOV [r15|QWORD + 120] size: QWORD  <||@
  Comment 4 PROLOGUE_DECD_RSP  <||@
  Comment 4 PROLOGUE_END  <||@
  Comment 8 6 rax|QWORD = MOVE rsp|QWORD moveKind: QWORD  <||@
  Comment 11 8 CMPBRANCH (x: rax|QWORD, y: rsi|QWORD) trueDestinationProbability: 0.99999 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B13 size: QWORD  <||@
  Comment 20 block B1 null  <||@
  Comment 20 10 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 20 12 STRATEGYSWITCH ~rdi|DWORD - keyConstants: [int[1|0x1], int[2|0x2]] keyTargets: [B1 -> B5, B1 -> B3] defaultTarget: B1 -> B9 strategy: SequentialStrategy[avgEffort=1.666666666666667]  <||@
  Comment 38 block B9 null  <||@
  Comment 38 14 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 38 16 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 38 {DataSection[?]}  <||@
  Comment 49 18 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 49 {DataSection[?]}  <||@
  Comment 60 24 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:47]  <||@
  Comment 60 {HostedMethod<PrintStream.println -> AnalysisMethod<java.io.PrintStream.println -> HotSpotMethod<PrintStream.println(String)>>>}  <||@
  Comment 65 []at ftest6.example_ftest6(ftest6.java:22) [bci: 47, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 66 26 JUMP ~[] destination: B9 -> B10  <||@
  Comment 66 block B10 null  <||@
  Comment 66 28 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 66 30   <||@
  Comment 74 32 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 80 block B12 null  <||@
  Comment 80 34 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 80 36 RETURN -  <||@
  Comment 80 EPILOGUE_START  <||@
  Comment 84 EPILOGUE_INCD_RSP  <||@
  Comment 84 EPILOGUE_END  <||@
  Comment 85 block B5 null  <||@
  Comment 85 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 85 62 rax|QWORD[.] = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:51]  <||@
  Comment 85 {HostedMethod<System.console -> AnalysisMethod<java.lang.System.console -> HotSpotMethod<System.console()>>>}  <||@
  Comment 90 []at ftest6.example_ftest6(ftest6.java:25) [bci: 51, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 91 66 JUMP ~[] destination: B5 -> B6  <||@
  Comment 91 block B6 null  <||@
  Comment 91 68 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 91 70   <||@
  Comment 99 72 BRANCH trueDestinationProbability: 0.0010000000000000009 condition: <= trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 105 block B8 null  <||@
  Comment 105 74 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 105 76 RETURN -  <||@
  Comment 105 EPILOGUE_START  <||@
  Comment 109 EPILOGUE_INCD_RSP  <||@
  Comment 109 EPILOGUE_END  <||@
  Comment 110 block B3 null  <||@
  Comment 110 42 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 110 44 rdi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 110 {DataSection[?]}  <||@
  Comment 121 46 rsi|QWORD[.] = LOADCOMPRESSEDOBJECTCONSTANT (input: Object, ~baseRegister: r14|ILLEGAL) nonNull: true lirKindTool: com.oracle.svm.core.graal.amd64.SubstrateAMD64Backend$SubstrateAMD64LIRKindTool@7f3a0d1d encoding: base: 1 shift: 0 constant: Object  <||@
  Comment 121 {DataSection[?]}  <||@
  Comment 132 52 - = CALL_DIRECT (javaFrameAnchor: -, parameters: [rdi|QWORD[.], rsi|QWORD[.]]) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>> newThreadStatus: -1 destroysCallerSavedRegisters: true runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:36]  <||@
  Comment 132 {HostedMethod<PrintStream.print -> AnalysisMethod<java.io.PrintStream.print -> HotSpotMethod<PrintStream.print(String)>>>}  <||@
  Comment 137 []at ftest6.example_ftest6(ftest6.java:19) [bci: 36, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 138 54 JUMP ~[] destination: B3 -> B5  <||@
  Comment 140 block B7 null  <||@
  Comment 140 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 140 80 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:54]  <||@
  Comment 140 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 145 [-16]at ftest6.example_ftest6(ftest6.java:25) [bci: 54, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |-             |- 
     stack:   |rax|QWORD[.]  |    <||@
  Comment 146 82 RETURN -  <||@
  Comment 146 EPILOGUE_START  <||@
  Comment 150 EPILOGUE_INCD_RSP  <||@
  Comment 150 EPILOGUE_END  <||@
  Comment 151 block B11 null  <||@
  Comment 151 84 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 151 86 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:50]  <||@
  Comment 151 {HostedMethod<Safepoint.enterSlowPathSafepointCheck -> AnalysisMethod<com.oracle.svm.core.thread.Safepoint.enterSlowPathSafepointCheck -> HotSpotMethod<Safepoint.enterSlowPathSafepointCheck()>>>}  <||@
  Comment 156 []at ftest6.example_ftest6(ftest6.java:23) [bci: 50, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |-   <||@
  Comment 157 88 RETURN -  <||@
  Comment 157 EPILOGUE_START  <||@
  Comment 161 EPILOGUE_INCD_RSP  <||@
  Comment 161 EPILOGUE_END  <||@
  Comment 162 block B13 null  <||@
  Comment 162 90 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 162 92 - = CALL_DIRECT (javaFrameAnchor: -, parameters: []) {javaFrameAnchorTemp: -, exceptionTemp: -, temps: []} callTarget: HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>> newThreadStatus: -1 destroysCallerSavedRegisters: false runtimeConfiguration: com.oracle.svm.core.graal.meta.RuntimeConfiguration@726a1f12 state [bci:0]  <||@
  Comment 162 {HostedMethod<StackOverflowCheckSnippets.throwNewStackOverflowError -> AnalysisMethod<com.oracle.svm.core.graal.snippets.StackOverflowCheckSnippets.throwNewStackOverflowError -> HotSpotMethod<StackOverflowCheckSnippets.throwNewStackOverflowError()>>>}  <||@
  Comment 167 []at ftest6.example_ftest6(ftest6.java:15) [bci: 0, duringCall: false, rethrow: false]
              |0          |1 
     locals:  |rdi|DWORD  |-   <||@
  Comment 168 94 DEAD_END  <||@
  HexCodeFile>>> <|@
end_nmethod
