Graph Id,Source Function,Node Description,Cardinality,Node Id,Node BCI,head
1,"charAt",11|If,2,11,-9999,B0,"[B1][null]","[B2][null]"
3,"hashCode",17|If,2,17,-9999,B1,"[B2][null]","[x(13|LoopExit)][null]"
10,"equals",30|If,2,30,-9999,B3,"[B4][null]","[x(27|LoopExit)][null]"
9,"unmaskedHashCode",22|If,2,22,-9999,B1,"[B2][null]","[x(18|LoopExit)][null]"
10,"equals",22|If,2,22,-9999,B2,"[x(19|LoopExit)][null]","[B3, B4, B5][null]"
10,"equals",9|If,2,9,-9999,B0,"[B7][null]","[B1, B2, B6, B3, B4, B5][null]"
11,"indexOf",28|If,2,28,-9999,B3,"[B4][null]","[B6][null]"
11,"indexOf",19|If,2,19,-9999,B1,"[B2][null]","[B3, B4, B6][null]"
11,"indexOf",12|If,2,12,-9999,B0,"[B7][null]","[B1, B2, B3, B4, B6, B5][null]"
21,"lastIndexOf",38|If,2,38,-9999,B3,"[B5][null]","[x(35|LoopExit)][null]"
21,"lastIndexOf",28|If,2,28,-9999,B1,"[x(26|LoopExit)][null]","[B3, B5, B4][null]"
20,"replace",37|If,2,37,-9999,B2,"[B4][null]","[x(33|LoopExit)][null]"
20,"replace",26|If,2,26,-9999,B1,"[x(22|LoopExit)][null]","[B2, B4, B3][null]"
20,"replace",84|If,2,84,-9999,B12,"[B13][null]","[B14][null]"
20,"replace",79|If,2,79,-9999,B11,"[B12, B13, B14, B15][null]","[x(76|LoopExit)][null]"
20,"replace",63|If,2,63,-9999,B8,"[B9][null]","[x(60|LoopExit)][null]"
20,"replace",46|If,2,46,-9999,B6,"[B17][null]","[B7, B8, B9, B10, B11, B12, B13, B14, B15, B16][null]"
26,"putUTF8",20|If,2,20,-9999,B0,"[B1][null]","[B2][null]"
26,"putUTF8",73|If,2,73,-9999,B7,"[B8][null]","[B9][null]"
26,"putUTF8",66|If,2,66,-9999,B5,"[B6][null]","[B7, B8, B9][null]"
26,"putUTF8",58|If,2,58,-9999,B4,"[x(54|LoopExit)][null]","[B5, B6, B7, B8, B9][null]"
34,"charsFromByteBufferLength",26|If,2,26,-9999,B3,"[B5][null]","[x(23|LoopExit)][null]"
34,"charsFromByteBufferLength",16|If,2,16,-9999,B1,"[B2][null]","[B3, B5, B4][null]"
40,"charsFromByteBuffer",26|If,2,26,-9999,B3,"[B5][null]","[x(24|LoopExit)][null]"
40,"charsFromByteBuffer",17|If,2,17,-9999,B1,"[B2][null]","[B3, B5, B4][null]"
47,"compress",37|If,2,37,-9999,B8,"[B9][null]","[B11][null]"
47,"compress",31|If,2,31,-9999,B6,"[B7][null]","[B8, B9, B11][null]"
47,"compress",26|If,2,26,-9999,B4,"[B5][null]","[B6, B7, B8, B9, B11][null]"
47,"compress",20|If,2,20,-9999,B2,"[B3][null]","[B4, B5, B6, B7, B8, B9, B11][null]"
47,"compress",13|If,2,13,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B6, B7, B8, B9, B11][null]"
49,"regionMatches",74|If,2,74,-9999,B5,"[B6][null]","[x(70|LoopExit)][null]"
49,"regionMatches",63|If,2,63,-9999,B3,"[x(61|LoopExit)][null]","[B5, B6, B7][null]"
49,"regionMatches",25|If,2,25,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B6, B7][null]"
62,"hashN",22|If,2,22,-9999,B1,"[B3][null]","[x(19|LoopExit)][null]"
67,"putVal",13|If,2,13,-9999,B0,"[B1][null]","[B2][null]"
67,"putVal",68|If,2,68,-9999,B8,"[B9][null]","[B10][null]"
67,"putVal",53|If,2,53,-9999,B6,"[B7][null]","[B8, B9, B10][null]"
67,"putVal",48|If,2,48,-9999,B5,"[B6, B7, B8, B9, B10, B11][null]","[B12][null]"
67,"putVal",142|If,2,142,-9999,B17,"[B18][null]","[B19][null]"
67,"putVal",128|If,2,128,-9999,B23,"[B24][null]","[x(121|LoopExit)][null]"
67,"putVal",114|If,2,114,-9999,B21,"[x(111|LoopExit)][null]","[B23, B24, B25][null]"
67,"putVal",106|If,2,106,-9999,B20,"[B36][null]","[B21, B22, B23, B24, B25][null]"
67,"putVal",101|If,2,101,-9999,B16,"[x(96|LoopExit)][null]","[B20, B36, B21, B22, B23, B24, B25, B37][null]"
67,"putVal",75|If,2,75,-9999,B13,"[B14][null]","[B15, B16, B17, B18, B19, B20, B36, B21, B22, B23, B24, B25, B37][null]"
67,"putVal",37|If,2,37,-9999,B3,"[B4][null]","[B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18, B19, B20, B36, B21, B22, B23, B24, B25, B37][null]"
67,"putVal",187|If,2,187,-9999,B28,"[B29][null]","[B30][null]"
67,"putVal",160|If,2,160,-9999,B32,"[B33][null]","[B34][null]"
67,"putVal",155|If,2,155,-9999,B26,"[B27][null]","[B32, B33, B34, B35][null]"
76,"findLinear",33|If,2,33,-9999,B2,"[B3][null]","[x(29|LoopExit)][null]"
76,"findLinear",16|If,2,16,-9999,B1,"[x(13|LoopExit)][null]","[B2, B3, B4][null]"
120,"getHashIndex",18|If,2,18,-9999,B2,"[B3][null]","[B5][null]"
120,"getHashIndex",9|If,2,9,-9999,B0,"[B1][null]","[B2, B3, B5][null]"
145,"pollFirst",11|If,2,11,-9999,B0,"[B1][null]","[B2][null]"
149,"getNode",51|If,2,51,-9999,B7,"[B8][null]","[B9][null]"
149,"getNode",36|If,2,36,-9999,B5,"[B6][null]","[B7, B8, B9][null]"
149,"getNode",31|If,2,31,-9999,B4,"[B5, B6, B7, B8, B9, B10][null]","[B11][null]"
149,"getNode",114|If,2,114,-9999,B25,"[B28][null]","[x(111|LoopExit)][null]"
149,"getNode",105|If,2,105,-9999,B20,"[B21][null]","[x(97|LoopExit)][null]"
149,"getNode",88|If,2,88,-9999,B18,"[x(85|LoopExit)][null]","[B20, B21, B22][null]"
149,"getNode",80|If,2,80,-9999,B17,"[B24][null]","[B18, B19, B20, B21, B22, B23][null]"
149,"getNode",64|If,2,64,-9999,B14,"[B15][null]","[B16, B17, B24, B18, B19, B20, B21, B22, B23, B25, B28, B26][null]"
149,"getNode",60|If,2,60,-9999,B12,"[B13][null]","[B14, B15, B16, B17, B24, B18, B19, B20, B21, B22, B23, B25, B28, B26][null]"
149,"getNode",26|If,2,26,-9999,B2,"[B3][null]","[B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B24, B18, B19, B20, B21, B22, B23, B25, B28, B26][null]"
149,"getNode",10|If,2,10,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B24, B18, B19, B20, B21, B22, B23, B25, B28, B26][null]"
152,"findHash",39|If,2,39,-9999,B3,"[B4][null]","[B5][null]"
152,"findHash",28|If,2,28,-9999,B2,"[B3, B4, B5][null]","[B7][null]"
152,"findHash",17|If,2,17,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B7][null]"
170,"readUTF",17|If,2,17,-9999,B0,"[B1][null]","[B2][null]"
170,"readUTF",61|If,2,61,-9999,B5,"[B6][null]","[B7][null]"
170,"readUTF",51|If,2,51,-9999,B4,"[x(46|LoopExit)][null]","[B5, B6, B7][null]"
183,"setValue",11|If,2,11,-9999,B0,"[B1][null]","[B2][null]"
189,"put",44|If,2,44,-9999,B3,"[B4][null]","[B5][null]"
189,"put",28|If,2,28,-9999,B1,"[B2][null]","[B3, B4, B5][null]"
189,"put",104|If,2,104,-9999,B7,"[B8][null]","[B9][null]"
189,"put",73|If,2,73,-9999,B6,"[B10][null]","[B7, B8, B9][null]"
189,"put",15|If,2,15,-9999,B0,"[B1, B2, B3, B4, B5, B6, B10, B7, B8, B9, B11][null]","[B12][null]"
211,"setHashArray",11|If,2,11,-9999,B0,"[B1][null]","[B2][null]"
222,"putHashEntry",46|If,2,46,-9999,B8,"[B9][null]","[B10][null]"
222,"putHashEntry",75|If,2,75,-9999,B5,"[B6][null]","[B7][null]"
222,"putHashEntry",41|If,2,41,-9999,B4,"[B8, B9, B10][null]","[B5, B6, B7][null]"
222,"putHashEntry",26|If,2,26,-9999,B2,"[B3][null]","[B12][null]"
222,"putHashEntry",19|If,2,19,-9999,B0,"[B1][null]","[B2, B3, B12][null]"
252,"findLinear",33|If,2,33,-9999,B2,"[B3][null]","[x(29|LoopExit)][null]"
252,"findLinear",16|If,2,16,-9999,B1,"[x(13|LoopExit)][null]","[B2, B3, B4][null]"
275,"find",11|If,2,11,-9999,B0,"[B1][null]","[B2][null]"
279,"compareKeys",31|If,2,31,-9999,B7,"[B8][null]","[B9][null]"
279,"compareKeys",25|If,2,25,-9999,B4,"[B5][null]","[B7, B8, B9][null]"
279,"compareKeys",16|If,2,16,-9999,B2,"[B3][null]","[B4, B5, B7, B8, B9][null]"
279,"compareKeys",8|If,2,8,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B7, B8, B9, B6][null]"
285,"get",14|If,2,14,-9999,B0,"[B1][null]","[B2][null]"
294,"copyOf",37|If,2,37,-9999,B4,"[B5][null]","[B7][null]"
294,"copyOf",20|If,2,20,-9999,B2,"[B3][null]","[B4, B5, B7][null]"
294,"copyOf",9|If,2,9,-9999,B0,"[B1][null]","[B2, B3, B4, B5, B7, B6][null]"
301,"skipIdentifier",72|If,2,72,-9999,B16,"[B17][null]","[B18][null]"
301,"skipIdentifier",56|If,2,56,-9999,B14,"[B15][null]","[B16, B17, B18][null]"
301,"skipIdentifier",50|If,2,50,-9999,B12,"[B13][null]","[B14, B15, B16, B17, B18][null]"
301,"skipIdentifier",44|If,2,44,-9999,B10,"[B11][null]","[B12, B13, B14, B15, B16, B17, B18][null]"
301,"skipIdentifier",38|If,2,38,-9999,B8,"[B9][null]","[B10, B11, B12, B13, B14, B15, B16, B17, B18][null]"
301,"skipIdentifier",32|If,2,32,-9999,B5,"[x(30|LoopExit)][null]","[B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18][null]"
301,"skipIdentifier",23|If,2,23,-9999,B3,"[B4][null]","[B5, B6, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18][null]"
301,"skipIdentifier",17|If,2,17,-9999,B1,"[x(15|LoopExit)][null]","[B3, B4, B5, B6, B8, B9, B10, B11, B12, B13, B14, B15, B16, B17, B18][null]"
